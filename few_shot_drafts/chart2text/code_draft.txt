import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]categories = ['Very satisfied', 'Somewhat satisfied', 'Somewhat dissatisfied', 'Very dissatisfied'][[SEP]]values_2014 = [50, 35, 8, 6][[SEP]]values_2016 = [49, 40, 8, 4][[SEP]][[SEP]]x = np.arange(len(categories))  # the label locations[[SEP]]width = 0.35  # the width of the bars[[SEP]][[SEP]]fig, ax = plt.subplots()[[SEP]]rects1 = ax.bar(x - width/2, values_2014, width, label='2014')[[SEP]]rects2 = ax.bar(x + width/2, values_2016, width, label='2016')[[SEP]][[SEP]]# Add some text for labels, title and custom x-axis tick labels, etc.[[SEP]]ax.set_xlabel('Response')[[SEP]]ax.set_ylabel('Share of respondents')[[SEP]]ax.set_title('Customer satisfaction with Canadian Tire in Canada as of April 2014 and July 2016')[[SEP]]ax.set_xticks(x)[[SEP]]ax.set_xticklabels(categories)[[SEP]]ax.legend()[[SEP]][[SEP]]# Attach a text label above each bar in *rects*, displaying its height.[[SEP]]def autolabel(rects):[[SEP]]    """Attach a text label above each bar in *rects*, displaying its height."""[[SEP]]    for rect in rects:[[SEP]]        height = rect.get_height()[[SEP]]        ax.annotate('{}'.format(height),[[SEP]]                    xy=(rect.get_x() + rect.get_width() / 2, height),[[SEP]]                    xytext=(0, 3),  # 3 points vertical offset[[SEP]]                    textcoords="offset points",[[SEP]]                    ha='center', va='bottom')[[SEP]][[SEP]]autolabel(rects1)[[SEP]]autolabel(rects2)[[SEP]][[SEP]]fig.tight_layout()[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]labels = ['First debate (Sep 26, 2016)', 'Second debate (Oct 9, 2016)', 'Third debate (Oct 19, 2016)'][[SEP]]trump = [62, 64, 59][[SEP]]clinton = [38, 36, 41][[SEP]][[SEP]]x = np.arange(len(labels))  # the label locations[[SEP]]width = 0.35  # the width of the bars[[SEP]][[SEP]]fig, ax = plt.subplots()[[SEP]]rects1 = ax.bar(x - width/2, trump, width, label='Trump', color='blue')[[SEP]]rects2 = ax.bar(x + width/2, clinton, width, label='Clinton', color='darkblue')[[SEP]][[SEP]]# Add some text for labels, title and custom x-axis tick labels, etc.[[SEP]]ax.set_xlabel('Presidential Debates')[[SEP]]ax.set_ylabel('Share of Voice')[[SEP]]ax.set_title('Distribution of Twitter conversation surrounding the 2016 U.S. presidential debates between Clinton and Trump as of October 19, 2016')[[SEP]]ax.set_xticks(x)[[SEP]]ax.set_xticklabels(labels)[[SEP]]ax.legend()[[SEP]][[SEP]]# Attach a text label above each bar in *rects*, displaying its height.[[SEP]]def autolabel(rects):[[SEP]]    """Attach a text label above each bar in *rects*, displaying its height."""[[SEP]]    for rect in rects:[[SEP]]        height = rect.get_height()[[SEP]]        ax.annotate('{}'.format(height) + '%',[[SEP]]                    xy=(rect.get_x() + rect.get_width() / 2, height),[[SEP]]                    xytext=(0, 3),  # 3 points vertical offset[[SEP]]                    textcoords="offset points",[[SEP]]                    ha='center', va='bottom')[[SEP]][[SEP]]autolabel(rects1)[[SEP]]autolabel(rects2)[[SEP]][[SEP]]fig.tight_layout()[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]services = ['Acute care', 'Long term care', 'Disproportionate share hospital payments', 'Payments to Medicare', 'Managed Care & Health Plans'][[SEP]]percentages = [15, 18, 7, 3, 57][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.bar(services, percentages, color='blue')[[SEP]][[SEP]]# Add title and labels[[SEP]]plt.title('Distribution of Medicaid Spending in New Jersey in 2019, by Service')[[SEP]]plt.xlabel('Service')[[SEP]]plt.ylabel('Percentage of Medicaid Spending')[[SEP]][[SEP]]# Add percentage labels on top of the bars[[SEP]]for i, percentage in enumerate(percentages):[[SEP]]    plt.text(i, percentage + 1, f'{percentage}%', ha='center', va='bottom')[[SEP]][[SEP]]# Show plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = list(range(1999, 2019))[[SEP]]africa = [13327, 38713, 15731, 18023, 11550, 19266, 18215, 9303, 9097, 16944, 1698, 13836, 10808, 2401, 8147, 7, 28492, 100576, 41490, 54482][[SEP]]americas = [35825, 43840, 46894, 9477, 20712, 29947, 34031, 37427, 47561, 42344, 31384, 37942, 31586, 22801, 16747, 18377, 19115, 27511, 52839, 65775][[SEP]]eastern_mediterranean = [64361, 65935, 35431, 19861, 12351, 26492, 14241, 10965, 8176, 10144, 9912, 8777, 6658, 8524, 27958, 9608, 20391, 75680, 43053, 23145][[SEP]]europe = [385248, 243344, 160350, 169110, 188413, 251003, 242011, 89270, 71154, 71139, 41448, 26313, 27487, 39072, 35303, 10807, 10027, 20874, 26803, 20114][[SEP]]south_east_asia = [34250, 9395, 14994, 13563, 13779, 12861, 14532, 13363, 10969, 14820, 49012, 46072, 50626, 47086, 36352, 38327, 42937, 31739, 61783, 32018][[SEP]]western_pacific = [25111, 142866, 138941, 257898, 87719, 314647, 296032, 482993, 260916, 382349, 413230, 486449, 599473, 568050, 391809, 234473, 264774, 335304, 334654, 303978][[SEP]][[SEP]]# Plot[[SEP]]plt.figure(figsize=(14, 8))[[SEP]]plt.plot(years, africa, label='Africa', marker='o')[[SEP]]plt.plot(years, americas, label='Americas', marker='o')[[SEP]]plt.plot(years, eastern_mediterranean, label='Eastern Mediterranean', marker='o')[[SEP]]plt.plot(years, europe, label='Europe', marker='o')[[SEP]]plt.plot(years, south_east_asia, label='South-East Asia', marker='o')[[SEP]]plt.plot(years, western_pacific, label='Western Pacific', marker='o')[[SEP]][[SEP]]# Labels and title[[SEP]]plt.xlabel('Year')[[SEP]]plt.ylabel('Number of reported cases')[[SEP]]plt.title('Confirmed cases of mumps worldwide from 1999 to 2018, by region')[[SEP]]plt.legend()[[SEP]]plt.grid(True)[[SEP]][[SEP]]# Show plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]age_groups = ['18 to 34', '35 to 54', '55 to 64', '65 and older'][[SEP]]below_poverty = [120759, 239060, 289761, 490158][[SEP]]above_poverty = [1314883, 3755217, 2802112, 8099072][[SEP]][[SEP]]x = np.arange(len(age_groups))  # the label locations[[SEP]]width = 0.35  # the width of the bars[[SEP]][[SEP]]fig, ax = plt.subplots()[[SEP]]rects1 = ax.bar(x - width/2, below_poverty, width, label='Income below poverty level')[[SEP]]rects2 = ax.bar(x + width/2, above_poverty, width, label='Income above poverty level')[[SEP]][[SEP]]# Add some text for labels, title and custom x-axis tick labels, etc.[[SEP]]ax.set_xlabel('Age Groups')[[SEP]]ax.set_ylabel('Number of Veterans')[[SEP]]ax.set_title('Poverty status of veterans in the United States in 2019, by age')[[SEP]]ax.set_xticks(x)[[SEP]]ax.set_xticklabels(age_groups)[[SEP]]ax.legend()[[SEP]][[SEP]]# Function to add labels on top of the bars[[SEP]]def autolabel(rects):[[SEP]]    for rect in rects:[[SEP]]        height = rect.get_height()[[SEP]]        ax.annotate('{}'.format(height),[[SEP]]                    xy=(rect.get_x() + rect.get_width() / 2, height),[[SEP]]                    xytext=(0, 3),  # 3 points vertical offset[[SEP]]                    textcoords="offset points",[[SEP]]                    ha='center', va='bottom')[[SEP]][[SEP]]autolabel(rects1)[[SEP]]autolabel(rects2)[[SEP]][[SEP]]fig.tight_layout()[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]continents = ['Africa', 'Latin America and the Caribbean', 'Worldwide', 'Oceania', 'Asia', 'Northern America', 'Europe'][[SEP]]growth_rates = [2.5, 1.2, 1.2, 1.1, 1.1, 0.4, 0.0][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]bars = plt.bar(continents, growth_rates, color=['blue', 'blue', 'gray', 'blue', 'blue', 'blue', 'blue'])[[SEP]][[SEP]]# Add title and labels[[SEP]]plt.title('Natural rate of population growth by continent in 2014')[[SEP]]plt.xlabel('Continent')[[SEP]]plt.ylabel('Natural rate of growth (%)')[[SEP]][[SEP]]# Add data labels[[SEP]]for bar in bars:[[SEP]]    yval = bar.get_height()[[SEP]]    plt.text(bar.get_x() + bar.get_width()/2, yval + 0.05, f'{yval}%', ha='center', va='bottom')[[SEP]][[SEP]]# Show plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = list(range(2009, 2019 + 1))[[SEP]]age_0_14 = [26.5, 25.69, 24.42, 23.38, 22.62, 22.13, 21.83, 21.89, 22.04, 22.25, 22.42][[SEP]]age_15_64 = [70.8, 71.62, 72.99, 74.15, 75, 75.55, 75.89, 75.8, 75.61, 75.36, 75.13][[SEP]]age_65_plus = [2.7, 2.69, 2.58, 2.48, 2.38, 2.32, 2.28, 2.31, 2.34, 2.39, 2.45][[SEP]][[SEP]]# Plot[[SEP]]fig, ax = plt.subplots(figsize=(10, 6))[[SEP]][[SEP]]ax.bar(years, age_0_14, label='0-14 years', color='skyblue')[[SEP]]ax.bar(years, age_15_64, bottom=age_0_14, label='15-64 years', color='navy')[[SEP]]ax.bar(years, age_65_plus, bottom=[i+j for i,j in zip(age_0_14, age_15_64)], label='65 years and older', color='gray')[[SEP]][[SEP]]# Labels and Title[[SEP]]ax.set_xlabel('Year')[[SEP]]ax.set_ylabel('Percentage')[[SEP]]ax.set_title('Oman: Age structure from 2009 to 2019')[[SEP]]ax.legend()[[SEP]][[SEP]]plt.xticks(years)[[SEP]]plt.yticks(range(0, 101, 10))[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = [2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019][[SEP]]female_population = [42.72, 43.91, 45.15, 46.43, 47.74, 49.07, 50.43, 51.8, 53.19, 54.59, 56.01][[SEP]]male_population = [42.52, 43.73, 44.99, 46.3, 47.65, 49.02, 50.41, 51.81, 53.21, 54.64, 56.07][[SEP]][[SEP]]# Plotting[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.plot(years, female_population, marker='o', label='Female', color='blue')[[SEP]]plt.plot(years, male_population, marker='o', label='Male', color='black')[[SEP]][[SEP]]# Adding labels and title[[SEP]]plt.xlabel('Year')[[SEP]]plt.ylabel('Inhabitants in millions')[[SEP]]plt.title('Ethiopia: Total population from 2009 to 2019, by gender (in millions)')[[SEP]]plt.legend()[[SEP]][[SEP]]# Display the plot[[SEP]]plt.grid(True)[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]years = ['2009', '2019'][[SEP]]total = [39463, 49210][[SEP]]asia = [29747, 34450][[SEP]]americas = [7287, 9680][[SEP]]europe = [1259, 2300][[SEP]]oceania = [932, 1660][[SEP]]africa = [238, 1110][[SEP]][[SEP]]# Bar width[[SEP]]bar_width = 0.1[[SEP]][[SEP]]# Positions of the bars on the x-axis[[SEP]]r1 = np.arange(len(years))[[SEP]]r2 = [x + bar_width for x in r1][[SEP]]r3 = [x + bar_width for x in r2][[SEP]]r4 = [x + bar_width for x in r3][[SEP]]r5 = [x + bar_width for x in r4][[SEP]]r6 = [x + bar_width for x in r5][[SEP]][[SEP]]# Create the plot[[SEP]]plt.figure(figsize=(10, 6))[[SEP]][[SEP]]plt.bar(r1, total, color='blue', width=bar_width, edgecolor='grey', label='Total')[[SEP]]plt.bar(r2, asia, color='navy', width=bar_width, edgecolor='grey', label='Asia')[[SEP]]plt.bar(r3, americas, color='grey', width=bar_width, edgecolor='grey', label='Americas')[[SEP]]plt.bar(r4, europe, color='red', width=bar_width, edgecolor='grey', label='Europe')[[SEP]]plt.bar(r5, oceania, color='green', width=bar_width, edgecolor='grey', label='Oceania')[[SEP]]plt.bar(r6, africa, color='yellow', width=bar_width, edgecolor='grey', label='Africa')[[SEP]][[SEP]]# Add labels[[SEP]]plt.xlabel('Year', fontweight='bold')[[SEP]]plt.ylabel('Number of people (in thousands)', fontweight='bold')[[SEP]]plt.xticks([r + 2.5 * bar_width for r in range(len(years))], years)[[SEP]][[SEP]]# Add legend[[SEP]]plt.legend()[[SEP]][[SEP]]# Show the plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]countries = [[[SEP]]    "Greece", "Spain", "Slovakia", "France", "Belgium", "Italy", "Slovenia", [[SEP]]    "Netherlands", "Portugal", "Germany", "Estonia", "Latvia", "Finland", [[SEP]]    "Malta", "Cyprus", "Austria", "Ireland", "Luxembourg", "Average for euro area"[[SEP]]][[SEP]]data_2014 = [[[SEP]]    272309, 205554, 193520, 133649, 108320, 90730, 85908, 77353, 69341, 44791, [[SEP]]    35562, 33801, 20157, 15831, 14956, 12085, 10347, 3772, 59793[[SEP]]][[SEP]]data_2015 = [[[SEP]]    270524, 212877, 200828, 142591, 113253, 92577, 89709, 81014, 70463, 46047, [[SEP]]    33674, 32415, 19504, 15426, 15137, 12728, 11159, 3954, 62171[[SEP]]][[SEP]]data_2016 = [[[SEP]]    283783, 224484, 187269, 150243, 122511, 99218, 108665, 177396, 71232, 48462, [[SEP]]    34629, 34398, 19696, 16171, 15798, 14210, 12658, 4139, 67341[[SEP]]][[SEP]][[SEP]]# Bar width[[SEP]]bar_width = 0.25[[SEP]][[SEP]]# Positions of the bars on the x-axis[[SEP]]r1 = np.arange(len(countries))[[SEP]]r2 = [x + bar_width for x in r1][[SEP]]r3 = [x + bar_width for x in r2][[SEP]][[SEP]]# Create the plot[[SEP]]plt.figure(figsize=(10, 8))[[SEP]]plt.barh(r1, data_2014, color='blue', height=bar_width, edgecolor='grey', label='2014')[[SEP]]plt.barh(r2, data_2015, color='black', height=bar_width, edgecolor='grey', label='2015')[[SEP]]plt.barh(r3, data_2016, color='grey', height=bar_width, edgecolor='grey', label='2016')[[SEP]][[SEP]]# Labels and title[[SEP]]plt.xlabel('Population size')[[SEP]]plt.ylabel('Country')[[SEP]]plt.title('Population size per credit institution in the banking sector among eurozone countries from 2014 to 2016')[[SEP]]plt.yticks([r + bar_width for r in range(len(countries))], countries)[[SEP]][[SEP]]# Add a legend[[SEP]]plt.legend()[[SEP]][[SEP]]# Show the plot[[SEP]]plt.tight_layout()[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = [2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020][[SEP]]agriculture = [43.39, 43.49, 42.89, 42.24, 42.23, 41.01, 42.27, 39.85, 37.42, 36.66, 35.89][[SEP]]industry = [21.42, 21.77, 22.34, 22.92, 22.87, 24.02, 23.59, 24.3, 24.99, 25.33, 25.79][[SEP]]services = [35.19, 34.74, 34.77, 34.84, 34.89, 34.97, 34.13, 35.85, 37.6, 38.01, 38.32][[SEP]][[SEP]]# Plot[[SEP]]fig, ax = plt.subplots()[[SEP]][[SEP]]ax.stackplot(years, agriculture, industry, services, labels=['Agriculture', 'Industry', 'Services'], colors=['#1f77b4', '#ff7f0e', '#2ca02c'])[[SEP]][[SEP]]# Labels and title[[SEP]]ax.set_xlabel('Year')[[SEP]]ax.set_ylabel('Share of total employment (%)')[[SEP]]ax.set_title('Pakistan: Distribution of employment by economic sector (2010-2020)')[[SEP]]ax.legend(loc='upper right')[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = [2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016][[SEP]]homicide_rates = [5.1, 5.1, 6.1, 6.8, 9.0, 10.0, 10.0, 9.3, 10.0, 9.5][[SEP]][[SEP]]# Create the bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.bar(years, homicide_rates, color='blue')[[SEP]][[SEP]]# Title and labels[[SEP]]plt.title('Homicide rate in Haiti from 2007 to 2016 (in number of homicides per 100,000 inhabitants)')[[SEP]]plt.xlabel('Year')[[SEP]]plt.ylabel('Homicides per 100,000 inhabitants')[[SEP]][[SEP]]# Show the plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]months = ['Nov\'17', 'Dec\'17', 'Jan\'18', 'Feb\'18', 'Mar\'18', 'Apr\'18', 'May\'18', 'Jun\'18', 'Jul\'18', 'Aug\'18', 'Sep\'18', 'Oct\'18'][[SEP]]time_spent = [11, 9, 10, 11, 10, 11, 11, 11, 11, 11, 11, 11][[SEP]][[SEP]]# Plotting the data[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.bar(months, time_spent, color='blue')[[SEP]][[SEP]]# Adding titles and labels[[SEP]]plt.title('Average time spent on porn websites by Russian adults per day in 2018, by month (in minutes)')[[SEP]]plt.xlabel('Month')[[SEP]]plt.ylabel('Time in minutes per day')[[SEP]][[SEP]]# Display the plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]years = ['2012', '2013', '2014', '2015', '2016'][[SEP]]eleven_or_more = [51.3, 55.9, 66.8, 67.4, 63.5][[SEP]]one_to_ten = [44.6, 38.9, 30.9, 28.5, 31.4][[SEP]]zero = [4.1, 5.2, 2.3, 4.1, 5.1][[SEP]][[SEP]]# Plotting[[SEP]]barWidth = 0.5[[SEP]]r1 = np.arange(len(years))[[SEP]]r2 = [x + barWidth for x in r1][[SEP]]r3 = [x + barWidth for x in r2][[SEP]][[SEP]]plt.bar(r1, eleven_or_more, color='#1f77b4', width=barWidth, edgecolor='grey', label='11% or more of bookings in first/business class')[[SEP]]plt.bar(r2, one_to_ten, color='#2ca02c', width=barWidth, edgecolor='grey', label='1-10% of bookings in first/business class')[[SEP]]plt.bar(r3, zero, color='#d62728', width=barWidth, edgecolor='grey', label='0% of bookings in first/business class')[[SEP]][[SEP]]# Adding labels[[SEP]]plt.xlabel('Year', fontweight='bold')[[SEP]]plt.ylabel('Percentage', fontweight='bold')[[SEP]]plt.xticks([r + barWidth for r in range(len(years))], years)[[SEP]]plt.title('For your 2015 year-to-date business travel air booking, what percentage of clients are purchasing "front of the cabin"?')[[SEP]][[SEP]]# Adding legend[[SEP]]plt.legend()[[SEP]][[SEP]]# Show the plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = [2008, 2010, 2012, 2014, 2016, 2018][[SEP]]population = [3809.6, 3875.7, 3930.7, 3989.1, 4044.5, 4091.4][[SEP]][[SEP]]# Create the bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.bar(years, population, color='blue')[[SEP]][[SEP]]# Add title and labels[[SEP]]plt.title('Total population in the state of Oaxaca, Mexico between 2008 and 2018 (in 1,000 inhabitants)')[[SEP]]plt.xlabel('Year')[[SEP]]plt.ylabel('Number of inhabitants in thousands')[[SEP]][[SEP]]# Add data labels on top of the bars[[SEP]]for i in range(len(years)):[[SEP]]    plt.text(years[i], population[i] + 20, str(population[i]), ha='center', va='bottom')[[SEP]][[SEP]]# Show the plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]years = ['2015', '2016', '2017'][[SEP]]smartphone = [33, 42, 47][[SEP]]desktop = [54, 45, 41][[SEP]]tablet = [13, 13, 12][[SEP]][[SEP]]# Bar width[[SEP]]bar_width = 0.25[[SEP]][[SEP]]# Positions of the bars on the x-axis[[SEP]]r1 = np.arange(len(years))[[SEP]]r2 = [x + bar_width for x in r1][[SEP]]r3 = [x + bar_width for x in r2][[SEP]][[SEP]]# Create the plot[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.bar(r1, smartphone, color='blue', width=bar_width, edgecolor='grey', label='Smartphone')[[SEP]]plt.bar(r2, desktop, color='black', width=bar_width, edgecolor='grey', label='Desktop')[[SEP]]plt.bar(r3, tablet, color='grey', width=bar_width, edgecolor='grey', label='Tablet')[[SEP]][[SEP]]# Add labels[[SEP]]plt.xlabel('Year', fontweight='bold')[[SEP]]plt.ylabel('Share of visitors', fontweight='bold')[[SEP]]plt.title('Distribution of Pornhub.com website traffic in Belgium from 2015 to 2017, by device')[[SEP]]plt.xticks([r + bar_width for r in range(len(years))], years)[[SEP]][[SEP]]# Add percentage labels on top of the bars[[SEP]]for i in range(len(r1)):[[SEP]]    plt.text(r1[i] - 0.05, smartphone[i] + 1, f'{smartphone[i]}%', color='black', fontweight='bold')[[SEP]]    plt.text(r2[i] - 0.05, desktop[i] + 1, f'{desktop[i]}%', color='black', fontweight='bold')[[SEP]]    plt.text(r3[i] - 0.05, tablet[i] + 1, f'{tablet[i]}%', color='black', fontweight='bold')[[SEP]][[SEP]]# Add legend[[SEP]]plt.legend()[[SEP]][[SEP]]# Show the plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"][[SEP]]prices_2015 = [4.57, 4.61, 4.59, 4.55, 4.62, 4.54, 4.6, 4.56, 4.69, 4.67, 4.7, 4.66][[SEP]]prices_2016 = [4.77, 4.93, 4.92, 4.96, 4.93, 4.85, 4.93, 4.92, 4.83, 4.66, 4.66, 4.7][[SEP]]prices_2017 = [4.76, 4.78, 4.9, 4.88, 4.88, 4.94, 4.94, 4.91, 4.93, 4.82, 4.78, 4.78][[SEP]]prices_2018 = [4.86, 4.86, 4.79, 4.85, 4.66, 4.62, 4.74, 4.69, 4.74, 4.77, 4.81, 4.77][[SEP]]prices_2019 = [4.94, 4.98, 4.99, 4.85, 4.97, 4.85, 5.16, 5.03, 4.97, 5.1, 5.05, 5.0][[SEP]]prices_2020 = [4.96, 5.3, 5.21, 5.17, 5.18, 5.08, None, None, None, None, None, None][[SEP]][[SEP]]# Plotting[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.plot(months, prices_2015, marker='o', label='2015', color='blue')[[SEP]]plt.plot(months, prices_2016, marker='o', label='2016', color='black')[[SEP]]plt.plot(months, prices_2017, marker='o', label='2017', color='grey')[[SEP]]plt.plot(months, prices_2018, marker='o', label='2018', color='red')[[SEP]]plt.plot(months, prices_2019, marker='o', label='2019', color='green')[[SEP]]plt.plot(months, prices_2020, marker='o', label='2020', color='orange')[[SEP]][[SEP]]# Adding titles and labels[[SEP]]plt.title('Average Retail Price for Butter in Canada (2015-2020)')[[SEP]]plt.xlabel('Month')[[SEP]]plt.ylabel('Average Retail Price (in Canadian dollars per 454 grams)')[[SEP]]plt.legend()[[SEP]][[SEP]]# Display the plot[[SEP]]plt.grid(True)[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data to plot[[SEP]]labels = 'Totally agree', 'Somewhat agree', 'Neither agree nor disagree', 'Somewhat disagree', 'Totally disagree'[[SEP]]sizes = [22, 38, 18, 12, 7][[SEP]]colors = ['#1f77b4', '#2ca02c', '#d62728', '#ff7f0e', '#9467bd'][[SEP]]explode = (0.1, 0, 0, 0, 0)  # explode 1st slice[[SEP]][[SEP]]# Plot[[SEP]]plt.figure(figsize=(10, 7))[[SEP]]plt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%', shadow=True, startangle=140)[[SEP]]plt.title('To what extent do you agree or disagree with the statement: "I am worried that the coronavirus will slow down growth in the Swedish economy"?')[[SEP]]plt.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]categories = ['U.S. adults', 'Reddit users', 'Reddit news users'][[SEP]]college_degree = [28, 36, 38][[SEP]]some_college = [31, 42, 44][[SEP]]high_school_or_less = [41, 21, 18][[SEP]][[SEP]]# Bar width[[SEP]]bar_width = 0.5[[SEP]][[SEP]]# Positions of the bars on the x-axis[[SEP]]r1 = np.arange(len(categories))[[SEP]]r2 = [x + bar_width for x in r1][[SEP]]r3 = [x + bar_width for x in r2][[SEP]][[SEP]]# Create the plot[[SEP]]fig, ax = plt.subplots()[[SEP]][[SEP]]# Create bars[[SEP]]ax.bar(r1, college_degree, color='blue', width=bar_width, edgecolor='grey', label='College degree')[[SEP]]ax.bar(r2, some_college, color='navy', width=bar_width, edgecolor='grey', label='Some college')[[SEP]]ax.bar(r3, high_school_or_less, color='grey', width=bar_width, edgecolor='grey', label='High school or less')[[SEP]][[SEP]]# Add xticks on the middle of the group bars[[SEP]]ax.set_xlabel('Category', fontweight='bold')[[SEP]]ax.set_ylabel('Percentage', fontweight='bold')[[SEP]]ax.set_xticks([r + bar_width for r in range(len(categories))])[[SEP]]ax.set_xticklabels(categories)[[SEP]][[SEP]]# Create legend & Show graphic[[SEP]]plt.legend()[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = [2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019][[SEP]]age_0_14 = [16.11, 15.74, 15.73, 15.58, 15.37, 15.23, 15.24, 14.92, 14.8, 14.77, 14.69][[SEP]]age_15_64 = [70.04, 70.3, 70.25, 70.3, 70.4, 70.42, 70.28, 70, 69.45, 68.76, 68.11][[SEP]]age_65_plus = [13.84, 13.96, 14.01, 14.12, 14.23, 14.34, 14.48, 15.08, 15.75, 16.47, 17.2][[SEP]][[SEP]]# Plot[[SEP]]fig, ax = plt.subplots()[[SEP]][[SEP]]ax.stackplot(years, age_0_14, age_15_64, age_65_plus, labels=['0-14 years', '15-64 years', '65 years and older'], colors=['#4f81bd', '#c0504d', '#9bbb59'])[[SEP]][[SEP]]# Labels and title[[SEP]]ax.set_title('Bosnia & Herzegovina: Age structure from 2009 to 2019')[[SEP]]ax.set_xlabel('Year')[[SEP]]ax.set_ylabel('Percentage of total population')[[SEP]]ax.legend(loc='upper right')[[SEP]][[SEP]]plt.show()
