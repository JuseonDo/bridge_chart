import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data to plot[[SEP]]labels = ['Germany', 'United States, Canada', 'Rest of Europe', 'United Kingdom, Ireland', 'Rest of world', 'Not identified'][[SEP]]sizes = [45, 21, 15, 9, 4, 6][[SEP]]colors = ['#1f77b4', '#2ca02c', '#d62728', '#ff7f0e', '#bcbd22', '#17becf'][[SEP]]explode = (0.1, 0, 0, 0, 0, 0)  # explode 1st slice[[SEP]][[SEP]]# Plot[[SEP]]plt.figure(figsize=(10, 7))[[SEP]]plt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%', shadow=True, startangle=140)[[SEP]]plt.title('BASF Shareholder Structure in 2019, by Region')[[SEP]]plt.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]categories = ['Every year', 'Every other year', 'Every few years', 'Less often than every few years', 'I never spring clean'][[SEP]]values = [78, 8, 5, 3, 7][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]bars = plt.bar(categories, values, color='blue')[[SEP]][[SEP]]# Add title and labels[[SEP]]plt.title('How often, if ever, do you or someone in your household engage in spring cleaning?')[[SEP]]plt.xlabel('Frequency')[[SEP]]plt.ylabel('Share of respondents (%)')[[SEP]][[SEP]]# Add value labels on top of the bars[[SEP]]for bar in bars:[[SEP]]    yval = bar.get_height()[[SEP]]    plt.text(bar.get_x() + bar.get_width()/2, yval + 1, f'{yval}%', ha='center', va='bottom')[[SEP]][[SEP]]# Show plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]categories = ['Very favorable', 'Somewhat favorable', 'Neither favorable nor unfavorable', 'Somewhat unfavorable', 'Very unfavorable', "Don't know"][[SEP]]values = [14, 12, 33, 19, 17, 4][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.bar(categories, values, color='blue')[[SEP]][[SEP]]# Title and labels[[SEP]]plt.title('Do you generally have a favorable or unfavorable opinion of tattoos?')[[SEP]]plt.xlabel('Response')[[SEP]]plt.ylabel('Share of respondents (%)')[[SEP]][[SEP]]# Show percentage on top of bars[[SEP]]for i, value in enumerate(values):[[SEP]]    plt.text(i, value + 0.5, f'{value}%', ha='center')[[SEP]][[SEP]]# Show plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]countries = ['Mexico', 'Brazil', 'Colombia', 'Spain', 'Puerto Rico'][[SEP]]awards = [136, 135, 73, 69, 63][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]bars = plt.bar(countries, awards, color='blue')[[SEP]][[SEP]]# Add title and labels[[SEP]]plt.title('Countries with the most Latin Grammy Awards as of 2015')[[SEP]]plt.xlabel('Country')[[SEP]]plt.ylabel('Number of awards')[[SEP]][[SEP]]# Add value labels on top of the bars[[SEP]]for bar in bars:[[SEP]]    yval = bar.get_height()[[SEP]]    plt.text(bar.get_x() + bar.get_width()/2, yval - 5, int(yval), ha='center', va='bottom', color='white', fontweight='bold')[[SEP]][[SEP]]# Show plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]age_groups = ['18-29', '30-49', '50-64', '65+'][[SEP]]share_of_adults = [78, 81, 70, 55][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]bars = plt.bar(age_groups, share_of_adults, color='blue')[[SEP]][[SEP]]# Add title and labels[[SEP]]plt.title('Share of adults in the United States who owned a desktop or laptop computer in 2015, by age group')[[SEP]]plt.xlabel('Age')[[SEP]]plt.ylabel('Share of adults')[[SEP]][[SEP]]# Add percentage labels on top of the bars[[SEP]]for bar in bars:[[SEP]]    yval = bar.get_height()[[SEP]]    plt.text(bar.get_x() + bar.get_width()/2 - 0.1, yval + 1, f'{yval}%', ha='center', va='bottom')[[SEP]][[SEP]]# Show plot[[SEP]]plt.ylim(0, 100)[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]responses = [[[SEP]]    "A travel insurance policy that covered disruption caused by the virus",[[SEP]]    "Flight discounts",[[SEP]]    "Flexibility",[[SEP]]    "Accommodation discounts",[[SEP]]    "Taking a trip within my own country instead",[[SEP]]    "If the situation in the UK became worse",[[SEP]]    "No change fees",[[SEP]]    "Attraction discounts",[[SEP]]    "Being able to speak to an agent about safest/most effective travel plans",[[SEP]]    "I could not be persuaded to book a vacation during this time"[[SEP]]][[SEP]]share_of_respondents = [20, 20, 16, 16, 16, 8, 14, 9, 8, 48][[SEP]][[SEP]]# Plot[[SEP]]fig, ax = plt.subplots(figsize=(10, 6))[[SEP]]bars = ax.barh(responses, share_of_respondents, color='royalblue')[[SEP]][[SEP]]# Add data labels[[SEP]]for bar in bars:[[SEP]]    width = bar.get_width()[[SEP]]    label_y = bar.get_y() + bar.get_height() / 2[[SEP]]    ax.text(width + 1, label_y, f'{width}%', va='center')[[SEP]][[SEP]]# Labels and title[[SEP]]ax.set_xlabel('Share of respondents')[[SEP]]ax.set_title('Which of the following, if any, would persuade you to book a vacation during the coronavirus outbreak?')[[SEP]][[SEP]]# Invert y-axis to have the highest value on top[[SEP]]ax.invert_yaxis()[[SEP]][[SEP]]plt.tight_layout()[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = [2014, 2015, 2016, 2017, 2018, 2019][[SEP]]revenue = [1.63, 1.68, 1.73, 1.76, 1.9, 2.07][[SEP]][[SEP]]# Create the bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.bar(years, revenue, color='blue')[[SEP]][[SEP]]# Add title and labels[[SEP]]plt.title('Annual revenue of ServiceMaster from FY 2014 to FY 2019 (in billion U.S. dollars)')[[SEP]]plt.xlabel('Year')[[SEP]]plt.ylabel('Revenue in billion U.S. dollars')[[SEP]][[SEP]]# Add data labels on top of the bars[[SEP]]for i in range(len(years)):[[SEP]]    plt.text(years[i], revenue[i] + 0.02, str(revenue[i]), ha='center', va='bottom')[[SEP]][[SEP]]# Show the plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = [2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018][[SEP]]num_companies = [281, 271, 265, 256, 240, 231, 222, 215][[SEP]][[SEP]]# Create the bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.bar(years, num_companies, color='blue')[[SEP]][[SEP]]# Add title and labels[[SEP]]plt.title('Number of companies operating on the domestic insurance market in Spain from 2011 to 2018')[[SEP]]plt.xlabel('Year')[[SEP]]plt.ylabel('Number of companies')[[SEP]][[SEP]]# Add data labels on top of the bars[[SEP]]for i in range(len(years)):[[SEP]]    plt.text(years[i], num_companies[i] + 2, str(num_companies[i]), ha='center')[[SEP]][[SEP]]# Show the plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = [2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018][[SEP]]population_density = [26.66, 27.06, 27.44, 27.8, 28.14, 28.49, 28.87, 29.28, 29.71, 30.6][[SEP]][[SEP]]# Create the bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.bar(years, population_density, color='blue')[[SEP]][[SEP]]# Add title and labels[[SEP]]plt.title('Population density of Laos from 2009 to 2018 (in people per square kilometer)')[[SEP]]plt.xlabel('Year')[[SEP]]plt.ylabel('Population density in people per square kilometer')[[SEP]][[SEP]]# Add data labels on top of the bars[[SEP]]for i in range(len(years)):[[SEP]]    plt.text(years[i], population_density[i] + 0.1, str(population_density[i]), ha='center')[[SEP]][[SEP]]# Show the plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data to plot[[SEP]]labels = 'Industrial machinery and equipment', 'Consumer and general products', 'Electric and electronic products', 'Transportation equipment', 'Building construction'[[SEP]]sizes = [7, 10, 20, 20, 43][[SEP]]colors = ['#99ff99', '#ff9999', '#c2c2f0', '#ffcc99', '#66b3ff'][[SEP]]explode = (0, 0, 0, 0, 0.1)  # explode the 1st slice (i.e. 'Building construction')[[SEP]][[SEP]]# Plot[[SEP]]plt.figure(figsize=(10, 7))[[SEP]]plt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%',[[SEP]]        shadow=True, startangle=140)[[SEP]][[SEP]]plt.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.[[SEP]]plt.title('Use of copper and copper alloys products in the United States in 2019, by purpose')[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]countries = ['Canada*', 'Australia', 'United States', 'United Kingdom', 'South Korea*', 'Mexico*', 'Japan', 'France', 'Germany', 'Turkey'][[SEP]]values = [7.15, 4.57, 2.97, 2.53, 1.83, 1.74, 1.64, 1.49, 1.49, 0.7][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]bars = plt.barh(countries, values, color='blue')[[SEP]][[SEP]]# Add data labels[[SEP]]for bar in bars:[[SEP]]    plt.text(bar.get_width() + 0.1, bar.get_y() + bar.get_height()/2, f'{bar.get_width()}%', va='center')[[SEP]][[SEP]]# Title and labels[[SEP]]plt.title('Energy-related industry value added as a percentage of GDP in 2015, by select country')[[SEP]]plt.xlabel('Share of gross domestic product')[[SEP]]plt.ylabel('Country')[[SEP]][[SEP]]# Show plot[[SEP]]plt.gca().invert_yaxis()[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data to plot[[SEP]]labels = ['Under 15,000', '15,000 to 24,999', '25,000 to 34,999', '35,000 to 49,999', [[SEP]]          '50,000 to 74,999', '75,000 to 99,999', '100,000 to 149,999', [[SEP]]          '150,000 to 199,999', '200,000 and over'][[SEP]]sizes = [5, 4.8, 6.8, 10.5, 16.5, 13.5, 18.8, 10.5, 13.6][[SEP]]colors = ['#ff9999','#66b3ff','#99ff99','#ffcc99','#c2c2f0','#ffb3e6', '#c4e17f', '#76d7c4', '#ff6f61'][[SEP]]explode = (0.1, 0, 0, 0, 0, 0, 0, 0, 0)  # explode 1st slice[[SEP]][[SEP]]# Plot[[SEP]]plt.figure(figsize=(10, 7))[[SEP]]plt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%',[[SEP]]        shadow=True, startangle=140)[[SEP]][[SEP]]plt.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.[[SEP]]plt.title('Percentage distribution of U.S. families, by household income level in 2019')[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]categories = ['Metro / small bus*', 'Bus', 'Private car / motorbike', 'Walking', 'Bicycle', 'Taxi, Uber or similar', 'Other'][[SEP]]values = [83, 34, 28, 27, 12, 11, 5][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]bars = plt.bar(categories, values, color='blue')[[SEP]][[SEP]]# Add value labels on top of the bars[[SEP]]for bar in bars:[[SEP]]    yval = bar.get_height()[[SEP]]    plt.text(bar.get_x() + bar.get_width()/2, yval + 1, f'{yval}%', ha='center', va='bottom')[[SEP]][[SEP]]# Title and labels[[SEP]]plt.title('Most frequent means of transport used in Chile in 2017')[[SEP]]plt.xlabel('Response')[[SEP]]plt.ylabel('Share of respondents')[[SEP]][[SEP]]# Show plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = [2004, 2006, 2007, 2009, 2010, 2012, 2013, 2014, 2015, 2017, 2018][[SEP]]percentages = [16, 23, 24, 37, 41, 56, 64, 77, 73, 85, 84][[SEP]][[SEP]]# Create the bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.bar(years, percentages, color='blue')[[SEP]][[SEP]]# Title and labels[[SEP]]plt.title('Usage of Electronic Medical Records (EMR) among Primary Care Physicians in Canada (2004-2018)')[[SEP]]plt.xlabel('Year')[[SEP]]plt.ylabel('Percentage of Physicians')[[SEP]][[SEP]]# Show the plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data to plot[[SEP]]labels = 'adidas', 'Reebok', 'Other'[[SEP]]sizes = [90.97, 7.39, 1.64][[SEP]]colors = ['#1f77b4', '#ff7f0e', '#2ca02c'][[SEP]]explode = (0.1, 0, 0)  # explode 1st slice[[SEP]][[SEP]]# Plot[[SEP]]plt.figure(figsize=(8, 6))[[SEP]]plt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.2f%%',[[SEP]]        shadow=True, startangle=140)[[SEP]]plt.title('Sales share of the adidas Group worldwide in 2019, by brand')[[SEP]]plt.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]categories = ['Best Actor', 'Best Actress', 'Best Supporting Actor', 'Best Supporting Actress'][[SEP]]average_ages = [44, 36, 49, 40][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]bars = plt.bar(categories, average_ages, color='blue')[[SEP]][[SEP]]# Add title and labels[[SEP]]plt.title('Average age of Academy Awards winners in acting categories as of 2018')[[SEP]]plt.xlabel('Category')[[SEP]]plt.ylabel('Average age')[[SEP]][[SEP]]# Add data labels on top of the bars[[SEP]]for bar in bars:[[SEP]]    yval = bar.get_height()[[SEP]]    plt.text(bar.get_x() + bar.get_width()/2 - 0.1, yval + 1, int(yval), ha='center', va='bottom', color='black', fontweight='bold')[[SEP]][[SEP]]# Show the plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = ['2008', '2009', '2010*', '2011*', '2012*', '2013*', '2014*', '2015*'][[SEP]]demand = [54.0, 49.1, 50.7, 52.8, 55.8, 58.5, 61.2, 63.9][[SEP]][[SEP]]# Create the bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.bar(years, demand, color='blue')[[SEP]][[SEP]]# Add title and labels[[SEP]]plt.title('Steel demand in South Korea from 2008 to 2015 (in million metric tons)')[[SEP]]plt.xlabel('Year')[[SEP]]plt.ylabel('Demand in million metric tons')[[SEP]][[SEP]]# Add data labels on top of the bars[[SEP]]for i, value in enumerate(demand):[[SEP]]    plt.text(i, value + 0.5, str(value), ha='center')[[SEP]][[SEP]]# Show the plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]quarters = ['Q1 \'14', 'Q2 \'14', 'Q3 \'14', 'Q4 \'14', 'Q1 \'15', 'Q2 \'15', 'Q3 \'15', 'Q4 \'15'][[SEP]]values = [14.0, 17.0, 23.0, 30.0, 51.85, 78.15, 105.28, 96.33][[SEP]][[SEP]]# Create the bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.bar(quarters, values, color='blue')[[SEP]][[SEP]]# Title and labels[[SEP]]plt.title('Quarterly Market Value of Equity Crowdfunding in the UK (2014-2015)')[[SEP]]plt.xlabel('Quarter')[[SEP]]plt.ylabel('Market Value (in million GBP)')[[SEP]][[SEP]]# Show the plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = [2011, 2014, 2018][[SEP]]ownership_rate = [12, 20, 21][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.bar(years, ownership_rate, color='blue')[[SEP]][[SEP]]# Add title and labels[[SEP]]plt.title('Ownership rate of credit cards in Malaysia from 2011 to 2018')[[SEP]]plt.xlabel('Year')[[SEP]]plt.ylabel('Share of respondents (%)')[[SEP]][[SEP]]# Add data labels[[SEP]]for i, rate in enumerate(ownership_rate):[[SEP]]    plt.text(years[i], rate + 0.5, f'{rate}%', ha='center', va='bottom')[[SEP]][[SEP]]# Show plot[[SEP]]plt.ylim(0, 25)[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = [2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018][[SEP]]doctors = [202.32, 209.77, 216.02, 222.57, 228.03, 243.01, 247.66, 256.13, 267.95, 283.28, 286.68, 297.31, 305.99][[SEP]][[SEP]]# Plotting the data[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.bar(years, doctors, color='blue')[[SEP]][[SEP]]# Adding titles and labels[[SEP]]plt.title('Number of Physicians in Mexico from 2006 to 2018 (in 1,000s)')[[SEP]]plt.xlabel('Year')[[SEP]]plt.ylabel('Number of doctors in thousands')[[SEP]][[SEP]]# Adding data labels on top of the bars[[SEP]]for i in range(len(years)):[[SEP]]    plt.text(years[i], doctors[i] + 2, str(doctors[i]), ha='center')[[SEP]][[SEP]]# Display the plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]candidates = ['Hillary Clinton', 'Donald Trump'][[SEP]]votes = [232, 306][[SEP]]colors = ['blue', 'red'][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]bars = plt.bar(candidates, votes, color=colors)[[SEP]][[SEP]]# Add title and labels[[SEP]]plt.title('Results of votes for electoral college in the 2016 presidential elections in the United States')[[SEP]]plt.xlabel('Presidential Candidate')[[SEP]]plt.ylabel('Number of Electoral Votes')[[SEP]][[SEP]]# Add text annotations[[SEP]]for bar in bars:[[SEP]]    yval = bar.get_height()[[SEP]]    plt.text(bar.get_x() + bar.get_width()/2, yval - 20, int(yval), ha='center', va='bottom', color='white', fontsize=12)[[SEP]][[SEP]]# Show plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data to plot[[SEP]]labels = 'Other', 'Canada', 'Brazil', 'Russia'[[SEP]]sizes = [48, 15, 17, 20][[SEP]]colors = ['#8B0000', '#C0C0C0', '#000080', '#1E90FF'][[SEP]]explode = (0.1, 0, 0, 0)  # explode 1st slice[[SEP]][[SEP]]# Plot[[SEP]]plt.figure(figsize=(8, 6))[[SEP]]plt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%', shadow=True, startangle=140)[[SEP]]plt.title('Distribution of Silicon Imports to the United States (2015-2018) by Country of Origin')[[SEP]]plt.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]cities = [[[SEP]]    "Toluca", "Nezahualcóyotl", "Ecatepec de Morelos", "Tlalnepantla", "Garcia", "Minatitlan",[[SEP]]    "Alvaro Obregon", "Apodaca", "Gustavo A. Madero", "Cuernavaca", "Santa Catarina", "León",[[SEP]]    "Salamanca", "General Escobedo", "Patzcuaro", "San Nicolas de los Garza", "Mexico City",[[SEP]]    "Celaya", "Coyoacan", "Monterrey", "Irapuato", "Guadalajara", "Vinas del Sol", "Tlalpan", "Mexicali"[[SEP]]][[SEP]]pm25_concentration = [[[SEP]]    29.4, 27.1, 25.4, 24.8, 24.3, 24.0, 23.9, 23.2, 22.8, 22.8, 22.6, 20.9, 20.9, 20.9, 20.8, 20.8, 20.5,[[SEP]]    20.0, 19.6, 19.3, 19.2, 18.9, 18.4, 18.4, 17.7[[SEP]]][[SEP]][[SEP]]# Plot[[SEP]]fig, ax = plt.subplots(figsize=(10, 8))[[SEP]]bars = ax.barh(cities, pm25_concentration, color='skyblue')[[SEP]]ax.set_xlabel('PM2.5 concentration in μg/m³')[[SEP]]ax.set_title('Cities with the highest air particulate matter concentration in Mexico in 2019 (PM2.5 per cubic meter)')[[SEP]]ax.invert_yaxis()  # Invert y-axis to have the highest value on top[[SEP]][[SEP]]# Label with specially formatted floats[[SEP]]for bar in bars:[[SEP]]    width = bar.get_width()[[SEP]]    label_y = bar.get_y() + bar.get_height() / 2[[SEP]]    ax.text(width, label_y, f'{width:.1f}', va='center', ha='left')[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = [2005, 2007, 2009, 2011, 2013, 2015, 2017][[SEP]]share = [99, 97, 96, 96, 96, 98, 98][[SEP]][[SEP]]# Create the bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.bar(years, share, color='blue')[[SEP]][[SEP]]# Title and labels[[SEP]]plt.title('Share of households owning freezers in Great Britain from 2005 to 2017')[[SEP]]plt.xlabel('Year')[[SEP]]plt.ylabel('Share of respondents (%)')[[SEP]][[SEP]]# Display the values on top of the bars[[SEP]]for i in range(len(years)):[[SEP]]    plt.text(years[i], share[i] + 0.5, f'{share[i]}%', ha='center')[[SEP]][[SEP]]# Show the plot[[SEP]]plt.ylim(0, 110)[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]categories = ['Several times a day', 'Every day', 'Several times a week', 'At least once a week', 'At least once a month', 'Less than once a month', 'Never'][[SEP]]percentages = [53, 22, 11, 3, 1, 1, 8][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.bar(categories, percentages, color='blue')[[SEP]][[SEP]]# Title and labels[[SEP]]plt.title('How often, if at all, do you use your mobile phone to access email or internet services?')[[SEP]]plt.xlabel('Response')[[SEP]]plt.ylabel('Percentage of respondents')[[SEP]][[SEP]]# Display percentage on top of bars[[SEP]]for i, percentage in enumerate(percentages):[[SEP]]    plt.text(i, percentage + 1, f'{percentage}%', ha='center')[[SEP]][[SEP]]# Show plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = ['2018', '2019'][[SEP]]percentages = [22, 25][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(8, 6))[[SEP]]bars = plt.bar(years, percentages, color='blue')[[SEP]][[SEP]]# Add title and labels[[SEP]]plt.title('Past year recreational marijuana and cannabis users in Canada in 2018 and 2019')[[SEP]]plt.xlabel('Year')[[SEP]]plt.ylabel('Share of respondents (%)')[[SEP]][[SEP]]# Add percentage labels on top of the bars[[SEP]]for bar in bars:[[SEP]]    yval = bar.get_height()[[SEP]]    plt.text(bar.get_x() + bar.get_width()/2, yval + 0.5, f'{yval}%', ha='center', va='bottom')[[SEP]][[SEP]]# Show plot[[SEP]]plt.ylim(0, 30)[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]brands = ['Zara'][[SEP]]number_of_stores = [99][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.bar(brands, number_of_stores, color='blue')[[SEP]][[SEP]]# Add title and labels[[SEP]]plt.title('Number of stores of the different brands of the Inditex Group in the United States in 2020')[[SEP]]plt.xlabel('Brand')[[SEP]]plt.ylabel('Number of stores')[[SEP]][[SEP]]# Add number on top of the bar[[SEP]]for i, v in enumerate(number_of_stores):[[SEP]]    plt.text(i, v + 1, str(v), ha='center', va='bottom')[[SEP]][[SEP]]# Show plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = ['2014', '2015', '2016', '2017', '2018', '2019*'][[SEP]]companies = [5031, 4936, 4839, 4708, 4505, 4326][[SEP]][[SEP]]# Create the bar plot[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]bars = plt.bar(years, companies, color='blue')[[SEP]][[SEP]]# Add title and labels[[SEP]]plt.title('Number of companies in the Italian footwear industry in Italy between 2014 and 2019')[[SEP]]plt.xlabel('Year')[[SEP]]plt.ylabel('Number of companies')[[SEP]][[SEP]]# Add the data labels on top of the bars[[SEP]]for bar in bars:[[SEP]]    yval = bar.get_height()[[SEP]]    plt.text(bar.get_x() + bar.get_width()/2, yval - 300, int(yval), ha='center', va='bottom', color='white', fontweight='bold')[[SEP]][[SEP]]# Show the plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data to plot[[SEP]]labels = 'China', 'Australia', 'United States', 'Myanmar', 'Russia', 'Other countries'[[SEP]]sizes = [70.6, 11.8, 8.8, 2.9, 1.5, 4.4][[SEP]]colors = ['#1f77b4', '#ff7f0e', '#2ca02c', '#d62728', '#9467bd', '#8c564b'][[SEP]]explode = (0.1, 0, 0, 0, 0, 0)  # explode 1st slice[[SEP]][[SEP]]# Plot[[SEP]]plt.figure(figsize=(10, 7))[[SEP]]plt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%',[[SEP]]        shadow=True, startangle=140)[[SEP]][[SEP]]plt.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.[[SEP]]plt.title('Distribution of Rare Earth Element Production Worldwide in 2018, by Select Country')[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]categories = ['Lager', 'Ale', 'Neither', 'Don’t know'][[SEP]]values = [39, 27, 30, 3][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]bars = plt.bar(categories, values, color='blue')[[SEP]][[SEP]]# Add title and labels[[SEP]]plt.title('Which kind of beer do you prefer?')[[SEP]]plt.xlabel('Response')[[SEP]]plt.ylabel('Share of respondents (%)')[[SEP]][[SEP]]# Add percentage labels on top of the bars[[SEP]]for bar in bars:[[SEP]]    yval = bar.get_height()[[SEP]]    plt.text(bar.get_x() + bar.get_width()/2.0, yval, f'{yval}%', va='bottom')  # va: vertical alignment[[SEP]][[SEP]]# Show plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = [2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019][[SEP]]viewers = [3.12, 1.69, 2.88, 3.23, 3.37, 3.36, 3.28, 3.63, 2.85, 2.58, 2.6][[SEP]][[SEP]]# Create the bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.bar(years, viewers, color='blue')[[SEP]][[SEP]]# Add titles and labels[[SEP]]plt.title('Number of TV viewers of the Eurovision Song Contest in Sweden from 2009 to 2019 (in millions)')[[SEP]]plt.xlabel('Year')[[SEP]]plt.ylabel('Number of TV viewers in millions')[[SEP]][[SEP]]# Add data labels on top of the bars[[SEP]]for i in range(len(years)):[[SEP]]    plt.text(years[i], viewers[i] + 0.05, str(viewers[i]), ha='center')[[SEP]][[SEP]]# Show the plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = [2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017][[SEP]]consumption = [24.5, 25.0, 24.9, 23.0, 22.8, 23.1, 22.1, 20.2, 19.7, 19.3, 17.4, 17.0, 17.1][[SEP]][[SEP]]# Create the plot[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.bar(years, consumption, color='blue')[[SEP]][[SEP]]# Add titles and labels[[SEP]]plt.title('Volume of beef and veal meat consumed per capita in Italy from 2005 to 2017')[[SEP]]plt.xlabel('Year')[[SEP]]plt.ylabel('Per capita consumption in kilograms per capita')[[SEP]][[SEP]]# Show the plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data to plot[[SEP]]labels = 'Watches and jewelry', 'Apparel and accessories'[[SEP]]sizes = [78, 22][[SEP]]colors = ['#1f77b4', '#2ca02c'][[SEP]]explode = (0.1, 0)  # explode 1st slice[[SEP]][[SEP]]# Plot[[SEP]]plt.pie(sizes, explode=explode, labels=labels, colors=colors,[[SEP]]autopct='%1.1f%%', shadow=True, startangle=140)[[SEP]][[SEP]]plt.axis('equal')[[SEP]]plt.title('Second-hand personal luxury goods market share worldwide in 2019, by product category')[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]categories = ['Venture', 'Early-stage', 'Later stage venture'][[SEP]]values = [5, 4, 0][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]bars = plt.barh(categories, values, color='blue')[[SEP]][[SEP]]# Add data labels[[SEP]]for bar in bars:[[SEP]]    plt.text(bar.get_width() + 0.1, bar.get_y() + bar.get_height()/2, [[SEP]]             f'{bar.get_width()}', ha='center', va='center')[[SEP]][[SEP]]# Title and labels[[SEP]]plt.title('Number of venture capital funds in Germany as of 2016, by VC investment focus')[[SEP]]plt.xlabel('Number of funds')[[SEP]]plt.ylabel('Investment focus')[[SEP]][[SEP]]# Show plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data to plot[[SEP]]labels = 'A lot', 'Enough', 'A little', 'Not at all', 'Do not know'[[SEP]]sizes = [2, 12, 42, 41, 3][[SEP]]colors = ['#1f77b4', '#2ca02c', '#d62728', '#9467bd', '#8c564b'][[SEP]]explode = (0, 0, 0, 0, 0)  # explode a slice if required[[SEP]][[SEP]]# Plot[[SEP]]plt.figure(figsize=(10, 7))[[SEP]]plt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%', shadow=True, startangle=140)[[SEP]]plt.title("How much do you appreciate the European Union's intervention towards Italy during the coronavirus emergency?")[[SEP]]plt.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]categories = ['Leisure travel plans', 'Business travel plans'][[SEP]]values = [51, 47][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]bars = plt.bar(categories, values, color='blue')[[SEP]][[SEP]]# Add title and labels[[SEP]]plt.title('Filipinos perception of the impact of coronavirus COVID-19 outbreak on their travel plans in 2020')[[SEP]]plt.xlabel('Response')[[SEP]]plt.ylabel('Share of respondents')[[SEP]][[SEP]]# Add value labels on top of the bars[[SEP]]for bar in bars:[[SEP]]    yval = bar.get_height()[[SEP]]    plt.text(bar.get_x() + bar.get_width()/2, yval + 1, f'{yval}%', ha='center', va='bottom')[[SEP]][[SEP]]# Show plot[[SEP]]plt.ylim(0, 60)[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]categories = ['Almost constantly', 'Several times a day', 'About once a day', 'Several times a week', 'Less often'][[SEP]]values = [26, 43, 8, 6, 5][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]bars = plt.bar(categories, values, color='blue')[[SEP]][[SEP]]# Add title and labels[[SEP]]plt.title('Internet usage frequency of adults in the United States as of January 2018')[[SEP]]plt.xlabel('Response')[[SEP]]plt.ylabel('Share of respondents')[[SEP]][[SEP]]# Add percentage labels on top of the bars[[SEP]]for bar in bars:[[SEP]]    yval = bar.get_height()[[SEP]]    plt.text(bar.get_x() + bar.get_width()/2, yval + 1, f'{yval}%', ha='center', va='bottom')[[SEP]][[SEP]]# Show plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]countries = ['Germany', 'Italy', 'Russia', 'Iraq', 'South Korea', 'China', 'Netherlands', 'France'][[SEP]]shares = [10.4, 8.2, 6.8, 6.3, 6.1, 5.4, 5.3, 4.3][[SEP]][[SEP]]# Create bar plot[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.bar(countries, shares, color='blue')[[SEP]][[SEP]]# Title and labels[[SEP]]plt.title('Greece: Main import partners in 2017')[[SEP]]plt.xlabel('Country')[[SEP]]plt.ylabel('Share of total imports (%)')[[SEP]][[SEP]]# Show percentage on top of bars[[SEP]]for i, share in enumerate(shares):[[SEP]]    plt.text(i, share + 0.2, f'{share}%', ha='center')[[SEP]][[SEP]]# Show plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = ['2018', '2028*'][[SEP]]market_size = [1.57, 3.49][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]bars = plt.bar(years, market_size, color='blue')[[SEP]][[SEP]]# Add title and labels[[SEP]]plt.title('Global Clinical Decision Support Systems (CDSS) Market in 2018 and Forecast for 2028 (in billion U.S. dollars)')[[SEP]]plt.xlabel('Year')[[SEP]]plt.ylabel('Market size in billion U.S. dollars')[[SEP]][[SEP]]# Add value labels on top of the bars[[SEP]]for bar in bars:[[SEP]]    yval = bar.get_height()[[SEP]]    plt.text(bar.get_x() + bar.get_width()/2, yval + 0.1, yval, ha='center', va='bottom', fontsize=12)[[SEP]][[SEP]]# Show plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = [2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019][[SEP]]growth_rates = [5.3, 4.2, 3.2, 3.5, 3.1, 3.9, 3.1, 2.4, 2.4, 3.9, 2.4, 2.2, 3.5][[SEP]][[SEP]]# Create the plot[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.bar(years, growth_rates, color='blue')[[SEP]][[SEP]]# Add titles and labels[[SEP]]plt.title('Annual Growth Rate of Consumer Price Index for Medical Care Services in U.S. Urban Areas (2007-2019)')[[SEP]]plt.xlabel('Year')[[SEP]]plt.ylabel('Annual Growth Rate (%)')[[SEP]][[SEP]]# Show the plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]methods = ['PayPal', 'Amazon Payments', 'WebMoney'][[SEP]]percentages = [39.2, 2.4, 2.2][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]bars = plt.bar(methods, percentages, color=['blue', 'blue', 'blue'])[[SEP]][[SEP]]# Add title and labels[[SEP]]plt.title('Leading mobile payment methods used by digital gamers to buy PC game content worldwide in 2017')[[SEP]]plt.xlabel('Payment Methods')[[SEP]]plt.ylabel('Share of respondents (%)')[[SEP]][[SEP]]# Add percentage labels on top of the bars[[SEP]]for bar in bars:[[SEP]]    yval = bar.get_height()[[SEP]]    plt.text(bar.get_x() + bar.get_width()/2 - 0.1, yval + 1, f'{yval}%', color='black', fontweight='bold')[[SEP]][[SEP]]# Show plot[[SEP]]plt.ylim(0, 50)[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]age_groups = ['0-4 years', '5-13 years', '14-18 years', '19-44 years', 'Above 45 years'][[SEP]]percentages = [9, 23, 12, 29, 28][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.bar(age_groups, percentages, color='blue')[[SEP]][[SEP]]# Title and labels[[SEP]]plt.title('Percentage of people with hemophilia B in the U.S. in 2019, by age group')[[SEP]]plt.xlabel('Age group')[[SEP]]plt.ylabel('Percentage of people with hemophilia B')[[SEP]][[SEP]]# Show percentage on top of bars[[SEP]]for i, percentage in enumerate(percentages):[[SEP]]    plt.text(i, percentage + 1, f'{percentage}%', ha='center', va='bottom')[[SEP]][[SEP]]# Show plot[[SEP]]plt.ylim(0, 35)[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]categories = ['High', 'Medium', 'Low', 'Unsure'][[SEP]]values = [38, 46, 15, 2][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]bars = plt.bar(categories, values, color='blue')[[SEP]][[SEP]]# Add title and labels[[SEP]]plt.title('What do you believe is the likelihood of a cyber security attack that disrupts critical infrastructure in 2016?')[[SEP]]plt.xlabel('Response')[[SEP]]plt.ylabel('Share of respondents')[[SEP]][[SEP]]# Add percentage labels on top of the bars[[SEP]]for bar in bars:[[SEP]]    yval = bar.get_height()[[SEP]]    plt.text(bar.get_x() + bar.get_width()/2, yval + 1, f'{yval}%', ha='center', va='bottom')[[SEP]][[SEP]]# Show plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]countries = ['Australia', 'Japan', 'South Korea', 'Philippines', 'Malaysia', 'Singapore', 'Sri Lanka', 'India', 'Indonesia', 'Cambodia', 'Bangladesh', 'Thailand', 'Myanmar', 'Pakistan', 'Vietnam', 'China'][[SEP]]index_points = [76, 75, 66, 64, 58, 54, 52, 51, 49, 43, 42, 35, 31, 26, 22, 10][[SEP]][[SEP]]# Plotting[[SEP]]plt.figure(figsize=(10, 8))[[SEP]]plt.barh(countries, index_points, color='skyblue')[[SEP]]plt.xlabel('Index points')[[SEP]]plt.ylabel('Country')[[SEP]]plt.title('Degree of internet freedom in the Asia Pacific region in 2020, by country')[[SEP]]plt.gca().invert_yaxis()  # Invert y-axis to have the highest value on top[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]types = ['Direct', 'Indirect', 'Induced'][[SEP]]employment = [462, 965, 667][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]bars = plt.bar(types, employment, color='blue')[[SEP]][[SEP]]# Add title and labels[[SEP]]plt.title('Contribution of Travel and Tourism to Employment in Turkey in 2017, by Type')[[SEP]]plt.xlabel('Type')[[SEP]]plt.ylabel('Employment in Thousands')[[SEP]][[SEP]]# Add value labels on top of the bars[[SEP]]for bar in bars:[[SEP]]    yval = bar.get_height()[[SEP]]    plt.text(bar.get_x() + bar.get_width()/2, yval - 50, int(yval), ha='center', va='bottom', color='white', fontweight='bold')[[SEP]][[SEP]]# Show plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]regions = [[[SEP]]    "Eastern Europe & Central Asia",[[SEP]]    "North America",[[SEP]]    "Fast-track Asia",[[SEP]]    "Latin America",[[SEP]]    "Advanced Asia",[[SEP]]    "Western & Central Europe",[[SEP]]    "Japan",[[SEP]]    "MENA"[[SEP]]][[SEP]]growth_rates = [6.8, 5, 5, 4.5, 3, 2.8, 2.8, 0.8][[SEP]][[SEP]]# Plot[[SEP]]fig, ax = plt.subplots(figsize=(10, 6))[[SEP]]bars = ax.barh(regions, growth_rates, color='skyblue')[[SEP]][[SEP]]# Add data labels[[SEP]]for bar in bars:[[SEP]]    width = bar.get_width()[[SEP]]    label_y = bar.get_y() + bar.get_height() / 2[[SEP]]    ax.text(width, label_y, f'{width}%', va='center', ha='left')[[SEP]][[SEP]]# Title and labels[[SEP]]ax.set_title('Growth of advertising spending worldwide between 2019 and 2022, by regional block')[[SEP]]ax.set_xlabel('Average annual growth rate')[[SEP]]ax.set_ylabel('Country')[[SEP]][[SEP]]# Show plot[[SEP]]plt.tight_layout()[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = ['2005/06', '2006/07', '2007/08', '2008/09', '2009/10', '2010/11', '2011/12', '2012/13', '2013/14', '2014/15'][[SEP]]prices = [33.0, 39.23, 43.07, 43.07, 45.71, 45.71, 49.73, 51.47, 53.71, 54.68][[SEP]][[SEP]]# Create the bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.bar(years, prices, color='blue')[[SEP]][[SEP]]# Add titles and labels[[SEP]]plt.title('Average Ticket Price for San Jose Sharks Games (NHL) from 2005/06 to 2014/15')[[SEP]]plt.xlabel('Year')[[SEP]]plt.ylabel('Average Ticket Price in U.S. Dollars')[[SEP]][[SEP]]# Display the values on top of the bars[[SEP]]for i, price in enumerate(prices):[[SEP]]    plt.text(i, price + 0.5, str(price), ha='center')[[SEP]][[SEP]]# Show the plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]quarters = ['Q2 2015', 'Q3 2015', 'Q4 2015', 'Q1 2016', 'Q2 2016', 'Q3 2016', 'Q4 2016'][[SEP]]rent_growth_rate = [0.8, 0.8, 0.9, 0.8, 0.7, 0.8, 0.8][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]bars = plt.bar(quarters, rent_growth_rate, color='blue')[[SEP]][[SEP]]# Add labels and title[[SEP]]plt.xlabel('Quarter')[[SEP]]plt.ylabel('Rent growth rate')[[SEP]]plt.title('Forecast of industrial rent growth in the United States from 2nd quarter 2015 to 4th quarter 2016')[[SEP]][[SEP]]# Add value labels on top of the bars[[SEP]]for bar in bars:[[SEP]]    yval = bar.get_height()[[SEP]]    plt.text(bar.get_x() + bar.get_width()/2, yval + 0.01, f'{yval:.1%}', ha='center', va='bottom')[[SEP]][[SEP]]# Show plot[[SEP]]plt.ylim(0, 1)[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data to plot[[SEP]]labels = 'Definitely positive', 'Rather positive', 'Neutral', 'Rather negative', 'Definitely negative'[[SEP]]sizes = [11.22, 8.16, 44.9, 9.18, 26.53][[SEP]]colors = ['blue', 'darkblue', 'grey', 'darkred', 'green'][[SEP]]explode = (0.1, 0, 0, 0, 0)  # explode 1st slice[[SEP]][[SEP]]# Plot[[SEP]]plt.figure(figsize=(10, 7))[[SEP]]plt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.2f%%',[[SEP]]        shadow=True, startangle=140)[[SEP]][[SEP]]plt.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.[[SEP]]plt.title('How do you feel about the term LGBT ?')[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data to plot[[SEP]]labels = 'Middle East', 'North America', 'Europe and CIS*', 'Africa', 'Asia Pacific', 'South and Central America'[[SEP]]sizes = [31.9, 25.9, 19, 8.8, 8, 6.5][[SEP]]colors = ['#1f77b4', '#2ca02c', '#d62728', '#ff7f0e', '#bcbd22', '#17becf'][[SEP]]explode = (0.1, 0, 0, 0, 0, 0)  # explode 1st slice[[SEP]][[SEP]]# Plot[[SEP]]plt.figure(figsize=(10, 7))[[SEP]]plt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%', shadow=True, startangle=140)[[SEP]]plt.title('Distribution of global oil production 2019, by region (in percent)')[[SEP]]plt.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]age_groups = ['0-4 years', '5-13 years', '14-18 years', '19-44 years', 'Above 45 years'][[SEP]]percentages = [6, 31, 23, 24, 17][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]bars = plt.bar(age_groups, percentages, color='blue')[[SEP]][[SEP]]# Add percentage labels on top of the bars[[SEP]]for bar in bars:[[SEP]]    yval = bar.get_height()[[SEP]]    plt.text(bar.get_x() + bar.get_width()/2, yval + 1, f'{yval}%', ha='center', va='bottom')[[SEP]][[SEP]]# Title and labels[[SEP]]plt.title('Percentage of people with von Willebrand disease in the U.S. in 2019, by age group')[[SEP]]plt.xlabel('Age group')[[SEP]]plt.ylabel('Percentage of people with VWD')[[SEP]][[SEP]]# Show plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = [2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019][[SEP]]employees = [148, 144, 155, 167, 182, 198, 190, 195, 190][[SEP]][[SEP]]# Create the bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.bar(years, employees, color='blue')[[SEP]][[SEP]]# Add title and labels[[SEP]]plt.title('Number of employees in the advertising and marketing economy of United Kingdom (UK) from 2011 to 2019 (in 1,000s)')[[SEP]]plt.xlabel('Year')[[SEP]]plt.ylabel('Employees in thousands')[[SEP]][[SEP]]# Show the plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = [2013, 2014, 2015, 2016, 2017, 2018][[SEP]]consumption = [22, 23, 23, 23, 23, 24][[SEP]][[SEP]]# Create the bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.bar(years, consumption, color='blue')[[SEP]][[SEP]]# Add title and labels[[SEP]]plt.title('Per capita consumption of cheese in Italy from 2013 to 2018 (in kilograms)')[[SEP]]plt.xlabel('Year')[[SEP]]plt.ylabel('Kilograms consumed per capita')[[SEP]][[SEP]]# Add data labels[[SEP]]for i in range(len(years)):[[SEP]]    plt.text(years[i], consumption[i] + 0.1, str(consumption[i]), ha='center')[[SEP]][[SEP]]# Show the plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]responses = ['Yes', 'No'][[SEP]]share_of_respondents = [49, 51][[SEP]][[SEP]]# Create bar chart[[SEP]]fig, ax = plt.subplots()[[SEP]]bars = ax.bar(responses, share_of_respondents, color='blue')[[SEP]][[SEP]]# Add title and labels[[SEP]]ax.set_title('Have you ever had sex at the office?')[[SEP]]ax.set_xlabel('Response')[[SEP]]ax.set_ylabel('Share of respondents')[[SEP]][[SEP]]# Add percentage labels on top of the bars[[SEP]]for bar in bars:[[SEP]]    height = bar.get_height()[[SEP]]    ax.annotate(f'{height}%',[[SEP]]                xy=(bar.get_x() + bar.get_width() / 2, height),[[SEP]]                xytext=(0, 3),  # 3 points vertical offset[[SEP]]                textcoords="offset points",[[SEP]]                ha='center', va='bottom')[[SEP]][[SEP]]# Show the plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = [2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017][[SEP]]births_per_thousand_women = [33.13, 32.47, 31.81, 31.15, 30.49, 30.13, 29.3, 29.04, 28.77, 28.51][[SEP]][[SEP]]# Create the bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.bar(years, births_per_thousand_women, color='blue')[[SEP]][[SEP]]# Add title and labels[[SEP]]plt.title('Adolescent fertility rate in Myanmar from 2008 to 2017 (per 1,000 women)')[[SEP]]plt.xlabel('Year')[[SEP]]plt.ylabel('Births per thousand women')[[SEP]][[SEP]]# Add data labels on top of the bars[[SEP]]for i in range(len(years)):[[SEP]]    plt.text(years[i], births_per_thousand_women[i] + 0.1, str(births_per_thousand_women[i]), ha='center')[[SEP]][[SEP]]# Show the plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]categories = [[[SEP]]    "At least once a week",[[SEP]]    "At least once a month",[[SEP]]    "Once or twice, ever",[[SEP]]    "Haven't used, but would consider using it in the next 3 months",[[SEP]]    "Haven't used, but might consider using it in the future",[[SEP]]    "Haven't used and will never use it"[[SEP]]][[SEP]]values = [31, 16, 18, 6, 21, 8][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]bars = plt.bar(categories, values, color='blue')[[SEP]][[SEP]]# Add value labels on top of the bars[[SEP]]for bar in bars:[[SEP]]    yval = bar.get_height()[[SEP]]    plt.text(bar.get_x() + bar.get_width()/2, yval + 0.5, f'{yval}%', ha='center', va='bottom')[[SEP]][[SEP]]# Title and labels[[SEP]]plt.title('Frequency with which smartphone owners use voice-enabled technology worldwide in 2017')[[SEP]]plt.xlabel('Response')[[SEP]]plt.ylabel('Share of smartphone owners (%)')[[SEP]][[SEP]]# Rotate x-axis labels for better readability[[SEP]]plt.xticks(rotation=45, ha='right')[[SEP]][[SEP]]# Show plot[[SEP]]plt.tight_layout()[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]generations = ['Millennials (ages 18-33)', 'Gen X (ages 34-49)', 'Boomer (ages 50-68)', 'Silent (ages 69-86)'][[SEP]]approval_percentages = [50, 38, 33, 19][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]bars = plt.bar(generations, approval_percentages, color='blue')[[SEP]][[SEP]]# Add title and labels[[SEP]]plt.title('Percentage of Americans that Approve of Interracial Marriage, Sorted by Generation in 2014')[[SEP]]plt.xlabel('Generation')[[SEP]]plt.ylabel('Share of Respondents (%)')[[SEP]][[SEP]]# Add percentage labels on top of the bars[[SEP]]for bar in bars:[[SEP]]    yval = bar.get_height()[[SEP]]    plt.text(bar.get_x() + bar.get_width()/2 - 0.1, yval + 1, f'{yval}%', color='black', fontweight='bold')[[SEP]][[SEP]]# Show plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = [1971, 1982, 1992, 2002, 2013][[SEP]]satisfaction = [49, 40, 27.3, 33.3, 23.3][[SEP]][[SEP]]# Create the bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.bar(years, satisfaction, color='blue')[[SEP]][[SEP]]# Add title and labels[[SEP]]plt.title('Share of Journalists "Very Satisfied" with Their Jobs in the United States (1971-2013)')[[SEP]]plt.xlabel('Year')[[SEP]]plt.ylabel('Share (%)')[[SEP]][[SEP]]# Add data labels[[SEP]]for i, v in enumerate(satisfaction):[[SEP]]    plt.text(years[i] - 0.5, v + 1, f"{v}%", color='black', ha='center')[[SEP]][[SEP]]# Show the plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = [1930, 1940, 1950, 1960, 1970, 1985, 1990, 1991, 1992, 1993, 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018][[SEP]]cases_per_100k = [0.15, 0.01, 0.0, 0.05, 0.02, 1.42, 2.26, 2.23, 1.47, 1.72, 1.48, 2.13, 3.33, 3.45, 1.2, 1.22, 1.43, 1.39, 1.11, 1.15, 1.17, 1.13, 1.02, 1.21, 1.15, 1.08, 1.51, 1.51, 1.38, 1.4, 1.27, 1.55, 1.69, 1.65, 1.61][[SEP]][[SEP]]# Create the plot[[SEP]]plt.figure(figsize=(10, 8))[[SEP]]plt.barh(years, cases_per_100k, color='blue')[[SEP]]plt.xlabel('Number of cases per 100,000 population')[[SEP]]plt.ylabel('Year')[[SEP]]plt.title('Reported cases of malaria in Canada from 1930 to 2018 (per 100,000 population)')[[SEP]]plt.grid(axis='x', linestyle='--', alpha=0.7)[[SEP]][[SEP]]# Show the plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]categories = [[[SEP]]    "Less than 3 months",[[SEP]]    "Between 3 and 6 months",[[SEP]]    "More than 6 months, but less than 1 year",[[SEP]]    "Between 1 and 2 years",[[SEP]]    "More than 2 years, but less than 5 years",[[SEP]]    "5 years or more",[[SEP]]    "I have never been in a long distance relationship"[[SEP]]][[SEP]]values = [9, 12, 11, 12, 7, 11, 38][[SEP]][[SEP]]# Plot[[SEP]]fig, ax = plt.subplots(figsize=(10, 6))[[SEP]]bars = ax.barh(categories, values, color='royalblue')[[SEP]][[SEP]]# Add text annotations[[SEP]]for bar in bars:[[SEP]]    width = bar.get_width()[[SEP]]    label_y = bar.get_y() + bar.get_height() / 2[[SEP]]    ax.text(width + 1, label_y, f'{width}%', va='center', ha='left', color='black')[[SEP]][[SEP]]# Labels and title[[SEP]]ax.set_xlabel('Share of respondents')[[SEP]]ax.set_title('What is the longest you have ever been in a long distance relationship?')[[SEP]][[SEP]]# Show plot[[SEP]]plt.tight_layout()[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]categories = ['Alcohol', 'Food', 'New clothes', 'Takeaways', 'Bar/club entry fees', [[SEP]]              'Meals at restaurants', 'Gym membership', 'Society membership fees', 'Fancy dress'][[SEP]]spend = [82, 40, 36, 28, 25, 22, 19, 18, 17][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.barh(categories, spend, color='blue')[[SEP]]plt.xlabel('Average spend in GBP')[[SEP]]plt.title("Average spend during Freshers' week in the United Kingdom (UK) in 2015 (in GBP)")[[SEP]][[SEP]]# Add data labels[[SEP]]for index, value in enumerate(spend):[[SEP]]    plt.text(value, index, str(value))[[SEP]][[SEP]]plt.gca().invert_yaxis()  # Invert y-axis to have the highest value on top[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]categories = ['Sovereign wealth fund', 'Endowment plan', 'Foundation', 'Private sector pension fund', 'Insurance company', 'Public pension fund'][[SEP]]values = [33, 29, 24, 20, 20, 20][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.bar(categories, values, color='blue')[[SEP]][[SEP]]# Title and labels[[SEP]]plt.title('Time of average maximum lock-up period accepted by selected hedge fund investors worldwide in 2018 (in months)')[[SEP]]plt.xlabel('Selected hedge fund investors')[[SEP]]plt.ylabel('Time in months')[[SEP]][[SEP]]# Display values on top of bars[[SEP]]for i, value in enumerate(values):[[SEP]]    plt.text(i, value + 0.5, str(value), ha='center', va='bottom')[[SEP]][[SEP]]# Show plot[[SEP]]plt.xticks(rotation=45, ha='right')[[SEP]]plt.tight_layout()[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]countries = ['Spain', 'France', 'Italy', 'United States', 'Iraq', 'United Arab Emirates', 'United Kingdom', 'Germany'][[SEP]]shares = [4, 4.2, 5.4, 5.5, 5.8, 5.9, 6.1, 9.6][[SEP]][[SEP]]# Create bar plot[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.bar(countries, shares, color='blue')[[SEP]][[SEP]]# Title and labels[[SEP]]plt.title('Turkey: Main export partners in 2017')[[SEP]]plt.xlabel('Country')[[SEP]]plt.ylabel('Share in total exports')[[SEP]][[SEP]]# Show percentage on top of bars[[SEP]]for i, share in enumerate(shares):[[SEP]]    plt.text(i, share + 0.2, f'{share}%', ha='center')[[SEP]][[SEP]]# Show plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = list(range(2000, 2019 + 1))[[SEP]]consumption = [23.5, 23.0, 22.5, 22.2, 21.3, 20.9, 20.1, 18.4, 16.8, 16.1, 15.9, 15.8, 15.9, 15.9, 14.1, 14.5, 13.6, 16.9, 15.3, 12.3, 12.7][[SEP]][[SEP]]# Plotting[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.bar(years, consumption, color='blue')[[SEP]]plt.xlabel('Year')[[SEP]]plt.ylabel('Per capita consumption in pounds')[[SEP]]plt.title('Per capita consumption of fresh lettuce (head) in the United States from 2000 to 2019 (in pounds)')[[SEP]]plt.xticks(years, rotation=45)[[SEP]]plt.ylim(0, 25)[[SEP]]plt.grid(axis='y', linestyle='--', alpha=0.7)[[SEP]][[SEP]]# Display the plot[[SEP]]plt.tight_layout()[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = [2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018][[SEP]]home_ownership_rate = [72.8, 72.8, 72.6, 73.2, 74.2, 73.3, 73.1, 72.9, 72.3, 72.4, 72.4][[SEP]][[SEP]]# Create the plot[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.bar(years, home_ownership_rate, color='blue')[[SEP]][[SEP]]# Title and labels[[SEP]]plt.title('Home ownership rate in Italy from 2008 to 2018')[[SEP]]plt.xlabel('Year')[[SEP]]plt.ylabel('Home ownership rate (%)')[[SEP]][[SEP]]# Show the plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = [2003, 2004, 2005, 2006, 2007, 2008, 2009, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019][[SEP]]share = [11, 16, 32, 44, 57, 62, 69, 80, 86, 87, 88, 90, 92, 93, 95, 96][[SEP]][[SEP]]# Create the plot[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.bar(years, share, color='blue')[[SEP]][[SEP]]# Add titles and labels[[SEP]]plt.title('Share of households with broadband internet access in the United Kingdom (UK) from 2003 to 2019')[[SEP]]plt.xlabel('Year')[[SEP]]plt.ylabel('Share of households (%)')[[SEP]][[SEP]]# Show the plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]labels = ['Yes', 'No'][[SEP]]sizes = [18, 82][[SEP]]colors = ['#1f77b4', '#ff7f0e'][[SEP]][[SEP]]# Create a bar chart[[SEP]]fig, ax = plt.subplots()[[SEP]]bars = ax.bar(labels, sizes, color=colors)[[SEP]][[SEP]]# Add percentage labels on top of the bars[[SEP]]for bar in bars:[[SEP]]    height = bar.get_height()[[SEP]]    ax.annotate(f'{height}%',[[SEP]]                xy=(bar.get_x() + bar.get_width() / 2, height),[[SEP]]                xytext=(0, 3),  # 3 points vertical offset[[SEP]]                textcoords="offset points",[[SEP]]                ha='center', va='bottom')[[SEP]][[SEP]]# Title and labels[[SEP]]ax.set_title('Share of online consumers in the United States who have purchased products directly via social media as of May 2018')[[SEP]]ax.set_ylabel('Share of respondents')[[SEP]][[SEP]]# Show the plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]countries = ['UK and Ireland', 'Nordic region', 'The Netherlands', 'Germany'][[SEP]]values = [623, 345, 306, 82][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.bar(countries, values, color='blue')[[SEP]][[SEP]]# Title and labels[[SEP]]plt.title('Value of investment in financial technology (fintech) in selected European regions or countries in 2014 (in million U.S. dollars)')[[SEP]]plt.xlabel('Country')[[SEP]]plt.ylabel('Value in million U.S. dollars')[[SEP]][[SEP]]# Display values on top of bars[[SEP]]for i, value in enumerate(values):[[SEP]]    plt.text(i, value + 10, str(value), ha='center', va='bottom')[[SEP]][[SEP]]# Show plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data to plot[[SEP]]labels = 'Apparel, accessories and equipment', 'Footwear'[[SEP]]sizes = [76.95, 23.05][[SEP]]colors = ['#1f77b4', '#1f3b4d'][[SEP]]explode = (0.1, 0)  # explode 1st slice[[SEP]][[SEP]]# Plot[[SEP]]plt.pie(sizes, explode=explode, labels=labels, colors=colors,[[SEP]]autopct='%1.2f%%', shadow=True, startangle=140)[[SEP]][[SEP]]plt.axis('equal')[[SEP]]plt.title('Sales share of Columbia Sportswear Company worldwide in 2019, by product category')[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]categories = ['People living with HIV (total number)', 'People on HIV treatment (ART)*', 'New HIV infections', 'Number of AIDS-related deaths'][[SEP]]values = [38.0, 25.4, 1.7, 0.69][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]bars = plt.bar(categories, values, color='blue')[[SEP]][[SEP]]# Add title and labels[[SEP]]plt.title('Key figures on the global HIV/AIDS epidemic as of 2019 (in millions)')[[SEP]]plt.xlabel('Disease outbreak')[[SEP]]plt.ylabel('Number in millions')[[SEP]][[SEP]]# Add value labels on top of the bars[[SEP]]for bar in bars:[[SEP]]    yval = bar.get_height()[[SEP]]    plt.text(bar.get_x() + bar.get_width()/2, yval + 0.5, yval, ha='center', va='bottom')[[SEP]][[SEP]]# Show plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]devices = ['Smartphone or iPhone', 'Laptop computer', 'Desktop computer', 'iPad or Tablet', 'Other'][[SEP]]percentages = [68, 47, 33, 31, 1][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]bars = plt.bar(devices, percentages, color='blue')[[SEP]][[SEP]]# Add percentage labels on top of the bars[[SEP]]for bar in bars:[[SEP]]    yval = bar.get_height()[[SEP]]    plt.text(bar.get_x() + bar.get_width()/2 - 0.1, yval + 1, f'{yval}%', color='black', va='center', ha='center')[[SEP]][[SEP]]# Title and labels[[SEP]]plt.title('Leading devices used for online purchases in the past 3 months\naccording to online shoppers in the United States as of November 2017')[[SEP]]plt.xlabel('Devices')[[SEP]]plt.ylabel('Share of internet users (%)')[[SEP]][[SEP]]# Show plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]countries = ['France', 'Germany', 'Spain', 'United Kingdom', 'United States'][[SEP]]burnout_rates = [30, 30, 37, 57, 50][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]bars = plt.bar(countries, burnout_rates, color='blue')[[SEP]][[SEP]]# Add title and labels[[SEP]]plt.title('Share of doctors estimating to have burnout themselves worldwide in 2016, according to the country')[[SEP]]plt.xlabel('Country')[[SEP]]plt.ylabel('Share of respondents (%)')[[SEP]][[SEP]]# Add data labels[[SEP]]for bar in bars:[[SEP]]    yval = bar.get_height()[[SEP]]    plt.text(bar.get_x() + bar.get_width()/2 - 0.1, yval + 1, f'{yval}%', ha='center', va='bottom')[[SEP]][[SEP]]# Show plot[[SEP]]plt.ylim(0, 70)[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = ['2000-2010', '2003-2012', '2005-2013', '2010-2015', '2010-2017'][[SEP]]gini_coefficients = [56.3, 56.3, 46.6, 48.4, 44.0][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.bar(years, gini_coefficients, color='blue')[[SEP]][[SEP]]# Add title and labels[[SEP]]plt.title('Income Distribution Inequality Based on Gini Coefficient in Bolivia (2000-2017)')[[SEP]]plt.xlabel('Year')[[SEP]]plt.ylabel('Gini Coefficient')[[SEP]][[SEP]]# Add data labels on top of the bars[[SEP]]for i, value in enumerate(gini_coefficients):[[SEP]]    plt.text(i, value + 1, str(value), ha='center')[[SEP]][[SEP]]# Show plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]ages = ['18-34', '35-44', '45-54', '55-64', '65+'][[SEP]]penetration_rates = [36, 31, 23, 15, 9][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]bars = plt.bar(ages, penetration_rates, color='blue')[[SEP]][[SEP]]# Add title and labels[[SEP]]plt.title('Twitter penetration rate in Canada as of January 2015, by age')[[SEP]]plt.xlabel('Age Group')[[SEP]]plt.ylabel('Share of Population (%)')[[SEP]][[SEP]]# Add data labels on top of the bars[[SEP]]for bar in bars:[[SEP]]    yval = bar.get_height()[[SEP]]    plt.text(bar.get_x() + bar.get_width()/2 - 0.1, yval + 1, f'{yval}%', ha='center', va='bottom')[[SEP]][[SEP]]# Show plot[[SEP]]plt.ylim(0, 40)[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]responses = ['True', 'Not true'][[SEP]]percentages = [30, 70][[SEP]][[SEP]]# Create bar chart[[SEP]]fig, ax = plt.subplots()[[SEP]]bars = ax.bar(responses, percentages, color=['blue', 'blue'])[[SEP]][[SEP]]# Add percentage labels on top of the bars[[SEP]]for bar in bars:[[SEP]]    height = bar.get_height()[[SEP]]    ax.annotate(f'{height}%',[[SEP]]                xy=(bar.get_x() + bar.get_width() / 2, height),[[SEP]]                xytext=(0, 3),  # 3 points vertical offset[[SEP]]                textcoords="offset points",[[SEP]]                ha='center', va='bottom')[[SEP]][[SEP]]# Title and labels[[SEP]]ax.set_title('Percentage of Canadians who think people who die with unfinished business sometimes become ghosts as of February 2016')[[SEP]]ax.set_xlabel('Response')[[SEP]]ax.set_ylabel('Share of respondents')[[SEP]][[SEP]]# Show plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]periods = ['Per day', 'Per month'][[SEP]]number_of_games = [1.3, 3.6][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(8, 6))[[SEP]]bars = plt.bar(periods, number_of_games, color='blue')[[SEP]][[SEP]]# Add title and labels[[SEP]]plt.title('Average number of mobile games played daily and monthly in the United States as of April 2016')[[SEP]]plt.xlabel('Period')[[SEP]]plt.ylabel('Number of games')[[SEP]][[SEP]]# Add value labels on top of the bars[[SEP]]for bar in bars:[[SEP]]    yval = bar.get_height()[[SEP]]    plt.text(bar.get_x() + bar.get_width()/2, yval - 0.2, yval, ha='center', va='bottom', color='white', fontsize=12)[[SEP]][[SEP]]# Show the plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]companies = ['Google', 'Yelp', 'Wolfram Alpha', 'Apple (maps, sports, movies)', 'Yahoo', 'Wikipedia'][[SEP]]percentages = [48, 20, 14, 12, 4, 2][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]bars = plt.bar(companies, percentages, color='blue')[[SEP]][[SEP]]# Add percentage labels on top of the bars[[SEP]]for bar in bars:[[SEP]]    yval = bar.get_height()[[SEP]]    plt.text(bar.get_x() + bar.get_width()/2, yval + 1, f'{yval}%', ha='center', va='bottom')[[SEP]][[SEP]]# Title and labels[[SEP]]plt.title('Percentage of search queries on Siri on iOS 6, by company')[[SEP]]plt.xlabel('Company')[[SEP]]plt.ylabel('Percentage of search queries on Siri')[[SEP]][[SEP]]# Show plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]actresses = [[[SEP]]    "Meryl Streep - The Post",[[SEP]]    "Frances McDormand - Three Billboards outside Ebbing, Missouri",[[SEP]]    "Sally Hawkins - The Shape of Water",[[SEP]]    "Margot Robbie - I, Tonya",[[SEP]]    "Saoirse Ronan - Lady Bird",[[SEP]]    "Not sure"[[SEP]]][[SEP]]percentages = [11, 10, 5, 4, 4, 66][[SEP]][[SEP]]# Plot[[SEP]]fig, ax = plt.subplots(figsize=(10, 6))[[SEP]]bars = ax.barh(actresses, percentages, color='blue')[[SEP]][[SEP]]# Add text annotations[[SEP]]for bar in bars:[[SEP]]    width = bar.get_width()[[SEP]]    label_y = bar.get_y() + bar.get_height() / 2[[SEP]]    ax.text(width + 1, label_y, f'{width}%', va='center')[[SEP]][[SEP]]# Labels and title[[SEP]]ax.set_xlabel('Share of respondents')[[SEP]]ax.set_ylabel('Actress, film')[[SEP]]ax.set_title('Which one of the following actresses do you think should win the Academy Award for Best Actress?')[[SEP]][[SEP]]# Show plot[[SEP]]plt.tight_layout()[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]seasons = ['Summer', 'Fall', 'Spring', 'Winter'][[SEP]]shares = [35, 32, 26, 7][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.bar(seasons, shares, color=['blue', 'orange', 'green', 'red'])[[SEP]][[SEP]]# Title and labels[[SEP]]plt.title('Weddings: Most Popular Season for Wedding Ceremonies in the United States, as of 2013')[[SEP]]plt.xlabel('Season')[[SEP]]plt.ylabel('Share of Ceremonies (%)')[[SEP]][[SEP]]# Display values on top of bars[[SEP]]for i, value in enumerate(shares):[[SEP]]    plt.text(i, value + 1, f'{value}%', ha='center')[[SEP]][[SEP]]# Show plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]types = ['Direct', 'Indirect', 'Induced'][[SEP]]contributions = [62, 76, 35][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]bars = plt.bar(types, contributions, color='blue')[[SEP]][[SEP]]# Add title and labels[[SEP]]plt.title('Contribution of travel and tourism to GDP in Spain in 2017, by type (in billion euros)')[[SEP]]plt.xlabel('Type')[[SEP]]plt.ylabel('Contribution in billion euros')[[SEP]][[SEP]]# Add value labels on top of the bars[[SEP]]for bar in bars:[[SEP]]    yval = bar.get_height()[[SEP]]    plt.text(bar.get_x() + bar.get_width()/2, yval - 5, int(yval), ha='center', color='white', fontsize=12)[[SEP]][[SEP]]# Show plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data to plot[[SEP]]labels = 'Very favorable', 'Somewhat favorable', 'Somewhat unfavorable', 'Very unfavorable', 'Never heard of', 'Heard of, no opinion'[[SEP]]sizes = [24, 17, 11, 23, 9, 16][[SEP]]colors = ['#4CAF50', '#2196F3', '#FFC107', '#F44336', '#8BC34A', '#FF9800'][[SEP]]explode = (0.1, 0, 0, 0, 0, 0)  # explode 1st slice[[SEP]][[SEP]]# Plot[[SEP]]plt.figure(figsize=(10, 7))[[SEP]]plt.pie(sizes, explode=explode, labels=labels, colors=colors, autopct='%1.1f%%', shadow=True, startangle=140)[[SEP]]plt.axis('equal')  # Equal aspect ratio ensures that pie is drawn as a circle.[[SEP]][[SEP]]plt.title('Public opinion on the NFL player Colin Kaepernick in the United States as of June 2020')[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = ['2017', '2018', '2019*', '2020*', '2021*', '2022*', '2023*'][[SEP]]usage = [23, 24, 25, 26, 27, 28, 29][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.bar(years, usage, color='blue')[[SEP]][[SEP]]# Title and labels[[SEP]]plt.title('Facebook usage penetration in Indonesia from 2017 to 2023')[[SEP]]plt.xlabel('Year')[[SEP]]plt.ylabel('Share of population (%)')[[SEP]][[SEP]]# Display values on top of bars[[SEP]]for i, value in enumerate(usage):[[SEP]]    plt.text(i, value + 0.5, f'{value}%', ha='center')[[SEP]][[SEP]]# Show plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]categories = ['Church-attending Christians', 'Non-practicing Christians', 'Religiously unaffiliated', 'Other religion/don\'t know'][[SEP]]values = [9, 43, 42, 6][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]bars = plt.bar(categories, values, color='blue')[[SEP]][[SEP]]# Add title and labels[[SEP]]plt.title('Religious identification in Sweden in 2017, by type')[[SEP]]plt.xlabel('Response')[[SEP]]plt.ylabel('Share of respondents')[[SEP]][[SEP]]# Add percentage labels on top of the bars[[SEP]]for bar in bars:[[SEP]]    yval = bar.get_height()[[SEP]]    plt.text(bar.get_x() + bar.get_width()/2 - 0.1, yval + 1, f'{yval}%', ha='center', va='bottom')[[SEP]][[SEP]]# Show plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]parties = ['Democratic', "People's", 'Liberty Korea', 'Justice', 'Bareun', 'Saenuri', 'Not decided yet / none'][[SEP]]percentages = [36, 16, 15, 8, 5, 1, 19][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]bars = plt.bar(parties, percentages, color='blue')[[SEP]][[SEP]]# Add percentage labels on top of the bars[[SEP]]for bar in bars:[[SEP]]    yval = bar.get_height()[[SEP]]    plt.text(bar.get_x() + bar.get_width()/2, yval + 0.5, f'{yval}%', ha='center', va='bottom')[[SEP]][[SEP]]# Title and labels[[SEP]]plt.title('Which political party in South Korea do you support?')[[SEP]]plt.xlabel('Response')[[SEP]]plt.ylabel('Share of respondents')[[SEP]][[SEP]]# Show plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]sdk_names = [[[SEP]]    "Google Ads AdMob",[[SEP]]    "Facebook Audience Network",[[SEP]]    "Unity Ads",[[SEP]]    "Startapp",[[SEP]]    "Google Mobile Ads Consent AdMob SDK",[[SEP]]    "AppLovin",[[SEP]]    "AdColony",[[SEP]]    "Chartboost",[[SEP]]    "Mopub",[[SEP]]    "Vungle"[[SEP]]][[SEP]]share_of_apps = [92, 19, 11, 8, 7, 6, 5, 4, 3, 3][[SEP]][[SEP]]# Plotting[[SEP]]fig, ax = plt.subplots(figsize=(10, 6))[[SEP]]bars = ax.barh(sdk_names, share_of_apps, color='blue')[[SEP]][[SEP]]# Adding data labels[[SEP]]for bar in bars:[[SEP]]    width = bar.get_width()[[SEP]]    label_y = bar.get_y() + bar.get_height() / 2[[SEP]]    ax.text(width + 1, label_y, f'{width}%', va='center')[[SEP]][[SEP]]# Labels and title[[SEP]]ax.set_xlabel('Share of apps')[[SEP]]ax.set_title('Most popular installed ad network software development kits (SDKs) across Android apps worldwide as of September 2020')[[SEP]][[SEP]]# Invert y-axis to have the highest value on top[[SEP]]ax.invert_yaxis()[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data to plot[[SEP]]labels = 'Decreased', 'No impact', 'Increased'[[SEP]]sizes = [30, 35, 35][[SEP]]colors = ['#1f77b4', '#2ca02c', '#d62728'][[SEP]]explode = (0.1, 0, 0)  # explode 1st slice[[SEP]][[SEP]]# Plot[[SEP]]plt.pie(sizes, explode=explode, labels=labels, colors=colors,[[SEP]]autopct='%1.1f%%', shadow=True, startangle=140)[[SEP]][[SEP]]plt.axis('equal')[[SEP]]plt.title('Opinion on impact of the coronavirus (COVID-19) on business inventory across India as of March 2020')[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]services = ['Apple Music', 'Spotify', 'Google Play Music', 'Tidal', 'Pandora'][[SEP]]tracks = [37.0, 30.0, 30.0, 25.0, 1.5][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.bar(services, tracks, color='blue')[[SEP]][[SEP]]# Title and labels[[SEP]]plt.title('Number of music tracks available on selected streaming services worldwide as of June 2015 (in millions)')[[SEP]]plt.xlabel('Digital Music Store')[[SEP]]plt.ylabel('Number of Tracks in Millions')[[SEP]][[SEP]]# Display the number of tracks on top of the bars[[SEP]]for i, v in enumerate(tracks):[[SEP]]    plt.text(i, v + 0.5, str(v), ha='center', fontweight='bold')[[SEP]][[SEP]]# Show plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]categories = ['Less than 2 hours', '2-8 hours', '8-24 hours', 'More than 24 hours', 'Did not reply'][[SEP]]values = [18.5, 6.3, 9.4, 5.7, 60.1][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]bars = plt.bar(categories, values, color='blue')[[SEP]][[SEP]]# Add title and labels[[SEP]]plt.title('Average response rate of brands when replying to questions posted by users on their Facebook page as of April 2014 (in hours)')[[SEP]]plt.xlabel('Response Time')[[SEP]]plt.ylabel('Share of user posts which received a reply (%)')[[SEP]][[SEP]]# Add value labels on top of the bars[[SEP]]for bar in bars:[[SEP]]    yval = bar.get_height()[[SEP]]    plt.text(bar.get_x() + bar.get_width()/2, yval + 1, f'{yval}%', ha='center', va='bottom')[[SEP]][[SEP]]# Show plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]quarters = ['Q1 \'13', 'Q2 \'13', 'Q3 \'13', 'Q4 \'13', 'Q1 \'14', 'Q2 \'14', 'Q3 \'14', 'Q4 \'14', [[SEP]]            'Q1 \'15', 'Q2 \'15', 'Q3 \'15', 'Q4 \'15', 'Q1 \'16', 'Q2 \'16'][[SEP]]sales = [507.86, 540.07, 626.3, 687.6, 506.19, 580.13, 663.39, 719.46, 539.11, 593.18, 680.38, 769.14, 577.48, 619.24][[SEP]][[SEP]]# Plot[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.bar(quarters, sales, color='blue')[[SEP]][[SEP]]# Title and labels[[SEP]]plt.title('Quarterly retail sales of bedding, linens and bathroom accessories in Canada from 2013 to 2016 (in million Canadian dollars)')[[SEP]]plt.xlabel('Quarter')[[SEP]]plt.ylabel('Sales in million Canadian dollars')[[SEP]][[SEP]]# Rotate x-axis labels for better readability[[SEP]]plt.xticks(rotation=45)[[SEP]][[SEP]]# Show plot[[SEP]]plt.tight_layout()[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = list(range(2000, 2015))[[SEP]]percentages = [48, 47, 47, 42, 40, 44, 47, 43, 42, 42, 38, 38, 35, 38, 49][[SEP]][[SEP]]# Create the plot[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.bar(years, percentages, color='blue')[[SEP]][[SEP]]# Title and labels[[SEP]]plt.title('Percentage of Refugee Status Claims Accepted by the Immigration and Refugee Board of Canada (2000-2014)')[[SEP]]plt.xlabel('Year')[[SEP]]plt.ylabel('Percent of claims accepted')[[SEP]][[SEP]]# Show the plot[[SEP]]plt.xticks(years, rotation=45)[[SEP]]plt.ylim(0, 60)[[SEP]]plt.grid(axis='y', linestyle='--', alpha=0.7)[[SEP]]plt.tight_layout()[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]labels = ['A fair amount', 'A great deal', 'None at all', 'Only a little'][[SEP]]values = [36, 20, 9, 34][[SEP]][[SEP]]# Create bar chart[[SEP]]fig, ax = plt.subplots()[[SEP]]bars = ax.bar(labels, values, color='blue')[[SEP]][[SEP]]# Add percentage labels on top of the bars[[SEP]]for bar in bars:[[SEP]]    height = bar.get_height()[[SEP]]    ax.annotate(f'{height}%',[[SEP]]                xy=(bar.get_x() + bar.get_width() / 2, height),[[SEP]]                xytext=(0, 3),  # 3 points vertical offset[[SEP]]                textcoords="offset points",[[SEP]]                ha='center', va='bottom')[[SEP]][[SEP]]# Set axis labels and title[[SEP]]ax.set_ylabel('Share of respondents')[[SEP]]ax.set_title('Perceived level of bias in news sources used most often by adults in the United States as of February 2020')[[SEP]][[SEP]]# Show plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]age_groups = ['15-24 years', '25-34 years', '35-49 years', '50-64 years'][[SEP]]unemployment_rates = [28.9, 14.7, 8.7, 5.8][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]bars = plt.bar(age_groups, unemployment_rates, color='blue')[[SEP]][[SEP]]# Add title and labels[[SEP]]plt.title('Unemployment rate in Italy in 2019, by age group')[[SEP]]plt.xlabel('Age Group')[[SEP]]plt.ylabel('Percentage of Unemployed Individuals')[[SEP]][[SEP]]# Add percentage labels on top of the bars[[SEP]]for bar in bars:[[SEP]]    yval = bar.get_height()[[SEP]]    plt.text(bar.get_x() + bar.get_width()/2, yval + 0.5, f'{yval}%', ha='center', va='bottom')[[SEP]][[SEP]]# Show plot[[SEP]]plt.ylim(0, 35)[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]countries = ["Mexico", "Colombia", "Argentina", "Spain", "United States*", "Venezuela", "Peru", "Chile", "Ecuador", "Guatemala", "Cuba", "Dominican Republic", "Bolivia", "Honduras", "El Salvador", "Nicaragua", "Costa Rica", "Paraguay", "Panama", "Uruguay", "Puerto Rico", "Equatorial Guinea"][[SEP]]speakers = [121.9, 49.44, 44.08, 42.92, 42.13, 31.35, 28.14, 18.32, 15.23, 13.42, 11.39, 10.11, 9.52, 9.04, 6.38, 6.16, 5.02, 4.88, 3.88, 3.43, 3.16, 0.9][[SEP]][[SEP]]# Plot[[SEP]]fig, ax = plt.subplots(figsize=(10, 8))[[SEP]]ax.barh(countries, speakers, color='skyblue')[[SEP]]ax.set_xlabel('Number of speakers in millions')[[SEP]]ax.set_title('Countries with the largest number of native Spanish speakers worldwide as of 2019 (in millions)')[[SEP]]ax.invert_yaxis()  # Invert y-axis to have the largest bar on top[[SEP]][[SEP]]# Show plot[[SEP]]plt.tight_layout()[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]manufacturers = ['Nokia', 'Samsung', 'Sony Ericsson', 'LG', 'Motorola', 'Other'][[SEP]]market_share = [43, 25, 13, 6, 5, 2][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.bar(manufacturers, market_share, color='blue')[[SEP]][[SEP]]# Title and labels[[SEP]]plt.title('Market share of feature phone manufacturers in the United Kingdom (UK) in 2012')[[SEP]]plt.xlabel('Manufacturer')[[SEP]]plt.ylabel('Market share (%)')[[SEP]][[SEP]]# Display values on top of bars[[SEP]]for i, value in enumerate(market_share):[[SEP]]    plt.text(i, value + 1, f'{value}%', ha='center')[[SEP]][[SEP]]# Show plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]sectors = ['Retail', 'Office', 'Industrial'][[SEP]]rent_changes = [-1, 0.5, 1.9][[SEP]][[SEP]]# Create bar chart[[SEP]]fig, ax = plt.subplots()[[SEP]]bars = ax.bar(sectors, rent_changes, color=['red', 'blue', 'green'])[[SEP]][[SEP]]# Add labels[[SEP]]ax.set_xlabel('Property Type')[[SEP]]ax.set_ylabel('Quarterly rent change')[[SEP]]ax.set_title('Prime quarterly rent growth of commercial real estate in the United Kingdom in 1st quarter of 2020, by sector')[[SEP]][[SEP]]# Add data labels[[SEP]]for bar in bars:[[SEP]]    yval = bar.get_height()[[SEP]]    ax.text(bar.get_x() + bar.get_width()/2, yval, f'{yval}%', va='bottom' if yval >= 0 else 'top', ha='center')[[SEP]][[SEP]]# Show plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]categories = ['No', 'Yes, complete', 'Yes, incomplete'][[SEP]]values = [57, 28, 15][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]bars = plt.bar(categories, values, color='blue')[[SEP]][[SEP]]# Add title and labels[[SEP]]plt.title('Have you ever had sex?')[[SEP]]plt.xlabel('Response')[[SEP]]plt.ylabel('Share of female respondents')[[SEP]][[SEP]]# Add value labels on top of the bars[[SEP]]for bar in bars:[[SEP]]    yval = bar.get_height()[[SEP]]    plt.text(bar.get_x() + bar.get_width()/2, yval + 1, f'{yval}%', ha='center', va='bottom')[[SEP]][[SEP]]# Show plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]brands = ['Hollister', 'Abercrombie*'][[SEP]]sales_share = [59.58, 40.42][[SEP]][[SEP]]# Create bar chart[[SEP]]fig, ax = plt.subplots()[[SEP]]bars = ax.bar(brands, sales_share, color=['blue', 'blue'])[[SEP]][[SEP]]# Add title and labels[[SEP]]ax.set_title('Sales share of Abercrombie & Fitch Co. worldwide in 2019, by brand')[[SEP]]ax.set_ylabel('Share of net sales')[[SEP]][[SEP]]# Add data labels[[SEP]]for bar in bars:[[SEP]]    height = bar.get_height()[[SEP]]    ax.annotate(f'{height}%',[[SEP]]                xy=(bar.get_x() + bar.get_width() / 2, height),[[SEP]]                xytext=(0, 3),  # 3 points vertical offset[[SEP]]                textcoords="offset points",[[SEP]]                ha='center', va='bottom')[[SEP]][[SEP]]# Show plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]scenarios = ['Best case scenario', 'Baseline scenario', 'Worst case scenario'][[SEP]]job_losses = [4.7, 6.1, 10.4][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]bars = plt.bar(scenarios, job_losses, color='blue')[[SEP]][[SEP]]# Add title and labels[[SEP]]plt.title('Number of jobs at risk in the tourism sector in Latin America due to the coronavirus (COVID-19) pandemic in 2020, by scenario (in millions)')[[SEP]]plt.xlabel('Covid Scenario In America')[[SEP]]plt.ylabel('Number of job losses in millions')[[SEP]][[SEP]]# Add data labels on top of the bars[[SEP]]for bar in bars:[[SEP]]    yval = bar.get_height()[[SEP]]    plt.text(bar.get_x() + bar.get_width()/2.0, yval, f'{yval}', va='bottom')  # va: vertical alignment[[SEP]][[SEP]]# Show plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = ['2008', '2009', '2010', '2011*', '2012*', '2013*'][[SEP]]shipments = [16, 34, 36, 29, 26, 27][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.bar(years, shipments, color='blue')[[SEP]][[SEP]]# Title and labels[[SEP]]plt.title('Global netbook shipments from 2008 to 2013 (in million units)')[[SEP]]plt.xlabel('Year')[[SEP]]plt.ylabel('Shipments in million units')[[SEP]][[SEP]]# Show the plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]places = ['At home', 'Hospital', 'Hospice', 'Nursing home', 'Somewhere else'][[SEP]]percentages = [34, 29, 15, 10, 10][[SEP]][[SEP]]# Create bar chart[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.bar(places, percentages, color='blue')[[SEP]][[SEP]]# Title and labels[[SEP]]plt.title('Distribution of places where the loved ones of U.S. adults died within the last five years as of 2016')[[SEP]]plt.xlabel('Response')[[SEP]]plt.ylabel('Percentage of respondents')[[SEP]][[SEP]]# Display percentage on top of bars[[SEP]]for i, percentage in enumerate(percentages):[[SEP]]    plt.text(i, percentage + 0.5, f'{percentage}%', ha='center', va='bottom')[[SEP]][[SEP]]# Show plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]years = np.arange(2011, 2020)[[SEP]]canadian_products = [1.67, 1.75, 1.83, 1.86, 2.0, 2.08, 2.23, 2.28, 2.28][[SEP]]import_products = [3.95, 4.21, 4.4, 4.52, 4.7, 4.89, 4.96, 5.17, 5.18][[SEP]][[SEP]]# Plotting[[SEP]]fig, ax = plt.subplots()[[SEP]][[SEP]]bar_width = 0.35[[SEP]]index = np.arange(len(years))[[SEP]][[SEP]]bar1 = plt.bar(index, canadian_products, bar_width, label='Canadian products', color='royalblue')[[SEP]]bar2 = plt.bar(index + bar_width, import_products, bar_width, label='Import products', color='navy')[[SEP]][[SEP]]plt.xlabel('Year')[[SEP]]plt.ylabel('Sales in billion Canadian dollars')[[SEP]]plt.title('Wine dollar sales in Canada from FY 2011 to FY 2019, by product type')[[SEP]]plt.xticks(index + bar_width / 2, years)[[SEP]]plt.legend()[[SEP]][[SEP]]plt.tight_layout()[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]years = np.arange(2015, 2025)[[SEP]]others = [900, 900, 1200, 1300, 1600, 1800, 2000, 2200, 2600, 3000][[SEP]]immunology = [1300, 1500, 1500, 1700, 2000, 2300, 2700, 3000, 3500, 4100][[SEP]]neurology = [1100, 1200, 1700, 1800, 2100, 2400, 2700, 3300, 3700, 4200][[SEP]]cardiology = [2400, 2900, 3000, 3500, 4000, 4600, 5400, 6200, 7100, 8200][[SEP]]oncology = [3600, 3900, 4500, 5100, 5800, 6600, 7500, 8600, 9900, 11400][[SEP]][[SEP]]# Plot[[SEP]]fig, ax = plt.subplots(figsize=(10, 6))[[SEP]][[SEP]]ax.bar(years, others, label='Others', color='blue')[[SEP]]ax.bar(years, immunology, bottom=others, label='Immunology', color='navy')[[SEP]]ax.bar(years, neurology, bottom=np.array(others) + np.array(immunology), label='Neurology', color='grey')[[SEP]]ax.bar(years, cardiology, bottom=np.array(others) + np.array(immunology) + np.array(neurology), label='Cardiology', color='red')[[SEP]]ax.bar(years, oncology, bottom=np.array(others) + np.array(immunology) + np.array(neurology) + np.array(cardiology), label='Oncology', color='green')[[SEP]][[SEP]]# Labels and title[[SEP]]ax.set_xlabel('Year')[[SEP]]ax.set_ylabel('Market size in million U.S. dollars')[[SEP]]ax.set_title('Market size for biomarkers in the United States from 2015 to 2024, by condition')[[SEP]]ax.legend()[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]categories = ['Iowa Caucus - Democratic winner', 'Iowa Caucus - Republican winner', [[SEP]]              'New Hampshire Primary - Democratic winner', 'New Hampshire Primary - Republican winner'][[SEP]]won_nomination_and_election = [4, 3, 3, 6][[SEP]]won_nomination_but_not_election = [5, 3, 3, 5][[SEP]]did_not_win_nomination = [4, 6, 7, 2][[SEP]][[SEP]]x = np.arange(len(categories))  # the label locations[[SEP]]width = 0.2  # the width of the bars[[SEP]][[SEP]]fig, ax = plt.subplots(figsize=(10, 6))[[SEP]]rects1 = ax.bar(x - width, won_nomination_and_election, width, label="Won party's nomination and presidential election", color='blue')[[SEP]]rects2 = ax.bar(x, won_nomination_but_not_election, width, label="Won party's nomination, but not presidential election", color='black')[[SEP]]rects3 = ax.bar(x + width, did_not_win_nomination, width, label="Did not win party's nomination", color='grey')[[SEP]][[SEP]]# Add some text for labels, title and custom x-axis tick labels, etc.[[SEP]]ax.set_xlabel('Iowa caucuses and New Hampshire primaries')[[SEP]]ax.set_ylabel('Number of winning candidates')[[SEP]]ax.set_title('Fate of the most popular candidates in the Iowa caucuses and New Hampshire primaries from 1972 to 2020')[[SEP]]ax.set_xticks(x)[[SEP]]ax.set_xticklabels(categories, rotation=45, ha="right")[[SEP]]ax.legend()[[SEP]][[SEP]]fig.tight_layout()[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]years = ['2015', '2016', '2017', '2018', '2019**'][[SEP]]formal_sector = [2721.7, 2815.6, 2931.9, 3012.1, 3091.1][[SEP]]informal_sector = [12036.8, 12749.9, 13539.6, 14283.6, 15051.6][[SEP]][[SEP]]# Plotting[[SEP]]fig, ax = plt.subplots()[[SEP]][[SEP]]bar_width = 0.35[[SEP]]index = np.arange(len(years))[[SEP]][[SEP]]bar1 = plt.bar(index, formal_sector, bar_width, label='Formal sector', color='blue')[[SEP]]bar2 = plt.bar(index, informal_sector, bar_width, bottom=formal_sector, label='Informal sector*', color='darkblue')[[SEP]][[SEP]]plt.xlabel('Year')[[SEP]]plt.ylabel('Estimated employed individuals in thousands')[[SEP]]plt.title('Total estimated employment in Kenya from 2015 to 2019 (in 1,000s)')[[SEP]]plt.xticks(index, years)[[SEP]]plt.legend()[[SEP]][[SEP]]plt.tight_layout()[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]activities = [[[SEP]]    "Sending/receiving emails",[[SEP]]    "Finding information about goods and services",[[SEP]]    "Internet banking",[[SEP]]    "Using instant messaging services (eg Skype or WhatsApp)",[[SEP]]    "Social networking (eg Facebook or Twitter)",[[SEP]]    "Reading online news, newspapers or magazines",[[SEP]]    "Listening to/downloading music",[[SEP]]    "Looking for health-related information (eg injury, disease, nutrition, improving health etc)",[[SEP]]    "Making video or voice calls over the internet (eg via Skype or Facetime)",[[SEP]]    "Selling goods or services over the internet",[[SEP]]    "Playing or downloading games",[[SEP]]    "Watching video content from services such as YouTube"[[SEP]]][[SEP]][[SEP]]men = [86, 83, 76, 69, 69, 74, 67, 53, 46, 23, 43, 72][[SEP]]women = [85, 80, 76, 74, 72, 67, 58, 67, 51, 18, 39, 61][[SEP]][[SEP]]# Plotting[[SEP]]x = np.arange(len(activities))[[SEP]]width = 0.35[[SEP]][[SEP]]fig, ax = plt.subplots(figsize=(10, 8))[[SEP]]bars1 = ax.barh(x - width/2, men, width, label='Men')[[SEP]]bars2 = ax.barh(x + width/2, women, width, label='Women')[[SEP]][[SEP]]# Labels, title and custom x-axis tick labels[[SEP]]ax.set_xlabel('Share of respondents')[[SEP]]ax.set_title('Activities performed online by individuals in Great Britain in 2020, by gender')[[SEP]]ax.set_yticks(x)[[SEP]]ax.set_yticklabels(activities)[[SEP]]ax.legend()[[SEP]][[SEP]]# Invert y-axis to have the first activity on top[[SEP]]ax.invert_yaxis()[[SEP]][[SEP]]# Adding data labels[[SEP]]for bar in bars1:[[SEP]]    width = bar.get_width()[[SEP]]    ax.annotate(f'{width}%',[[SEP]]                xy=(width, bar.get_y() + bar.get_height() / 2),[[SEP]]                xytext=(3, 0),  # 3 points horizontal offset[[SEP]]                textcoords="offset points",[[SEP]]                ha='left', va='center')[[SEP]][[SEP]]for bar in bars2:[[SEP]]    width = bar.get_width()[[SEP]]    ax.annotate(f'{width}%',[[SEP]]                xy=(width, bar.get_y() + bar.get_height() / 2),[[SEP]]                xytext=(3, 0),  # 3 points horizontal offset[[SEP]]                textcoords="offset points",[[SEP]]                ha='left', va='center')[[SEP]][[SEP]]plt.tight_layout()[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]years = ['2012', '2013', '2014', '2015', '2017', '2018'][[SEP]]direct_writing = [18.7, 17, 15, 16, 15, 13][[SEP]]brokers = [29.74, 37.04, 36.32, 40.16, 41.16, 42.54][[SEP]]agents = [39.3, 61, 62, 60, 76, 77][[SEP]][[SEP]]# Convert to numpy arrays for stacking[[SEP]]direct_writing = np.array(direct_writing)[[SEP]]brokers = np.array(brokers)[[SEP]]agents = np.array(agents)[[SEP]][[SEP]]# Plot[[SEP]]fig, ax = plt.subplots()[[SEP]][[SEP]]bar_width = 0.5[[SEP]][[SEP]]# Stacked bar chart[[SEP]]p1 = ax.bar(years, direct_writing, bar_width, label='Direct writing', color='blue')[[SEP]]p2 = ax.bar(years, brokers, bar_width, bottom=direct_writing, label='Brokers', color='darkblue')[[SEP]]p3 = ax.bar(years, agents, bar_width, bottom=direct_writing + brokers, label='Agents', color='lightgrey')[[SEP]][[SEP]]# Labels and title[[SEP]]ax.set_xlabel('Year')[[SEP]]ax.set_ylabel('Share of channel')[[SEP]]ax.set_title('Distribution of life insurance premiums supply channels in Bulgaria from 2012 to 2018')[[SEP]]ax.legend()[[SEP]][[SEP]]# Show plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]categories = ['Unmarried', 'Married', 'Widowed', 'Divorced'][[SEP]]age_groups = ['0-17 years', '18-64 years', '65 years and older'][[SEP]]values = [[[SEP]]    [2312036, 3179547, 124728],[[SEP]]    [4, 2913051, 1242800],[[SEP]]    [0, 93029, 567853],[[SEP]]    [0, 790496, 269097][[SEP]]][[SEP]][[SEP]]# Convert data to numpy array for easier manipulation[[SEP]]values = np.array(values)[[SEP]][[SEP]]# Plotting[[SEP]]bar_width = 0.2[[SEP]]x = np.arange(len(categories))[[SEP]][[SEP]]fig, ax = plt.subplots(figsize=(10, 6))[[SEP]][[SEP]]# Create bars for each age group[[SEP]]for i, age_group in enumerate(age_groups):[[SEP]]    ax.bar(x + i * bar_width, values[:, i], width=bar_width, label=age_group)[[SEP]][[SEP]]# Add labels and title[[SEP]]ax.set_xlabel('Marital Status')[[SEP]]ax.set_ylabel('Population')[[SEP]]ax.set_title('Population of Belgium in 2020, by Age and Marital Status')[[SEP]]ax.set_xticks(x + bar_width)[[SEP]]ax.set_xticklabels(categories)[[SEP]]ax.legend()[[SEP]][[SEP]]# Display the plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]quarters = [[[SEP]]    "Q2 2016", "Q3 2016", "Q4 2016", "Q1 2017", "Q2 2017", "Q3 2017", "Q4 2017", "Q1 2018", "Q2 2018", "Q3 2018", [[SEP]]    "Q4 2018", "Q1 2019", "Q2 2019", "Q3 2019", "Q4 2019", "Q1 2020", "Q2 2020"[[SEP]]][[SEP]]euro_zone = [[[SEP]]    65.31, 65.58, 65.72, 65.94, 66.22, 66.48, 66.78, 66.93, 67.16, 67.42, [[SEP]]    67.59, 67.77, 67.93, 67.86, 68.26, 67.97, 66.22[[SEP]]][[SEP]]germany = [[[SEP]]    74.44, 74.88, 75, 74.94, 75.17, 75.31, 75.58, 75.68, 75.74, 76.04, [[SEP]]    76.23, 76.45, 76.66, 76.76, 76.82, 76.1, 76.28[[SEP]]][[SEP]]france = [[[SEP]]    64.16, 64.29, 64.11, 64.23, 64.8, 64.72, 65.13, 65.15, 65.2, 65.45, [[SEP]]    65.47, 65.5, 65.49, 65.28, 65.92, 66.02, 64.43[[SEP]]][[SEP]]japan = [[[SEP]]    74.3, 74.63, 74.8, 74.92, 75.13, 75.45, 75.82, 76.41, 76.82, 77.03, [[SEP]]    77.28, 77.46, 77.62, 77.85, 78.02, 77.96, 77[[SEP]]][[SEP]]uk = [[[SEP]]    73.52, 73.52, 73.65, 73.84, 74.17, 74.11, 74.33, 74.64, 74.64, 74.58, [[SEP]]    74.88, 75.04, 75.06, 75.11, 75.45, 75.62, 75.4[[SEP]]][[SEP]]us = [[[SEP]]    69.24, 69.38, 69.51, 69.81, 70.09, 70.27, 70.26, 70.53, 70.69, 70.73, [[SEP]]    70.95, 71.08, 71.2, 71.46, 71.68, 71.41, 62.53[[SEP]]][[SEP]][[SEP]]# Plotting[[SEP]]plt.figure(figsize=(14, 8))[[SEP]]plt.plot(quarters, euro_zone, marker='o', label='Euro-Zone', color='blue')[[SEP]]plt.plot(quarters, germany, marker='o', label='Germany', color='black')[[SEP]]plt.plot(quarters, france, marker='o', label='France', color='grey')[[SEP]]plt.plot(quarters, japan, marker='o', label='Japan', color='red')[[SEP]]plt.plot(quarters, uk, marker='o', label='United Kingdom', color='green')[[SEP]]plt.plot(quarters, us, marker='o', label='United States', color='orange')[[SEP]][[SEP]]# Adding titles and labels[[SEP]]plt.title('Employment rate in major developed countries from Q2 2016 to Q2 2020')[[SEP]]plt.xlabel('Quarter')[[SEP]]plt.ylabel('Employment rate')[[SEP]]plt.xticks(rotation=45)[[SEP]]plt.ylim(60, 80)[[SEP]]plt.grid(True)[[SEP]]plt.legend()[[SEP]][[SEP]]# Show plot[[SEP]]plt.tight_layout()[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]categories = ["Less than 50,000 U.S. dollars", "50,000 - 74,999 U.S. dollars", "75,000 - 149,999 U.S. dollars", "150,000 U.S. dollars or more"][[SEP]]at_home = [31.42, 18.81, 33.21, 16.53][[SEP]]at_work = [18.57, 18.23, 40.62, 22.58][[SEP]][[SEP]]x = np.arange(len(categories))  # the label locations[[SEP]]width = 0.35  # the width of the bars[[SEP]][[SEP]]fig, ax = plt.subplots()[[SEP]]rects1 = ax.bar(x - width/2, at_home, width, label='At home')[[SEP]]rects2 = ax.bar(x + width/2, at_work, width, label='At work')[[SEP]][[SEP]]# Add some text for labels, title and custom x-axis tick labels, etc.[[SEP]]ax.set_xlabel('Household Income')[[SEP]]ax.set_ylabel('Percentage')[[SEP]]ax.set_title('Distribution of the adult U.S. population with home and work internet access in 2016, by household income')[[SEP]]ax.set_xticks(x)[[SEP]]ax.set_xticklabels(categories)[[SEP]]ax.legend()[[SEP]][[SEP]]# Function to add labels on top of the bars[[SEP]]def autolabel(rects):[[SEP]]    for rect in rects:[[SEP]]        height = rect.get_height()[[SEP]]        ax.annotate('{}'.format(height),[[SEP]]                    xy=(rect.get_x() + rect.get_width() / 2, height),[[SEP]]                    xytext=(0, 3),  # 3 points vertical offset[[SEP]]                    textcoords="offset points",[[SEP]]                    ha='center', va='bottom')[[SEP]][[SEP]]autolabel(rects1)[[SEP]]autolabel(rects2)[[SEP]][[SEP]]fig.tight_layout()[[SEP]][[SEP]]plt.xticks(rotation=45, ha='right')[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]years = np.arange(2011, 2020)[[SEP]]us_restaurants = [776, 771, 768, 753, 755, 755, 740, 733, 724][[SEP]]intl_restaurants = [191, 204, 220, 222, 224, 239, 249, 256, 255][[SEP]][[SEP]]# Plot[[SEP]]fig, ax = plt.subplots()[[SEP]][[SEP]]bar_width = 0.35[[SEP]]index = np.arange(len(years))[[SEP]][[SEP]]bar1 = plt.bar(index, us_restaurants, bar_width, label='United States', color='blue')[[SEP]]bar2 = plt.bar(index, intl_restaurants, bar_width, bottom=us_restaurants, label='International', color='darkblue')[[SEP]][[SEP]]plt.xlabel('Year')[[SEP]]plt.ylabel('Number of restaurants')[[SEP]]plt.title('Number of Outback Steakhouse restaurants worldwide from 2011 to 2019, by location')[[SEP]]plt.xticks(index, years)[[SEP]]plt.legend()[[SEP]][[SEP]]# Adding the data labels[[SEP]]for i in range(len(years)):[[SEP]]    plt.text(i, us_restaurants[i] / 2, str(us_restaurants[i]), ha='center', va='center', color='white', fontweight='bold')[[SEP]]    plt.text(i, us_restaurants[i] + intl_restaurants[i] / 2, str(intl_restaurants[i]), ha='center', va='center', color='white', fontweight='bold')[[SEP]][[SEP]]plt.tight_layout()[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]categories = ['All broadband speeds', 'Up to 10 Mbit/s', '10 Mbit/s and higher', '30 Mbit/s and higher'][[SEP]]download_speeds = [44, 6, 57, 77][[SEP]]upload_speeds = [6, 1, 7, 10][[SEP]][[SEP]]x = np.arange(len(categories))  # the label locations[[SEP]]width = 0.35  # the width of the bars[[SEP]][[SEP]]fig, ax = plt.subplots()[[SEP]]rects1 = ax.bar(x - width/2, download_speeds, width, label='Average download speed')[[SEP]]rects2 = ax.bar(x + width/2, upload_speeds, width, label='Average upload speed')[[SEP]][[SEP]]# Add some text for labels, title and custom x-axis tick labels, etc.[[SEP]]ax.set_xlabel('Category')[[SEP]]ax.set_ylabel('Speed (Mbit/s)')[[SEP]]ax.set_title('Average fixed-line broadband speed in the United Kingdom (UK) in 2017')[[SEP]]ax.set_xticks(x)[[SEP]]ax.set_xticklabels(categories)[[SEP]]ax.legend()[[SEP]][[SEP]]# Attach a text label above each bar in *rects*, displaying its height.[[SEP]]def autolabel(rects):[[SEP]]    """Attach a text label above each bar in *rects*, displaying its height."""[[SEP]]    for rect in rects:[[SEP]]        height = rect.get_height()[[SEP]]        ax.annotate('{}'.format(height),[[SEP]]                    xy=(rect.get_x() + rect.get_width() / 2, height),[[SEP]]                    xytext=(0, 3),  # 3 points vertical offset[[SEP]]                    textcoords="offset points",[[SEP]]                    ha='center', va='bottom')[[SEP]][[SEP]]autolabel(rects1)[[SEP]]autolabel(rects2)[[SEP]][[SEP]]fig.tight_layout()[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]platforms = ['Tumblr', 'Twitter'][[SEP]]mentions = [7.3, 3.1][[SEP]]accounts = [1.4, 1.5][[SEP]]mentions_per_account = [5.2, 2.0][[SEP]][[SEP]]x = np.arange(len(platforms))  # the label locations[[SEP]]width = 0.25  # the width of the bars[[SEP]][[SEP]]fig, ax = plt.subplots()[[SEP]]rects1 = ax.bar(x - width, mentions, width, label='Mentions (in millions)', color='blue')[[SEP]]rects2 = ax.bar(x, accounts, width, label='Accounts (in millions)', color='black')[[SEP]]rects3 = ax.bar(x + width, mentions_per_account, width, label='Mentions per account', color='grey')[[SEP]][[SEP]]# Add some text for labels, title and custom x-axis tick labels, etc.[[SEP]]ax.set_xlabel('Platform')[[SEP]]ax.set_ylabel('Amount')[[SEP]]ax.set_title('Total TV show mentions on Tumblr and Twitter over an 11-day window as of January 2014')[[SEP]]ax.set_xticks(x)[[SEP]]ax.set_xticklabels(platforms)[[SEP]]ax.legend()[[SEP]][[SEP]]# Add labels above the bars[[SEP]]def autolabel(rects):[[SEP]]    """Attach a text label above each bar in *rects*, displaying its height."""[[SEP]]    for rect in rects:[[SEP]]        height = rect.get_height()[[SEP]]        ax.annotate('{}'.format(height),[[SEP]]                    xy=(rect.get_x() + rect.get_width() / 2, height),[[SEP]]                    xytext=(0, 3),  # 3 points vertical offset[[SEP]]                    textcoords="offset points",[[SEP]]                    ha='center', va='bottom')[[SEP]][[SEP]]autolabel(rects1)[[SEP]]autolabel(rects2)[[SEP]]autolabel(rects3)[[SEP]][[SEP]]fig.tight_layout()[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]categories = [[[SEP]]    "As a valuable education resource",[[SEP]]    "As a pillar of the community",[[SEP]]    "As a community center",[[SEP]]    "As a cultural center",[[SEP]]    "As a family destination",[[SEP]]    "As an entertainment resource"[[SEP]]][[SEP]][[SEP]]very_important = [59, 33, 31, 29, 31, 22][[SEP]]somewhat_important = [30, 44, 42, 41, 36, 43][[SEP]]not_that_important = [7, 16, 18, 20, 21, 24][[SEP]]not_at_all_important = [4, 7, 8, 10, 11, 11][[SEP]][[SEP]]# Plotting[[SEP]]barWidth = 0.5[[SEP]]r = np.arange(len(categories))[[SEP]][[SEP]]plt.figure(figsize=(10, 6))[[SEP]][[SEP]]plt.bar(r, very_important, color='#1f77b4', edgecolor='white', width=barWidth, label='Very important')[[SEP]]plt.bar(r, somewhat_important, bottom=very_important, color='#2ca02c', edgecolor='white', width=barWidth, label='Somewhat important')[[SEP]]plt.bar(r, not_that_important, bottom=np.array(very_important) + np.array(somewhat_important), color='#d62728', edgecolor='white', width=barWidth, label='Not that important')[[SEP]]plt.bar(r, not_at_all_important, bottom=np.array(very_important) + np.array(somewhat_important) + np.array(not_that_important), color='#9467bd', edgecolor='white', width=barWidth, label='Not at all important')[[SEP]][[SEP]]# Adding labels[[SEP]]plt.xlabel('Categories', fontweight='bold')[[SEP]]plt.ylabel('Percentage', fontweight='bold')[[SEP]]plt.xticks(r, categories, rotation=45, ha='right')[[SEP]]plt.title('Importance of Various Aspects of Local Libraries')[[SEP]][[SEP]]# Adding legend[[SEP]]plt.legend(loc='upper right')[[SEP]][[SEP]]# Show the plot[[SEP]]plt.tight_layout()[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]categories = ['All adults', 'Unaffiliated', 'White mainline Protestant', 'White Catholic', 'Hispanic Catholic', 'White evangelical Protestant', 'Black Protestant'][[SEP]]pain_no_hope = [62, 85, 71, 67, 56, 42, 42][[SEP]]incurable_disease = [56, 78, 64, 62, 46, 36, 34][[SEP]]ready_to_die = [38, 52, 37, 47, 33, 25, 26][[SEP]]burden_on_family = [32, 44, 31, 40, 23, 24, 21][[SEP]][[SEP]]x = np.arange(len(categories))  # the label locations[[SEP]]width = 0.2  # the width of the bars[[SEP]][[SEP]]fig, ax = plt.subplots(figsize=(12, 8))[[SEP]]rects1 = ax.bar(x - 1.5*width, pain_no_hope, width, label='Is in a great deal of pain, no hope of improvement', color='blue')[[SEP]]rects2 = ax.bar(x - 0.5*width, incurable_disease, width, label='Has incurable disease', color='navy')[[SEP]]rects3 = ax.bar(x + 0.5*width, ready_to_die, width, label='Is ready to die, living is now a burden', color='grey')[[SEP]]rects4 = ax.bar(x + 1.5*width, burden_on_family, width, label='Is an extremely heavy burden on family', color='brown')[[SEP]][[SEP]]# Add some text for labels, title and custom x-axis tick labels, etc.[[SEP]]ax.set_xlabel('Religion')[[SEP]]ax.set_ylabel('Percentage of respondents')[[SEP]]ax.set_title('Views of U.S. adults on morality of suicide in selected circumstances in 2013, by religion')[[SEP]]ax.set_xticks(x)[[SEP]]ax.set_xticklabels(categories)[[SEP]]ax.legend()[[SEP]][[SEP]]fig.tight_layout()[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]years = ['2014/15', '2015/16', '2016/17', '2017/18', '2018/19', '2019/20**', '2020/21**'][[SEP]]broadcasting = [1780, 1927, 2768, 2844, 3049, 2200, 3700][[SEP]]commercial = [987, 1090, 1167, 1305, 1425, 1550, 1350][[SEP]]matchday = [583, 622, 617, 670, 683, 550, 350][[SEP]][[SEP]]# Plotting[[SEP]]fig, ax = plt.subplots(figsize=(10, 6))[[SEP]][[SEP]]bar_width = 0.6[[SEP]]index = np.arange(len(years))[[SEP]][[SEP]]p1 = plt.bar(index, broadcasting, bar_width, label='Broadcasting', color='royalblue')[[SEP]]p2 = plt.bar(index, commercial, bar_width, bottom=broadcasting, label='Commercial/Sponsorship**', color='darkblue')[[SEP]]p3 = plt.bar(index, matchday, bar_width, bottom=np.array(broadcasting) + np.array(commercial), label='Matchday', color='lightgrey')[[SEP]][[SEP]]plt.xlabel('Year')[[SEP]]plt.ylabel('Revenue in million GBP')[[SEP]]plt.title('Premier league football clubs revenue in England (UK) from 2014/15 to 2020/21, by revenue stream')[[SEP]]plt.xticks(index, years)[[SEP]]plt.legend()[[SEP]][[SEP]]# Adding data labels[[SEP]]for rect in p1 + p2 + p3:[[SEP]]    height = rect.get_height()[[SEP]]    plt.text(rect.get_x() + rect.get_width() / 2., rect.get_y() + height / 2., '%d' % int(height), ha='center', va='center', color='white', fontsize=8)[[SEP]][[SEP]]plt.tight_layout()[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data from the statistic[[SEP]]years = [2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019][[SEP]]solved_offenses = [350229, 339149, 342197, 317576, 309172, 298753, 294662, 285437, 272894, 273636, 274990][[SEP]]all_offenses = [528551, 505357, 531830, 491846, 489765, 482050, 472646, 466857, 438373, 443525, 452771][[SEP]][[SEP]]# Create the plot[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.bar(years, all_offenses, color='black', label='All offenses')[[SEP]]plt.bar(years, solved_offenses, color='blue', label='Solved offenses')[[SEP]][[SEP]]# Add labels and title[[SEP]]plt.xlabel('Year')[[SEP]]plt.ylabel('Number of offenses')[[SEP]]plt.title('Number of criminal offenses in Finland from 2009 to 2019')[[SEP]]plt.legend()[[SEP]][[SEP]]# Show the plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]years = ['2016', '2017', '2018*', '2019*', '2020*', '2021*', '2022*'][[SEP]]commercial = [329, 349, 371, 395, 420, 446, 475][[SEP]]government = [29, 31, 33, 35, 37, 39, 42][[SEP]][[SEP]]# Plotting[[SEP]]x = np.arange(len(years))  # the label locations[[SEP]]width = 0.35  # the width of the bars[[SEP]][[SEP]]fig, ax = plt.subplots()[[SEP]]rects1 = ax.bar(x - width/2, commercial, width, label='Commercial')[[SEP]]rects2 = ax.bar(x + width/2, government, width, label='Government')[[SEP]][[SEP]]# Add some text for labels, title and custom x-axis tick labels, etc.[[SEP]]ax.set_xlabel('Year')[[SEP]]ax.set_ylabel('Revenue in million U.S. dollars')[[SEP]]ax.set_title('Government/commercial cyber security market revenue in Kenya from 2016 to 2022')[[SEP]]ax.set_xticks(x)[[SEP]]ax.set_xticklabels(years)[[SEP]]ax.legend()[[SEP]][[SEP]]# Adding labels on top of the bars[[SEP]]def autolabel(rects):[[SEP]]    """Attach a text label above each bar in *rects*, displaying its height."""[[SEP]]    for rect in rects:[[SEP]]        height = rect.get_height()[[SEP]]        ax.annotate('{}'.format(height),[[SEP]]                    xy=(rect.get_x() + rect.get_width() / 2, height),[[SEP]]                    xytext=(0, 3),  # 3 points vertical offset[[SEP]]                    textcoords="offset points",[[SEP]]                    ha='center', va='bottom')[[SEP]][[SEP]]autolabel(rects1)[[SEP]]autolabel(rects2)[[SEP]][[SEP]]fig.tight_layout()[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]categories = ['On the phone', 'In person'][[SEP]]improved = [26, 26][[SEP]]not_changed = [44, 58][[SEP]]worsened = [30, 17][[SEP]][[SEP]]# Bar width[[SEP]]bar_width = 0.5[[SEP]][[SEP]]# Positions of the bars on the x-axis[[SEP]]r1 = np.arange(len(categories))[[SEP]]r2 = [x + bar_width for x in r1][[SEP]]r3 = [x + bar_width for x in r2][[SEP]][[SEP]]# Create the plot[[SEP]]fig, ax = plt.subplots()[[SEP]][[SEP]]# Create bars[[SEP]]plt.bar(r1, improved, color='blue', width=bar_width, edgecolor='grey', label='Improved')[[SEP]]plt.bar(r2, not_changed, color='navy', width=bar_width, edgecolor='grey', label='Have not changed')[[SEP]]plt.bar(r3, worsened, color='grey', width=bar_width, edgecolor='grey', label='Worsened')[[SEP]][[SEP]]# Add xticks on the middle of the group bars[[SEP]]plt.xlabel('Response', fontweight='bold')[[SEP]]plt.xticks([r + bar_width for r in range(len(categories))], categories)[[SEP]][[SEP]]# Add labels[[SEP]]for i in range(len(r1)):[[SEP]]    plt.text(r1[i], improved[i] + 1, f'{improved[i]}%', ha='center', va='bottom', fontweight='bold', color='white')[[SEP]]    plt.text(r2[i], not_changed[i] + 1, f'{not_changed[i]}%', ha='center', va='bottom', fontweight='bold', color='white')[[SEP]]    plt.text(r3[i], worsened[i] + 1, f'{worsened[i]}%', ha='center', va='bottom', fontweight='bold', color='black')[[SEP]][[SEP]]# Create legend & Show graphic[[SEP]]plt.legend()[[SEP]]plt.title('Have companies generally improved or worsened in terms of the amount of time you feel you have spent waiting for help from customer service?')[[SEP]]plt.ylabel('Percentage of respondents')[[SEP]]plt.show()
<code>[[SEP]]import matplotlib.pyplot as plt[[SEP]]import pandas as pd[[SEP]]import io[[SEP]][[SEP]]data = """[[SEP]]Month,Not seasonally adjusted,Seasonally adjusted[[SEP]]Jul 20,4.2,4.5[[SEP]]Jun 20,4.2,4.3[[SEP]]May 20,3.6,3.6[[SEP]]Apr 20,3.6,3.4[[SEP]]Mar 20,3.2,2.9[[SEP]]Feb 20,3.2,2.9[[SEP]]Jan 20,3.3,3[[SEP]]Dec 19,3,3.2[[SEP]]Nov 19,3.5,3.5[[SEP]]Oct 19,3.5,3.5[[SEP]]Sep 19,3.5,3.5[[SEP]]Aug 19,3.1,3.5[[SEP]]Jul 19,3.1,3.4[[SEP]]Jun 19,3.2,3.4[[SEP]]May 19,3.3,3.3[[SEP]]Apr 19,3.4,3.3[[SEP]]Mar 19,3.6,3.3[[SEP]]Feb 19,3.7,3.4[[SEP]]Jan 19,3.9,3.6[[SEP]]Dec 18,3.3,3.6[[SEP]]Nov 18,3.5,3.5[[SEP]]Oct 18,3.7,3.7[[SEP]]Sep 18,3.8,3.7[[SEP]]Aug 18,3.5,3.9[[SEP]]Jul 18,3.5,3.8[[SEP]]Jun 18,3.7,3.9[[SEP]]May 18,3.9,3.9[[SEP]]Apr 18,4.1,3.9[[SEP]]Mar 18,4.2,3.9[[SEP]]Feb 18,4.4,4.1[[SEP]]Jan 18,4.5,4.2[[SEP]]Dec 17,4.1,4.4[[SEP]]Nov 17,4.4,4.4[[SEP]]Oct 17,4.5,4.5[[SEP]]Sep 17,4.7,4.7[[SEP]]Aug 17,4.3,4.7[[SEP]]Jul 17,4.6,4.8[[SEP]]Jun 17,4.7,4.9[[SEP]]May 17,5.1,5.1[[SEP]]Apr 17,5.2,5.1[[SEP]]Mar 17,5.4,5.1[[SEP]]Feb 17,5.6,5.3[[SEP]]Jan 17,5.7,5.3[[SEP]]Dec 16,5.1,5.4[[SEP]]Nov 16,5.5,5.6[[SEP]]Oct 16,5.7,5.6[[SEP]]Sep 16,5.7,5.7[[SEP]]Aug 16,5.4,5.8[[SEP]]Jul 16,5.8,6[[SEP]]Jun 16,5.9,6.1[[SEP]]May 16,6.2,6.3[[SEP]]Apr 16,6.6,6.4[[SEP]]Mar 16,6.7,6.4[[SEP]]Feb 16,6.9,6.5[[SEP]]Jan 16,6.8,6.5[[SEP]]Dec 15,6.4,6.6[[SEP]]Nov 15,6.6,6.7[[SEP]]Oct 15,6.9,6.9[[SEP]]Sep 15,6.8,6.8[[SEP]]Aug 15,6.4,6.8[[SEP]]Jul 15,6.5,6.8[[SEP]]Jun 15,6.7,6.9[[SEP]]May 15,6.9,6.9[[SEP]]Apr 15,7.1,7[[SEP]]Mar 15,7.3,7[[SEP]]Feb 15,7.5,7.1[[SEP]]Jan 15,7.6,7.2[[SEP]]Dec 14,7,7.2[[SEP]]Nov 14,7.1,7.1[[SEP]]Oct 14,7.1,7.1[[SEP]]Sep 14,7.1,7.1[[SEP]]Aug 14,6.8,7.2[[SEP]]Jul 14,7,7.3[[SEP]]Jun 14,7.2,7.4[[SEP]]May 14,7.5,7.6[[SEP]]Apr 14,7.9,7.7[[SEP]]Mar 14,8.1,7.8[[SEP]]Feb 14,8.2,7.9[[SEP]]Jan 14,8.1,7.8[[SEP]]Dec 13,7.4,7.7[[SEP]]Nov 13,7.6,7.6[[SEP]]Oct 13,7.6,7.6[[SEP]]Sep 13,7.5,7.6[[SEP]]Aug 13,7.1,7.5[[SEP]]Jul 13,7.2,7.5[[SEP]]Jun 13,7.1,7.3[[SEP]]May 13,7.1,7.1[[SEP]]Apr 13,7.1,7[[SEP]]Mar 13,7.2,6.9[[SEP]]Feb 13,7.1,6.8[[SEP]]Jan 13,6.9,6.6[[SEP]]Dec 12,6.2,6.4[[SEP]]Nov 12,6.2,6.2[[SEP]]Oct 12,6.1,6.1[[SEP]]Sep 12,6,6[[SEP]]Aug 12,5.5,5.8[[SEP]]Jul 12,5.6,5.9[[SEP]]Jun 12,5.5,5.7[[SEP]]May 12,5.6,5.7[[SEP]]Apr 12,5.8,5.7[[SEP]]Mar 12,5.8,5.5[[SEP]]Feb 12,5.8,5.5[[SEP]]Jan 12,5.8,5.5[[SEP]]Dec 11,5.1,5.4[[SEP]]Nov 11,5.4,5.4[[SEP]]Oct 11,5.2,5.2[[SEP]]Sep 11,5.1,5.1[[SEP]]Aug 11,4.6,4.9[[SEP]]Jul 11,4.6,4.9[[SEP]]Jun 11,4.6,4.7[[SEP]]May 11,4.8,4.8[[SEP]]Apr 11,4.9,4.7[[SEP]]Mar 11,5.1,4.8[[SEP]]Feb 11,5.3,4.9[[SEP]]Jan 11,5.2,4.9[[SEP]]Dec 10,4.7,5[[SEP]]Nov 10,4.9,4.9[[SEP]]Oct 10,4.9,4.9[[SEP]]Sep 10,4.9,5[[SEP]]Aug 10,4.7,5[[SEP]]Jul 10,4.7,5[[SEP]]Jun 10,4.9,5[[SEP]]May 10,5,5[[SEP]]Apr 10,5.1,5[[SEP]]Mar 10,5.4,5.1[[SEP]]Feb 10,5.5,5.1[[SEP]]Jan 10,5.4,5.1[[SEP]]Dec 09,4.7,5[[SEP]]Nov 09,4.9,4.9[[SEP]]Oct 09,4.7,4.7[[SEP]]Sep 09,4.6,4.7[[SEP]]Aug 09,4.2,4.6[[SEP]]Jul 09,4.1,4.5[[SEP]]Jun 09,4.2,4.3
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]years = ['2009', '2010', '2011', '2012', '2013'][[SEP]]male = [93.4, 92.9, 90.8, 91, 85][[SEP]]female = [6.6, 7.1, 9.2, 9, 15][[SEP]][[SEP]]# Plotting[[SEP]]fig, ax = plt.subplots()[[SEP]][[SEP]]bar_width = 0.35[[SEP]]index = np.arange(len(years))[[SEP]][[SEP]]bar1 = plt.bar(index, male, bar_width, label='Male', color='blue')[[SEP]]bar2 = plt.bar(index, female, bar_width, bottom=male, label='Female', color='black')[[SEP]][[SEP]]plt.xlabel('Year')[[SEP]]plt.ylabel('Share of employees')[[SEP]]plt.title('Gender split of game development industry employees in the UK (2009-2013)')[[SEP]]plt.xticks(index, years)[[SEP]]plt.ylim(0, 100)[[SEP]]plt.legend()[[SEP]][[SEP]]# Adding data labels[[SEP]]for rect in bar1 + bar2:[[SEP]]    height = rect.get_height()[[SEP]]    plt.text(rect.get_x() + rect.get_width() / 2.0, height, f'{height}%', ha='center', va='bottom')[[SEP]][[SEP]]plt.tight_layout()[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]categories = [[[SEP]]    "Overall quality of life",[[SEP]]    "Influence of organized religion",[[SEP]]    "Opportunity to get ahead through hard work",[[SEP]]    "Moral and ethical climate",[[SEP]]    "Size and influence of major corporations",[[SEP]]    "Our system of government and how well it works",[[SEP]]    "Size and power of federal government",[[SEP]]    "Income and wealth distribution"[[SEP]]][[SEP]]satisfied = [74, 54, 54, 35, 35, 35, 33, 32][[SEP]]dissatisfied = [25, 40, 45, 62, 63, 65, 66, 67][[SEP]][[SEP]]x = np.arange(len(categories))  # the label locations[[SEP]]width = 0.35  # the width of the bars[[SEP]][[SEP]]fig, ax = plt.subplots(figsize=(12, 7))[[SEP]]rects1 = ax.bar(x - width/2, satisfied, width, label='satisfied', color='blue')[[SEP]]rects2 = ax.bar(x + width/2, dissatisfied, width, label='dissatisfied', color='navy')[[SEP]][[SEP]]# Add some text for labels, title and custom x-axis tick labels, etc.[[SEP]]ax.set_xlabel('Categories')[[SEP]]ax.set_ylabel('Share of respondents (%)')[[SEP]]ax.set_title('How satisfied are you with the following aspects of life in the United States?')[[SEP]]ax.set_xticks(x)[[SEP]]ax.set_xticklabels(categories, rotation=45, ha="right")[[SEP]]ax.legend()[[SEP]][[SEP]]# Add labels on top of the bars[[SEP]]def autolabel(rects):[[SEP]]    """Attach a text label above each bar in *rects*, displaying its height."""[[SEP]]    for rect in rects:[[SEP]]        height = rect.get_height()[[SEP]]        ax.annotate('{}'.format(height),[[SEP]]                    xy=(rect.get_x() + rect.get_width() / 2, height),[[SEP]]                    xytext=(0, 3),  # 3 points vertical offset[[SEP]]                    textcoords="offset points",[[SEP]]                    ha='center', va='bottom')[[SEP]][[SEP]]autolabel(rects1)[[SEP]]autolabel(rects2)[[SEP]][[SEP]]fig.tight_layout()[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]categories = ['Filter-tipped', 'Plain, untipped, hand-rolled'][[SEP]]men = [72, 28][[SEP]]women = [85, 15][[SEP]][[SEP]]x = np.arange(len(categories))  # the label locations[[SEP]]width = 0.35  # the width of the bars[[SEP]][[SEP]]fig, ax = plt.subplots()[[SEP]]rects1 = ax.bar(x - width/2, men, width, label='Men')[[SEP]]rects2 = ax.bar(x + width/2, women, width, label='Women')[[SEP]][[SEP]]# Add some text for labels, title and custom x-axis tick labels, etc.[[SEP]]ax.set_xlabel('Type of cigarettes smoked')[[SEP]]ax.set_ylabel('Share of respondents')[[SEP]]ax.set_title('Distribution of the type of cigarettes smoked in Northern Ireland in 2013, by gender')[[SEP]]ax.set_xticks(x)[[SEP]]ax.set_xticklabels(categories)[[SEP]]ax.legend()[[SEP]][[SEP]]# Attach a text label above each bar in *rects*, displaying its height.[[SEP]]def autolabel(rects):[[SEP]]    for rect in rects:[[SEP]]        height = rect.get_height()[[SEP]]        ax.annotate('{}'.format(height) + '%',[[SEP]]                    xy=(rect.get_x() + rect.get_width() / 2, height),[[SEP]]                    xytext=(0, 3),  # 3 points vertical offset[[SEP]]                    textcoords="offset points",[[SEP]]                    ha='center', va='bottom')[[SEP]][[SEP]]autolabel(rects1)[[SEP]]autolabel(rects2)[[SEP]][[SEP]]fig.tight_layout()[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]categories = [[[SEP]]    "Social media (e.g., Facebook, Twitter, etc.)",[[SEP]]    "Videos/vlogs (e.g., YouTube, Vimeo etc.)",[[SEP]]    "Entertainment/news articles (e.g., New York Times articles, Buzzfeed articles, etc.)",[[SEP]]    "Chat boards/forums/imageboards (e.g., Reddit)",[[SEP]]    "Blogs (e.g., Lifehacker, TMZ, Jezebel, etc.)",[[SEP]]    "Review sites (e.g., Yelp, TripAdvisor, etc.)"[[SEP]]][[SEP]][[SEP]]responses = {[[SEP]]    "Every day": [50, 25, 15, 10, 10, 8],[[SEP]]    "A few times a week": [18, 17, 13, 12, 12, 14],[[SEP]]    "Once a week": [5, 7, 7, 6, 5, 8],[[SEP]]    "A few times a month": [7, 10, 9, 7, 6, 12],[[SEP]]    "Once a month": [4, 4, 3, 4, 3, 7],[[SEP]]    "Less than once a month": [5, 10, 9, 12, 11, 17],[[SEP]]    "Never": [11, 27, 44, 49, 54, 34][[SEP]]}[[SEP]][[SEP]]# Plotting[[SEP]]barWidth = 0.1[[SEP]]r = np.arange(len(categories))[[SEP]][[SEP]]fig, ax = plt.subplots(figsize=(10, 6))[[SEP]][[SEP]]for i, (label, values) in enumerate(responses.items()):[[SEP]]    ax.barh(r + i * barWidth, values, height=barWidth, label=label)[[SEP]][[SEP]]ax.set_yticks(r + barWidth * 3)[[SEP]]ax.set_yticklabels(categories)[[SEP]]ax.set_xlabel('Share of respondents')[[SEP]]ax.set_title('How often do you make or post comments on the following types of digital media?')[[SEP]]ax.legend(title='Response', bbox_to_anchor=(1.05, 1), loc='upper left')[[SEP]][[SEP]]plt.tight_layout()[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]categories = ['Cases', 'Hospital admissions', 'Deaths'][[SEP]]men = [46.4, 54.6, 54][[SEP]]women = [53.6, 38.9, 46][[SEP]][[SEP]]x = np.arange(len(categories))  # the label locations[[SEP]]width = 0.35  # the width of the bars[[SEP]][[SEP]]fig, ax = plt.subplots()[[SEP]]rects1 = ax.bar(x - width/2, men, width, label='Men', color='royalblue')[[SEP]]rects2 = ax.bar(x + width/2, women, width, label='Women', color='navy')[[SEP]][[SEP]]# Add some text for labels, title and custom x-axis tick labels, etc.[[SEP]]ax.set_xlabel('Categories')[[SEP]]ax.set_ylabel('Percentage')[[SEP]]ax.set_title('Distribution of coronavirus cases, hospital admissions, and deaths due to COVID-19 in the Netherlands as of December 1, 2020, by gender')[[SEP]]ax.set_xticks(x)[[SEP]]ax.set_xticklabels(categories)[[SEP]]ax.legend()[[SEP]][[SEP]]# Attach a text label above each bar in *rects*, displaying its height.[[SEP]]def autolabel(rects):[[SEP]]    """Attach a text label above each bar in *rects*, displaying its height."""[[SEP]]    for rect in rects:[[SEP]]        height = rect.get_height()[[SEP]]        ax.annotate('{}'.format(height),[[SEP]]                    xy=(rect.get_x() + rect.get_width() / 2, height),[[SEP]]                    xytext=(0, 3),  # 3 points vertical offset[[SEP]]                    textcoords="offset points",[[SEP]]                    ha='center', va='bottom')[[SEP]][[SEP]]autolabel(rects1)[[SEP]]autolabel(rects2)[[SEP]][[SEP]]fig.tight_layout()[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]categories = ['Democrat', 'Independent', 'Republican'][[SEP]]obama_support = [93, 44, 5][[SEP]]romney_support = [5, 46, 94][[SEP]][[SEP]]x = np.arange(len(categories))  # the label locations[[SEP]]width = 0.35  # the width of the bars[[SEP]][[SEP]]fig, ax = plt.subplots()[[SEP]]rects1 = ax.bar(x - width/2, obama_support, width, label='Obama', color='blue')[[SEP]]rects2 = ax.bar(x + width/2, romney_support, width, label='Romney', color='red')[[SEP]][[SEP]]# Add some text for labels, title and custom x-axis tick labels, etc.[[SEP]]ax.set_xlabel('Party Affiliation')[[SEP]]ax.set_ylabel('Share of Respondents (%)')[[SEP]]ax.set_title('Voter support for Barack Obama and Mitt Romney in the 2012 election, by party affiliation')[[SEP]]ax.set_xticks(x)[[SEP]]ax.set_xticklabels(categories)[[SEP]]ax.legend()[[SEP]][[SEP]]# Attach a text label above each bar in *rects*, displaying its height.[[SEP]]def autolabel(rects):[[SEP]]    """Attach a text label above each bar in *rects*, displaying its height."""[[SEP]]    for rect in rects:[[SEP]]        height = rect.get_height()[[SEP]]        ax.annotate('{}'.format(height) + '%',[[SEP]]                    xy=(rect.get_x() + rect.get_width() / 2, height),[[SEP]]                    xytext=(0, 3),  # 3 points vertical offset[[SEP]]                    textcoords="offset points",[[SEP]]                    ha='center', va='bottom')[[SEP]][[SEP]]autolabel(rects1)[[SEP]]autolabel(rects2)[[SEP]][[SEP]]fig.tight_layout()[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]categories = [[[SEP]]    "Attack or unauthorised access by outsiders",[[SEP]]    "Theft or unauthorised disclosure of confidential information",[[SEP]]    "Infection by virus or malicious software",[[SEP]]    "Staff misuse of the internet or email",[[SEP]]    "Systems failure or data corruption",[[SEP]]    "Fraud or theft using computer systems",[[SEP]]    "Infringement of laws or regulations",[[SEP]]    "Physical theft of computer equipment"[[SEP]]][[SEP]][[SEP]]values_2014 = [11, 43, 21, 0, 3, 4, 18, 0][[SEP]]values_2015 = [40, 32, 11, 11, 7, 4, 4, 0][[SEP]][[SEP]]bar_width = 0.35[[SEP]]index = np.arange(len(categories))[[SEP]][[SEP]]# Plotting[[SEP]]fig, ax = plt.subplots(figsize=(10, 6))[[SEP]]bar1 = ax.barh(index, values_2014, bar_width, label='2014', color='blue')[[SEP]]bar2 = ax.barh(index + bar_width, values_2015, bar_width, label='2015', color='darkblue')[[SEP]][[SEP]]# Labels and Titles[[SEP]]ax.set_xlabel('Percentage of respondents')[[SEP]]ax.set_title('Types of security incidents of large organisations ranked by severity in the UK (2014 and 2015)')[[SEP]]ax.set_yticks(index + bar_width / 2)[[SEP]]ax.set_yticklabels(categories)[[SEP]]ax.legend()[[SEP]][[SEP]]# Display the plot[[SEP]]plt.tight_layout()[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]years = np.arange(2004, 2020)[[SEP]]latin_america = [2.1, 1.7, 1.6, 1.4, 1.6, 1.7, 2.1, 2.6, 2.8, 3.0, 3.4, 2.8, 3.4, 2.7, 2.7, 2.7][[SEP]]asia_pacific = [8.5, 7.2, 6.8, 6.5, 6.8, 7.2, 8.5, 9.0, 10.4, 11.1, 12.4, 14.6, 15.3, 16.2, 17.1, 17.8][[SEP]]emea = [10.4, 9.9, 9.7, 8.7, 9.7, 9.9, 10.4, 10.8, 10.7, 10.9, 10.6, 10.0, 9.8, 10.2, 10.1, 10.3][[SEP]]us_canada = [10.6, 10.6, 9.6, 9.6, 9.6, 10.6, 10.2, 10.8, 10.7, 10.9, 10.4, 11.1, 11.4, 11.1, 11.9, 11.4][[SEP]][[SEP]]# Plot[[SEP]]fig, ax = plt.subplots(figsize=(10, 6))[[SEP]][[SEP]]ax.bar(years, latin_america, label='Latin America', color='blue')[[SEP]]ax.bar(years, asia_pacific, bottom=latin_america, label='Asia Pacific', color='navy')[[SEP]]ax.bar(years, emea, bottom=np.array(latin_america) + np.array(asia_pacific), label='Europe, Middle East and Africa', color='lightgrey')[[SEP]]ax.bar(years, us_canada, bottom=np.array(latin_america) + np.array(asia_pacific) + np.array(emea), label='U.S./Canada', color='red')[[SEP]][[SEP]]# Labels and title[[SEP]]ax.set_xlabel('Year')[[SEP]]ax.set_ylabel('Revenue in billion U.S. dollars')[[SEP]]ax.set_title('Global box office revenue from 2004 to 2019, by region')[[SEP]]ax.legend()[[SEP]][[SEP]]plt.xticks(years, rotation=45)[[SEP]]plt.tight_layout()[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]regions = ['Flemish Region', 'Brussels-Capital Region', 'Walloon Region'][[SEP]]flemish_region = [2480084, 233851, 25170, 42182, 2781288][[SEP]]brussels_region = [47151, 356350, 21676, 4921, 430099][[SEP]]walloon_region = [49553, 129935, 1093827, 58847, 1332161][[SEP]][[SEP]]# Extracting data for plotting[[SEP]]labels = ['Flemish Region', 'Brussels-Capital Region', 'Walloon Region', 'Abroad', 'Total'][[SEP]]flemish_data = flemish_region[:-1][[SEP]]brussels_data = brussels_region[:-1][[SEP]]walloon_data = walloon_region[:-1][[SEP]]totals = [flemish_region[-1], brussels_region[-1], walloon_region[-1]][[SEP]][[SEP]]x = np.arange(len(labels) - 1)  # the label locations[[SEP]]width = 0.2  # the width of the bars[[SEP]][[SEP]]fig, ax = plt.subplots(figsize=(10, 6))[[SEP]]rects1 = ax.bar(x - width, flemish_data, width, label='Flemish Region')[[SEP]]rects2 = ax.bar(x, brussels_data, width, label='Brussels-Capital Region')[[SEP]]rects3 = ax.bar(x + width, walloon_data, width, label='Walloon Region')[[SEP]][[SEP]]# Add some text for labels, title and custom x-axis tick labels, etc.[[SEP]]ax.set_xlabel('Region of residence')[[SEP]]ax.set_ylabel('Number of commuters')[[SEP]]ax.set_title('Number of commuters in Belgium in 2018, by region')[[SEP]]ax.set_xticks(x)[[SEP]]ax.set_xticklabels(labels[:-1])[[SEP]]ax.legend()[[SEP]][[SEP]]# Adding the total values on top of the bars[[SEP]]def autolabel(rects, total):[[SEP]]    """Attach a text label above each bar in *rects*, displaying its height."""[[SEP]]    for idx, rect in enumerate(rects):[[SEP]]        height = rect.get_height()[[SEP]]        ax.annotate('{}'.format(height),[[SEP]]                    xy=(rect.get_x() + rect.get_width() / 2, height),[[SEP]]                    xytext=(0, 3),  # 3 points vertical offset[[SEP]]                    textcoords="offset points",[[SEP]]                    ha='center', va='bottom')[[SEP]]        if idx == len(rects) - 1:[[SEP]]            ax.annotate('{}'.format(total),[[SEP]]                        xy=(rect.get_x() + rect.get_width() / 2, total),[[SEP]]                        xytext=(0, 3),  # 3 points vertical offset[[SEP]]                        textcoords="offset points",[[SEP]]                        ha='center', va='bottom', color='green')[[SEP]][[SEP]]autolabel(rects1, totals[0])[[SEP]]autolabel(rects2, totals[1])[[SEP]]autolabel(rects3, totals[2])[[SEP]][[SEP]]fig.tight_layout()[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]categories = ['Core Laboratory', 'Molecular', 'Point of Care', 'Rapid Diagnostics'][[SEP]]revenue_2018 = [4386, 484, 553, 2072][[SEP]]revenue_2019 = [4656, 442, 561, 2054][[SEP]][[SEP]]x = np.arange(len(categories))  # the label locations[[SEP]]width = 0.35  # the width of the bars[[SEP]][[SEP]]fig, ax = plt.subplots()[[SEP]]rects1 = ax.bar(x - width/2, revenue_2018, width, label='2018')[[SEP]]rects2 = ax.bar(x + width/2, revenue_2019, width, label='2019')[[SEP]][[SEP]]# Add some text for labels, title and custom x-axis tick labels, etc.[[SEP]]ax.set_xlabel('Category')[[SEP]]ax.set_ylabel('Revenue in million U.S. dollars')[[SEP]]ax.set_title("Abbott Laboratories' Diagnostics segment revenue in 2018 and 2019, by category")[[SEP]]ax.set_xticks(x)[[SEP]]ax.set_xticklabels(categories)[[SEP]]ax.legend()[[SEP]][[SEP]]# Add labels on top of the bars[[SEP]]def autolabel(rects):[[SEP]]    """Attach a text label above each bar in *rects*, displaying its height."""[[SEP]]    for rect in rects:[[SEP]]        height = rect.get_height()[[SEP]]        ax.annotate('{}'.format(height),[[SEP]]                    xy=(rect.get_x() + rect.get_width() / 2, height),[[SEP]]                    xytext=(0, 3),  # 3 points vertical offset[[SEP]]                    textcoords="offset points",[[SEP]]                    ha='center', va='bottom')[[SEP]][[SEP]]autolabel(rects1)[[SEP]]autolabel(rects2)[[SEP]][[SEP]]fig.tight_layout()[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]types_of_plans = ['All Plans', 'Large plans not holding assets in trusts', 'All Plans holding assets in trust'][[SEP]]self_insured = [23500, 17700, 5800][[SEP]]mixed_insured = [3800, 2900, 900][[SEP]][[SEP]]x = np.arange(len(types_of_plans))  # the label locations[[SEP]]width = 0.35  # the width of the bars[[SEP]][[SEP]]fig, ax = plt.subplots()[[SEP]]rects1 = ax.bar(x - width/2, self_insured, width, label='Self-insured plans')[[SEP]]rects2 = ax.bar(x + width/2, mixed_insured, width, label='Mixed-insured plans')[[SEP]][[SEP]]# Add some text for labels, title and custom x-axis tick labels, etc.[[SEP]]ax.set_xlabel('Type of plan')[[SEP]]ax.set_ylabel('Number of plans')[[SEP]]ax.set_title('Number of self-insured health plans in the United States in 2017, by type')[[SEP]]ax.set_xticks(x)[[SEP]]ax.set_xticklabels(types_of_plans)[[SEP]]ax.legend()[[SEP]][[SEP]]# Add labels on top of the bars[[SEP]]def autolabel(rects):[[SEP]]    """Attach a text label above each bar in *rects*, displaying its height."""[[SEP]]    for rect in rects:[[SEP]]        height = rect.get_height()[[SEP]]        ax.annotate('{}'.format(height),[[SEP]]                    xy=(rect.get_x() + rect.get_width() / 2, height),[[SEP]]                    xytext=(0, 3),  # 3 points vertical offset[[SEP]]                    textcoords="offset points",[[SEP]]                    ha='center', va='bottom')[[SEP]][[SEP]]autolabel(rects1)[[SEP]]autolabel(rects2)[[SEP]][[SEP]]fig.tight_layout()[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]categories = [[[SEP]]    "Beauty & healthcare products",[[SEP]]    "Clothing & footwear",[[SEP]]    "Books & media",[[SEP]]    "Home electronics",[[SEP]]    "Consumables",[[SEP]]    "Furniture & home decor",[[SEP]]    "Sports & recreation",[[SEP]]    "Children toys & articles",[[SEP]]    "Car, boat & motorbike accessories"[[SEP]]][[SEP]][[SEP]]q2_2019 = [33, 40, 20, 20, 12, 9, 10, 4, 6][[SEP]]q2_2020 = [43, 42, 23, 22, 19, 13, 13, 5, 7][[SEP]][[SEP]]x = np.arange(len(categories))  # the label locations[[SEP]]width = 0.35  # the width of the bars[[SEP]][[SEP]]fig, ax = plt.subplots(figsize=(10, 6))[[SEP]]rects1 = ax.barh(x - width/2, q2_2019, width, label='Q2 2019')[[SEP]]rects2 = ax.barh(x + width/2, q2_2020, width, label='Q2 2020')[[SEP]][[SEP]]# Add some text for labels, title and custom x-axis tick labels, etc.[[SEP]]ax.set_xlabel('Share of respondents')[[SEP]]ax.set_title('Most purchased product categories online in Sweden in Q2 2019 and Q2 2020')[[SEP]]ax.set_yticks(x)[[SEP]]ax.set_yticklabels(categories)[[SEP]]ax.legend()[[SEP]][[SEP]]# Add a grid[[SEP]]ax.grid(True, linestyle='--', alpha=0.7)[[SEP]][[SEP]]# Add data labels[[SEP]]def add_labels(rects):[[SEP]]    for rect in rects:[[SEP]]        width = rect.get_width()[[SEP]]        ax.annotate('{}'.format(width),[[SEP]]                    xy=(width, rect.get_y() + rect.get_height() / 2),[[SEP]]                    xytext=(3, 0),  # 3 points horizontal offset[[SEP]]                    textcoords="offset points",[[SEP]]                    ha='center', va='center')[[SEP]][[SEP]]add_labels(rects1)[[SEP]]add_labels(rects2)[[SEP]][[SEP]]fig.tight_layout()[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]grades = ['1', '2', '3', '4', '5', '6'][[SEP]]male = [21, 26, 26, 12, 8, 2][[SEP]]female = [26, 29, 25, 12, 6, 2][[SEP]][[SEP]]x = np.arange(len(grades))  # the label locations[[SEP]]width = 0.35  # the width of the bars[[SEP]][[SEP]]fig, ax = plt.subplots()[[SEP]]rects1 = ax.bar(x - width/2, male, width, label='Male')[[SEP]]rects2 = ax.bar(x + width/2, female, width, label='Female')[[SEP]][[SEP]]# Add some text for labels, title and custom x-axis tick labels, etc.[[SEP]]ax.set_xlabel('Grade achieved')[[SEP]]ax.set_ylabel('Share of exams (%)')[[SEP]]ax.set_title('Scottish Standard Grade exam results 2012/2013, by gender')[[SEP]]ax.set_xticks(x)[[SEP]]ax.set_xticklabels(grades)[[SEP]]ax.legend()[[SEP]][[SEP]]# Attach a text label above each bar in *rects*, displaying its height.[[SEP]]def autolabel(rects):[[SEP]]    """Attach a text label above each bar in *rects*, displaying its height."""[[SEP]]    for rect in rects:[[SEP]]        height = rect.get_height()[[SEP]]        ax.annotate('{}'.format(height),[[SEP]]                    xy=(rect.get_x() + rect.get_width() / 2, height),[[SEP]]                    xytext=(0, 3),  # 3 points vertical offset[[SEP]]                    textcoords="offset points",[[SEP]]                    ha='center', va='bottom')[[SEP]][[SEP]]autolabel(rects1)[[SEP]]autolabel(rects2)[[SEP]][[SEP]]fig.tight_layout()[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]pollsters = ['Average', 'Monmouth (2/4 - 2/6)', 'ARG (2/5 - 2/6)', 'UMass Lowell/7News (2/4 - 2/6)', [[SEP]]             'CNN/WMUR (2/3 - 2/6)', 'Boston Herald/FPU (2/2 - 2/6)', 'WBUR/MassINC (2/2 - 2/4)', [[SEP]]             'Boston Globe/Suffolk (2/2 - 2/4)'][[SEP]]bernie_sanders = [53.6, 52, 53, 57, 58, 51, 54, 50][[SEP]]hillary_clinton = [40.4, 42, 42, 40, 35, 44, 39, 41][[SEP]][[SEP]]x = np.arange(len(pollsters))  # the label locations[[SEP]]width = 0.35  # the width of the bars[[SEP]][[SEP]]fig, ax = plt.subplots(figsize=(12, 8))[[SEP]]rects1 = ax.bar(x - width/2, bernie_sanders, width, label='Bernie Sanders', color='royalblue')[[SEP]]rects2 = ax.bar(x + width/2, hillary_clinton, width, label='Hillary Clinton', color='navy')[[SEP]][[SEP]]# Add some text for labels, title and custom x-axis tick labels, etc.[[SEP]]ax.set_xlabel('Pollster')[[SEP]]ax.set_ylabel('Share of respondents')[[SEP]]ax.set_title('2016 U.S. Presidential elections: latest polls for the upcoming Democratic primary in New Hampshire, as of February 6, 2016')[[SEP]]ax.set_xticks(x)[[SEP]]ax.set_xticklabels(pollsters, rotation=45, ha="right")[[SEP]]ax.legend()[[SEP]][[SEP]]# Attach a text label above each bar in *rects*, displaying its height.[[SEP]]def autolabel(rects):[[SEP]]    """Attach a text label above each bar in *rects*, displaying its height."""[[SEP]]    for rect in rects:[[SEP]]        height = rect.get_height()[[SEP]]        ax.annotate('{}'.format(height),[[SEP]]                    xy=(rect.get_x() + rect.get_width() / 2, height),[[SEP]]                    xytext=(0, 3),  # 3 points vertical offset[[SEP]]                    textcoords="offset points",[[SEP]]                    ha='center', va='bottom')[[SEP]][[SEP]]autolabel(rects1)[[SEP]]autolabel(rects2)[[SEP]][[SEP]]fig.tight_layout()[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = list(range(2009, 2019 + 1))[[SEP]]total = [3608, 3627, 3618, 3604, 3590, 3616, 3599, 3598, 3596, 3596, 3597][[SEP]]girls = [3553, 3580, 3553, 3550, 3531, 3554, 3540, 3538, 3555, 3531, 3534][[SEP]]boys = [3661, 3672, 3677, 3654, 3650, 3675, 3655, 3653, 3638, 3655, 3658][[SEP]][[SEP]]# Plotting[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.plot(years, total, marker='o', label='Total', color='blue')[[SEP]]plt.plot(years, girls, marker='o', label='Girls', color='black')[[SEP]]plt.plot(years, boys, marker='o', label='Boys', color='gray')[[SEP]][[SEP]]# Adding labels and title[[SEP]]plt.xlabel('Year')[[SEP]]plt.ylabel('Average weight in metric grams')[[SEP]]plt.title('Average weight of newborn babies in Iceland from 2009 to 2019, by gender')[[SEP]]plt.legend()[[SEP]][[SEP]]# Display the plot[[SEP]]plt.grid(True)[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]locations = ['Leipzig 1870-1871', 'Berlin Jan 01, 1871 - Jul 31, 1872', 'Netherlands 1870-1873', 'Scotland* 1865-1874', 'Hesse* 1870-1872'][[SEP]]age_groups = ['Below 1 year', '1-5', '5-10', '10-20', '20-30', '30-60', 'Above 60 years'][[SEP]]data = [[[SEP]]    [30.4, 42.2, 4.2, 1.8, 2.6, 16.4, 2.1],[[SEP]]    [20.4, 23.4, 4.8, 3.4, 11.8, 31.9, 4.3],[[SEP]]    [16.2, 32.3, 11, 9.2, 9.5, 19.8, 2],[[SEP]]    [17.1, 9.4, 9.5, 19, 22.3, 21, 1.8],[[SEP]]    [15.4, 3, 1, 2.4, 12.4, 52.9, 12.8][[SEP]]][[SEP]][[SEP]]# Plotting[[SEP]]x = np.arange(len(locations))[[SEP]]width = 0.1[[SEP]][[SEP]]fig, ax = plt.subplots(figsize=(12, 8))[[SEP]][[SEP]]for i, age_group in enumerate(age_groups):[[SEP]]    ax.bar(x + i*width, [data[j][i] for j in range(len(locations))], width, label=age_group)[[SEP]][[SEP]]# Labels and title[[SEP]]ax.set_xlabel('Parts of Europe')[[SEP]]ax.set_ylabel('Share of total deaths due to smallpox')[[SEP]]ax.set_title('Share of total deaths due to smallpox in select age groups in various parts of Europe during the Great Pandemic of 1870 to 1875')[[SEP]]ax.set_xticks(x + width * 3)[[SEP]]ax.set_xticklabels(locations)[[SEP]]ax.legend(title='Age Groups')[[SEP]][[SEP]]plt.xticks(rotation=45)[[SEP]]plt.tight_layout()[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = [2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020][[SEP]]agriculture = [6.6, 6.37, 6.13, 5.98, 5.58, 5.11, 4.82, 4.78, 5, 4.88, 4.77][[SEP]]industry = [25.02, 24.85, 24.58, 24.52, 24.77, 25.2, 24.99, 25.07, 25.2, 25.13, 25.01][[SEP]]services = [68.38, 68.78, 69.29, 69.5, 69.65, 69.69, 70.19, 70.14, 69.8, 69.99, 70.23][[SEP]][[SEP]]# Plot[[SEP]]fig, ax = plt.subplots()[[SEP]][[SEP]]ax.stackplot(years, agriculture, industry, services, labels=['Agriculture', 'Industry', 'Services'], colors=['#1f77b4', '#ff7f0e', '#2ca02c'])[[SEP]][[SEP]]# Labels and title[[SEP]]ax.set_title('South Korea: Distribution of Employment by Economic Sector (2010-2020)')[[SEP]]ax.set_xlabel('Year')[[SEP]]ax.set_ylabel('Percentage of Employment')[[SEP]]ax.legend(loc='upper left')[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]labels = ['Obama vs Romney', 'Obama vs Gingrich', 'Obama vs Paul', 'Obama vs Santorum'][[SEP]]obama = [47, 54, 50, 51][[SEP]]republican = [48, 40, 43, 44][[SEP]][[SEP]]x = np.arange(len(labels))  # the label locations[[SEP]]width = 0.35  # the width of the bars[[SEP]][[SEP]]fig, ax = plt.subplots()[[SEP]]rects1 = ax.bar(x - width/2, obama, width, label='Barack Obama', color='blue')[[SEP]]rects2 = ax.bar(x + width/2, republican, width, label='Republican candidate', color='red')[[SEP]][[SEP]]# Add some text for labels, title and custom x-axis tick labels, etc.[[SEP]]ax.set_xlabel('Response')[[SEP]]ax.set_ylabel('Share of respondents')[[SEP]]ax.set_title('Forecast for possible GOP candidates vs. Obama in swing states in the 2012 election on January 2012')[[SEP]]ax.set_xticks(x)[[SEP]]ax.set_xticklabels(labels)[[SEP]]ax.legend()[[SEP]][[SEP]]# Attach a text label above each bar in *rects*, displaying its height.[[SEP]]def autolabel(rects):[[SEP]]    """Attach a text label above each bar in *rects*, displaying its height."""[[SEP]]    for rect in rects:[[SEP]]        height = rect.get_height()[[SEP]]        ax.annotate('{}'.format(height),[[SEP]]                    xy=(rect.get_x() + rect.get_width() / 2, height),[[SEP]]                    xytext=(0, 3),  # 3 points vertical offset[[SEP]]                    textcoords="offset points",[[SEP]]                    ha='center', va='bottom')[[SEP]][[SEP]]autolabel(rects1)[[SEP]]autolabel(rects2)[[SEP]][[SEP]]fig.tight_layout()[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]years = np.array([2013, 2014, 2015, 2016, 2017, 2018, 2019])[[SEP]]pharmacists = np.array([47407, 48815, 50292, 51906, 53967, 55258, 56288])[[SEP]]pharmacy_technicians = np.array([21824, 22406, 22693, 23074, 23318, 23367, 23387])[[SEP]][[SEP]]# Plotting[[SEP]]fig, ax = plt.subplots()[[SEP]]width = 0.35  # the width of the bars[[SEP]]x = np.arange(len(years))[[SEP]][[SEP]]rects1 = ax.bar(x - width/2, pharmacists, width, label='Pharmacists')[[SEP]]rects2 = ax.bar(x + width/2, pharmacy_technicians, width, label='Pharmacy technicians')[[SEP]][[SEP]]# Add some text for labels, title and custom x-axis tick labels, etc.[[SEP]]ax.set_xlabel('Year')[[SEP]]ax.set_ylabel('Number of pharmacy staff')[[SEP]]ax.set_title('Number of pharmacists and pharmacy technicians in Great Britain from 2013 to 2019')[[SEP]]ax.set_xticks(x)[[SEP]]ax.set_xticklabels(years)[[SEP]]ax.legend()[[SEP]][[SEP]]# Attach a text label above each bar in *rects*, displaying its height.[[SEP]]def autolabel(rects):[[SEP]]    """Attach a text label above each bar in *rects*, displaying its height."""[[SEP]]    for rect in rects:[[SEP]]        height = rect.get_height()[[SEP]]        ax.annotate('{}'.format(height),[[SEP]]                    xy=(rect.get_x() + rect.get_width() / 2, height),[[SEP]]                    xytext=(0, 3),  # 3 points vertical offset[[SEP]]                    textcoords="offset points",[[SEP]]                    ha='center', va='bottom')[[SEP]][[SEP]]autolabel(rects1)[[SEP]]autolabel(rects2)[[SEP]][[SEP]]fig.tight_layout()[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]years = np.arange(2009, 2020)[[SEP]]agriculture = [5.27, 7.13, 7, 5.78, 6.05, 6.71, 5.16, 6.26, 5.48, 6.1, 7.2][[SEP]]industry = [25.28, 25.26, 25.21, 24.43, 24.01, 24.28, 23.15, 22.05, 21.87, 22.97, 23.13][[SEP]]services = [53.31, 51.5, 51.81, 53.66, 53.92, 52.94, 55.81, 56.12, 56.97, 55.48, 53.63][[SEP]][[SEP]]# Plot[[SEP]]fig, ax = plt.subplots(figsize=(10, 6))[[SEP]][[SEP]]ax.bar(years, agriculture, label='Agriculture', color='navy')[[SEP]]ax.bar(years, industry, bottom=agriculture, label='Industry', color='darkblue')[[SEP]]ax.bar(years, services, bottom=np.array(agriculture) + np.array(industry), label='Services', color='lightgrey')[[SEP]][[SEP]]# Labels and title[[SEP]]ax.set_xlabel('Year')[[SEP]]ax.set_ylabel('Share in GDP (%)')[[SEP]]ax.set_title('Argentina: Share of Economic Sectors in GDP (2009-2019)')[[SEP]]ax.legend()[[SEP]][[SEP]]# Show plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = list(range(2009, 2020))[[SEP]]age_0_14 = [45.71, 45.73, 45.74, 45.73, 45.68, 45.58, 45.42, 45.21, 44.96, 44.67, 44.37][[SEP]]age_15_64 = [51.23, 51.25, 51.25, 51.28, 51.35, 51.49, 51.68, 51.88, 52.14, 52.44, 52.75][[SEP]]age_65_plus = [3.06, 3.01, 3.00, 2.99, 2.96, 2.93, 2.90, 2.90, 2.90, 2.89, 2.88][[SEP]][[SEP]]# Plot[[SEP]]fig, ax = plt.subplots()[[SEP]][[SEP]]ax.bar(years, age_0_14, label='0-14 years', color='skyblue')[[SEP]]ax.bar(years, age_15_64, bottom=age_0_14, label='15-64 years', color='navy')[[SEP]]ax.bar(years, age_65_plus, bottom=[i+j for i,j in zip(age_0_14, age_15_64)], label='65 years and older', color='gray')[[SEP]][[SEP]]# Labels and title[[SEP]]ax.set_xlabel('Year')[[SEP]]ax.set_ylabel('Percentage')[[SEP]]ax.set_title('Mozambique: Age structure from 2009 to 2019')[[SEP]]ax.legend()[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]activities = [[[SEP]]    "Direct patient care without a teaching component",[[SEP]]    "Direct patient care with a teaching component",[[SEP]]    "Teaching/educating without direct patient care",[[SEP]]    "Indirect patient care",[[SEP]]    "Health facility committees",[[SEP]]    "Administration",[[SEP]]    "Research",[[SEP]]    "Managing practice",[[SEP]]    "CME/CPD",[[SEP]]    "Other activities",[[SEP]]    "Total hours"[[SEP]]][[SEP]][[SEP]]fp_gp = [27.62, 3.98, 0.85, 8.25, 0.63, 2.02, 0.37, 1.4, 2.36, 0.39, 47.87][[SEP]]other_specialist = [23.15, 8.69, 1.91, 6.14, 1.31, 3.29, 2.3, 1.49, 2.42, 0.72, 51.42][[SEP]][[SEP]]# Plotting[[SEP]]x = np.arange(len(activities))[[SEP]]width = 0.35[[SEP]][[SEP]]fig, ax = plt.subplots(figsize=(10, 8))[[SEP]]bars1 = ax.barh(x - width/2, fp_gp, width, label='FP/GP')[[SEP]]bars2 = ax.barh(x + width/2, other_specialist, width, label='Other specialist')[[SEP]][[SEP]]# Labels, title and legend[[SEP]]ax.set_xlabel('Average weekly work hours')[[SEP]]ax.set_title('Average weekly work hours of family/general practitioners (FP/GP) vs. other specialists in Canada as of 2019, by activity')[[SEP]]ax.set_yticks(x)[[SEP]]ax.set_yticklabels(activities)[[SEP]]ax.legend()[[SEP]][[SEP]]# Display the plot[[SEP]]plt.tight_layout()[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]categories = ["Yes, I have", "Yes, someone I know has", "No, neither I nor anyone I know has met a partner through a dating website/app", "Don't know", "Prefer not to say"][[SEP]]age_groups = ["18 to 34 years", "35 to 54 years", "55+ years"][[SEP]]data = [[[SEP]]    [20, 19, 12],[[SEP]]    [29, 31, 30],[[SEP]]    [36, 33, 48],[[SEP]]    [12, 17, 11],[[SEP]]    [6, 5, 1][[SEP]]][[SEP]][[SEP]]# Convert data to numpy array for easier manipulation[[SEP]]data = np.array(data)[[SEP]][[SEP]]# Plotting[[SEP]]fig, ax = plt.subplots(figsize=(10, 6))[[SEP]][[SEP]]# Define bar width[[SEP]]bar_width = 0.25[[SEP]][[SEP]]# Set positions of bars on X axis[[SEP]]r1 = np.arange(len(categories))[[SEP]]r2 = [x + bar_width for x in r1][[SEP]]r3 = [x + bar_width for x in r2][[SEP]][[SEP]]# Make the plot[[SEP]]ax.bar(r1, data[:, 0], color='blue', width=bar_width, edgecolor='grey', label=age_groups[0])[[SEP]]ax.bar(r2, data[:, 1], color='black', width=bar_width, edgecolor='grey', label=age_groups[1])[[SEP]]ax.bar(r3, data[:, 2], color='grey', width=bar_width, edgecolor='grey', label=age_groups[2])[[SEP]][[SEP]]# Add xticks on the middle of the group bars[[SEP]]ax.set_xlabel('Response', fontweight='bold')[[SEP]]ax.set_ylabel('Share of respondents', fontweight='bold')[[SEP]]ax.set_xticks([r + bar_width for r in range(len(categories))])[[SEP]]ax.set_xticklabels(categories, rotation=45, ha="right")[[SEP]][[SEP]]# Create legend & Show graphic[[SEP]]ax.legend(age_groups, loc='upper right')[[SEP]]plt.title('Percentage of online users in the United States who have or know someone who has met a romantic partner on a dating website or app as of January 2019, by age group')[[SEP]]plt.tight_layout()[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]ages = ['Younger than 65 years', '65-84 years', 'Older than 85 years'][[SEP]]beneficiaries = [47438, 32797, 8974][[SEP]]services = [144498, 96843, 33858][[SEP]][[SEP]]x = np.arange(len(ages))  # the label locations[[SEP]]width = 0.35  # the width of the bars[[SEP]][[SEP]]fig, ax = plt.subplots()[[SEP]]rects1 = ax.bar(x - width/2, beneficiaries, width, label='Beneficiaries')[[SEP]]rects2 = ax.bar(x + width/2, services, width, label='Services')[[SEP]][[SEP]]# Add some text for labels, title and custom x-axis tick labels, etc.[[SEP]]ax.set_xlabel('Age')[[SEP]]ax.set_ylabel('Number of Beneficiaries/Services')[[SEP]]ax.set_title('Number of Medicare telehealth users and received services in 2016, by age')[[SEP]]ax.set_xticks(x)[[SEP]]ax.set_xticklabels(ages)[[SEP]]ax.legend()[[SEP]][[SEP]]# Function to add labels on top of the bars[[SEP]]def autolabel(rects):[[SEP]]    for rect in rects:[[SEP]]        height = rect.get_height()[[SEP]]        ax.annotate('{}'.format(height),[[SEP]]                    xy=(rect.get_x() + rect.get_width() / 2, height),[[SEP]]                    xytext=(0, 3),  # 3 points vertical offset[[SEP]]                    textcoords="offset points",[[SEP]]                    ha='center', va='bottom')[[SEP]][[SEP]]autolabel(rects1)[[SEP]]autolabel(rects2)[[SEP]][[SEP]]fig.tight_layout()[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]categories = [[[SEP]]    "The application and due diligence process",[[SEP]]    "Developing the crowdfunding pitch",[[SEP]]    "Developing marketing or social media strategy",[[SEP]]    "Communicating with prospective investors",[[SEP]]    "Deciding how much equity to offer",[[SEP]]    "Managing investor relations",[[SEP]]    "Finding the right crowdfunding platform",[[SEP]]    "Working with crowdfunding platform"[[SEP]]][[SEP]][[SEP]]very_easy = np.array([4, 9, 9, 13, 17, 23, 30, 45])[[SEP]]easy = np.array([43, 23, 22, 57, 30, 50, 43, 32])[[SEP]]neither_easy_nor_difficult = np.array([30, 41, 39, 9, 22, 9, 17, 9])[[SEP]]difficult = np.array([17, 23, 22, 9, 26, 14, 4, 5])[[SEP]]very_difficult = np.array([4, 5, 9, 13, 4, 5, 4, 9])[[SEP]][[SEP]]# Plotting[[SEP]]barWidth = 0.85[[SEP]]r = np.arange(len(categories))[[SEP]][[SEP]]plt.figure(figsize=(10, 6))[[SEP]][[SEP]]plt.barh(r, very_easy, color='#1f77b4', edgecolor='white', height=barWidth, label='Very easy')[[SEP]]plt.barh(r, easy, left=very_easy, color='#aec7e8', edgecolor='white', height=barWidth, label='Easy')[[SEP]]plt.barh(r, neither_easy_nor_difficult, left=very_easy + easy, color='#c7c7c7', edgecolor='white', height=barWidth, label='Neither easy nor difficult')[[SEP]]plt.barh(r, difficult, left=very_easy + easy + neither_easy_nor_difficult, color='#ff7f0e', edgecolor='white', height=barWidth, label='Difficult')[[SEP]]plt.barh(r, very_difficult, left=very_easy + easy + neither_easy_nor_difficult + difficult, color='#d62728', edgecolor='white', height=barWidth, label='Very difficult')[[SEP]][[SEP]]# Labels and title[[SEP]]plt.xlabel('Share of respondents')[[SEP]]plt.title('Challenges in raising funds through equity-based crowdfunding in the United Kingdom (UK) in 2014')[[SEP]]plt.yticks(r, categories)[[SEP]]plt.legend(loc='upper right', bbox_to_anchor=(1.15, 1))[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]months = ['December 2013', 'December 2014', 'December 2015', 'December 2016'][[SEP]]construction = [558, 596, 627, 628][[SEP]]management = [283, 284, 273, 377][[SEP]]transacting = [56, 56, 66, 72][[SEP]]investment = [17, 19, 18, 17][[SEP]][[SEP]]# Plotting[[SEP]]fig, ax = plt.subplots()[[SEP]][[SEP]]bar_width = 0.35[[SEP]]index = np.arange(len(months))[[SEP]][[SEP]]p1 = plt.bar(index, construction, bar_width, label='Construction, development and repair of buildings', color='blue')[[SEP]]p2 = plt.bar(index, management, bar_width, bottom=construction, label='Management and care of buildings', color='darkblue')[[SEP]]p3 = plt.bar(index, transacting, bar_width, bottom=np.array(construction) + np.array(management), label='Transacting, financial and professional services', color='grey')[[SEP]]p4 = plt.bar(index, investment, bar_width, bottom=np.array(construction) + np.array(management) + np.array(transacting), label='Property investment', color='brown')[[SEP]][[SEP]]plt.xlabel('Month')[[SEP]]plt.ylabel('Number of employees in thousands')[[SEP]]plt.title('Employment in the commercial property industry in the United Kingdom (UK) from 2013 to 2016, by business activity')[[SEP]]plt.xticks(index, months)[[SEP]]plt.legend()[[SEP]][[SEP]]plt.tight_layout()[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]states = [[[SEP]]    "Bavaria", "Lower Saxony", "Baden-Württemberg", "North Rhine-Westphalia",[[SEP]]    "Rhineland-Palatinate", "Schleswig-Holstein", "Hesse", "Mecklenburg-Western Pomerania",[[SEP]]    "Brandenburg", "Saxony", "Thuringia", "Saxony-Anhalt", "Saarland", "Berlin", "Hamburg", "Bremen"[[SEP]]][[SEP]]camping_sites_2018 = [440, 395, 369, 311, 273, 273, 238, 207, 167, 102, 80, 75, 28, 11, 7, 3][[SEP]]camping_sites_2019 = [447, 393, 371, 318, 276, 275, 233, 212, 172, 102, 80, 80, 31, 11, 7, 3][[SEP]][[SEP]]x = np.arange(len(states))  # the label locations[[SEP]]width = 0.35  # the width of the bars[[SEP]][[SEP]]fig, ax = plt.subplots(figsize=(10, 8))[[SEP]]rects1 = ax.barh(x - width/2, camping_sites_2018, width, label='2018')[[SEP]]rects2 = ax.barh(x + width/2, camping_sites_2019, width, label='2019')[[SEP]][[SEP]]# Add some text for labels, title and custom x-axis tick labels, etc.[[SEP]]ax.set_xlabel('Number of camping sites')[[SEP]]ax.set_title('Number of camping sites in Germany in 2018 and 2019, by state')[[SEP]]ax.set_yticks(x)[[SEP]]ax.set_yticklabels(states)[[SEP]]ax.legend()[[SEP]][[SEP]]# Add a grid[[SEP]]ax.grid(True, linestyle='--', alpha=0.7)[[SEP]][[SEP]]# Add data labels[[SEP]]def add_labels(rects):[[SEP]]    for rect in rects:[[SEP]]        width = rect.get_width()[[SEP]]        ax.annotate('{}'.format(width),[[SEP]]                    xy=(width, rect.get_y() + rect.get_height() / 2),[[SEP]]                    xytext=(3, 0),  # 3 points horizontal offset[[SEP]]                    textcoords="offset points",[[SEP]]                    ha='center', va='center')[[SEP]][[SEP]]add_labels(rects1)[[SEP]]add_labels(rects2)[[SEP]][[SEP]]fig.tight_layout()[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]categories = ['White/Caucasian', 'Black or African American', 'Hispanic American or Latino', 'Asian', 'Would rather not say', 'Other'][[SEP]]yes_values = [70, 75, 72, 65, 47, 92][[SEP]]no_values = [30, 25, 28, 35, 53, 8][[SEP]][[SEP]]bar_width = 0.35[[SEP]]index = np.arange(len(categories))[[SEP]][[SEP]]# Plotting[[SEP]]fig, ax = plt.subplots()[[SEP]]bar1 = ax.bar(index, yes_values, bar_width, label='Yes', color=['blue', 'navy', 'grey', 'red', 'green', 'orange'])[[SEP]]bar2 = ax.bar(index + bar_width, no_values, bar_width, label='No', color=['blue', 'navy', 'grey', 'red', 'green', 'orange'])[[SEP]][[SEP]]# Labels and Titles[[SEP]]ax.set_xlabel('Response')[[SEP]]ax.set_ylabel('Percentage of respondents')[[SEP]]ax.set_title('Percentage of U.S. adults believing in positive effects of complementary and alternative medicine (CAM) as of 2017, by ethnicity')[[SEP]]ax.set_xticks(index + bar_width / 2)[[SEP]]ax.set_xticklabels(categories, rotation=45, ha="right")[[SEP]]ax.legend()[[SEP]][[SEP]]# Display the plot[[SEP]]plt.tight_layout()[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]agencies = ['SHCP (Sep 10)', 'Banorte (Aug 1)', 'BBVA (Aug 7)', 'World Bank (Oct 10)', 'OECD (Sep19)', 'IMF (Oct 11)', 'Banxico (Oct 1)', "Moody's (Oct 14)", 'Citi Banamex (Jul 24)'][[SEP]]previous_forecast = [1.6, 1.5, 0.7, 1.7, 1.6, 0.9, 0.5, 0.5, 0.9][[SEP]]latest_forecast = [0.9, 0.8, 0.7, 0.6, 0.5, 0.4, 0.4, 0.2, 0.2][[SEP]][[SEP]]# Bar width[[SEP]]bar_width = 0.35[[SEP]][[SEP]]# Positions of the bars on the x-axis[[SEP]]r1 = np.arange(len(agencies))[[SEP]]r2 = [x + bar_width for x in r1][[SEP]][[SEP]]# Create the plot[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.barh(r1, previous_forecast, color='navy', height=bar_width, edgecolor='grey', label='Previous forecast')[[SEP]]plt.barh(r2, latest_forecast, color='royalblue', height=bar_width, edgecolor='grey', label='Latest forecast')[[SEP]][[SEP]]# Add labels[[SEP]]plt.xlabel('GDP growth rate')[[SEP]]plt.ylabel('Agency (latest forecast date)')[[SEP]]plt.title('Real gross domestic product (GDP) growth rate in Mexico in 2019, by source')[[SEP]]plt.yticks([r + bar_width/2 for r in range(len(agencies))], agencies)[[SEP]][[SEP]]# Add legend[[SEP]]plt.legend()[[SEP]][[SEP]]# Show the plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]months = ['Oct \'19', 'Nov \'19', 'Dec \'19', 'Jan \'20', 'Feb \'20', 'Mar \'20', 'Apr \'20'][[SEP]]trello = [286.79, 327.03, 237.47, 318.31, 297.44, 329.37, 220.43][[SEP]]skype = [182.25, 171.81, 307.38, 275.09, 257.68, 368.64, 283.75][[SEP]]slack = [62.3, 53.01, 39.21, 54.55, 84.1, 71.52, 90.11][[SEP]]zoom = [70.9, 83.95, 65.59, 57.55, 82.95, 239.96, 262.57][[SEP]][[SEP]]# Plotting[[SEP]]fig, ax = plt.subplots(figsize=(10, 6))[[SEP]][[SEP]]bar_width = 0.6[[SEP]]index = np.arange(len(months))[[SEP]][[SEP]]p1 = plt.bar(index, trello, bar_width, label='trello.com', color='blue')[[SEP]]p2 = plt.bar(index, skype, bar_width, bottom=trello, label='skype.com', color='navy')[[SEP]]p3 = plt.bar(index, slack, bar_width, bottom=np.array(trello) + np.array(skype), label='slack.com', color='gray')[[SEP]]p4 = plt.bar(index, zoom, bar_width, bottom=np.array(trello) + np.array(skype) + np.array(slack), label='zoom.us', color='red')[[SEP]][[SEP]]plt.xlabel('Month')[[SEP]]plt.ylabel('Traffic in thousands')[[SEP]]plt.title('Monthly traffic on remote working platforms during coronavirus (COVID-19) outbreak in Hungary')[[SEP]]plt.xticks(index, months)[[SEP]]plt.legend()[[SEP]][[SEP]]plt.tight_layout()[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = [2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020][[SEP]]agriculture = [2.1, 1.99, 2.06, 2.03, 1.97, 2.04, 1.89, 1.83, 1.7, 1.65, 1.6][[SEP]]industry = [19.88, 19.93, 19.61, 19.16, 18.6, 18.29, 18.2, 18.16, 18.15, 17.91, 17.71][[SEP]]services = [78.02, 78.08, 78.33, 78.81, 79.42, 79.68, 79.92, 80.01, 80.15, 80.44, 80.69][[SEP]][[SEP]]# Plot[[SEP]]fig, ax = plt.subplots()[[SEP]][[SEP]]ax.stackplot(years, agriculture, industry, services, labels=['Agriculture', 'Industry', 'Services'], colors=['#1f77b4', '#ff7f0e', '#2ca02c'])[[SEP]][[SEP]]# Labels and title[[SEP]]ax.set_xlabel('Year')[[SEP]]ax.set_ylabel('Percentage')[[SEP]]ax.set_title('Sweden: Distribution of Employment by Economic Sector (2010-2020)')[[SEP]]ax.legend(loc='upper left')[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]categories = ['All adults', 'Men', 'Women'][[SEP]]a_good_amount = [10, 13, 7][[SEP]]a_great_deal = [10, 11, 8][[SEP]]a_little = [30, 34, 27][[SEP]]not_at_all = [50, 42, 59][[SEP]][[SEP]]bar_width = 0.2[[SEP]]index = np.arange(len(categories))[[SEP]][[SEP]]# Plotting[[SEP]]fig, ax = plt.subplots()[[SEP]][[SEP]]bar1 = ax.bar(index, a_good_amount, bar_width, label='A good amount', color='blue')[[SEP]]bar2 = ax.bar(index + bar_width, a_great_deal, bar_width, label='A great deal', color='navy')[[SEP]]bar3 = ax.bar(index + 2 * bar_width, a_little, bar_width, label='A little', color='gray')[[SEP]]bar4 = ax.bar(index + 3 * bar_width, not_at_all, bar_width, label='Not at all', color='brown')[[SEP]][[SEP]]# Labels and title[[SEP]]ax.set_xlabel('Categories')[[SEP]]ax.set_ylabel('Percentage of respondents')[[SEP]]ax.set_title('Do you watch or follow professional baseball a great deal, a good amount, a little, or not at all?')[[SEP]]ax.set_xticks(index + 1.5 * bar_width)[[SEP]]ax.set_xticklabels(categories)[[SEP]]ax.legend()[[SEP]][[SEP]]# Display the plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]categories = ['Foreign born', 'Native born', 'Total U.S. Asians'][[SEP]]country_of_origin = [69, 43, 62][[SEP]]asian_american = [18, 22, 19][[SEP]]american = [9, 28, 14][[SEP]][[SEP]]# Bar width[[SEP]]bar_width = 0.5[[SEP]][[SEP]]# Positions of the bars on the x-axis[[SEP]]r1 = np.arange(len(categories))[[SEP]][[SEP]]# Create the plot[[SEP]]fig, ax = plt.subplots()[[SEP]][[SEP]]# Create bars[[SEP]]bar1 = ax.bar(r1, country_of_origin, color='blue', edgecolor='grey', width=bar_width, label='Country of origin/COO American')[[SEP]]bar2 = ax.bar(r1, asian_american, bottom=country_of_origin, color='darkblue', edgecolor='grey', width=bar_width, label='Asian/Asian American')[[SEP]]bar3 = ax.bar(r1, american, bottom=np.array(country_of_origin) + np.array(asian_american), color='grey', edgecolor='grey', width=bar_width, label='American')[[SEP]][[SEP]]# Add labels[[SEP]]ax.set_xlabel('Description', fontweight='bold')[[SEP]]ax.set_ylabel('Share of respondents', fontweight='bold')[[SEP]]ax.set_title('Which of the following terms do you use to describe yourself most often? (Question for Americans with Asian heritage)', fontweight='bold')[[SEP]]ax.set_xticks(r1)[[SEP]]ax.set_xticklabels(categories)[[SEP]][[SEP]]# Add percentages on top of the bars[[SEP]]for bar in bar1 + bar2 + bar3:[[SEP]]    height = bar.get_height()[[SEP]]    ax.annotate(f'{height}%',[[SEP]]                xy=(bar.get_x() + bar.get_width() / 2, bar.get_y() + height / 2),[[SEP]]                xytext=(0, 0),  # 0 points vertical offset[[SEP]]                textcoords="offset points",[[SEP]]                ha='center', va='center', color='white', fontweight='bold')[[SEP]][[SEP]]# Create legend[[SEP]]ax.legend()[[SEP]][[SEP]]# Show the plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]states = [[[SEP]]    "Total", "Uttar Pradesh", "Maharashtra", "Andhra Pradesh", "Madhya Pradesh", "West Bengal", [[SEP]]    "Tamil Nadu", "Karnataka", "Uttarakhand", "Bihar", "Odisha", "Kerala", "Gujarat", "Rajasthan", [[SEP]]    "Punjab", "Chhattisgarh", "Jharkhand", "Himachal Pradesh", "Delhi", "Jammu & Kashmir", [[SEP]]    "Haryana", "Telangana", "Arunachal Pradesh", "Assam", "Meghalaya", "Nagaland", "Mizoram", [[SEP]]    "Manipur", "Chandigarh", "Goa", "Puducherry", "Andaman & Nicobar islands", "Tripura", [[SEP]]    "Leh-Ladakh", "Sikkim", "Lakshadweep", "Dadra & Nagar Haveli", "Mobile testing labs"[[SEP]]][[SEP]]government_labs = [[[SEP]]    1196, 124, 94, 78, 77, 74, 67, 60, 53, 48, 43, 42, 42, 39, 37, 36, 33, 30, 28, 25, 23, 21, 21, [[SEP]]    16, 15, 14, 11, 7, 7, 7, 6, 5, 4, 4, 2, 2, 1, 0[[SEP]]][[SEP]]private_labs = [[[SEP]]    1071, 99, 113, 43, 25, 47, 168, 115, 6, 15, 13, 93, 46, 26, 19, 11, 10, 2, 59, 3, 28, 68, 2, [[SEP]]    31, 4, 0, 0, 7, 1, 2, 8, 0, 0, 0, 1, 0, 0, 5[[SEP]]][[SEP]][[SEP]]# Plotting[[SEP]]fig, ax = plt.subplots(figsize=(10, 15))[[SEP]]y = np.arange(len(states))[[SEP]][[SEP]]ax.barh(y, government_labs, color='blue', label='Government Laboratories')[[SEP]]ax.barh(y, private_labs, left=government_labs, color='black', label='Private Laboratories')[[SEP]][[SEP]]ax.set_yticks(y)[[SEP]]ax.set_yticklabels(states)[[SEP]]ax.invert_yaxis()  # Invert y axis to have the largest bar on top[[SEP]]ax.set_xlabel('Number of testing centers')[[SEP]]ax.set_title('Number of government and private testing centers for the coronavirus (COVID-19) across India as of December 20, 2020, by state')[[SEP]]ax.legend()[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = [2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015][[SEP]]men = [35, 34, 33, 32, 32, 31, 30, 31][[SEP]]women = [37, 37, 36, 34, 34, 34, 34, 33][[SEP]][[SEP]]# Plotting[[SEP]]fig, ax = plt.subplots()[[SEP]]ax.bar([year - 0.2 for year in years], men, width=0.4, label='Men', align='center')[[SEP]]ax.bar([year + 0.2 for year in years], women, width=0.4, label='Women', align='center')[[SEP]][[SEP]]# Labels and title[[SEP]]ax.set_xlabel('Year')[[SEP]]ax.set_ylabel('Share of respondents (%)')[[SEP]]ax.set_title('Adults meeting guidelines on the consumption of fruit and vegetables in Wales from 2008 to 2015, by gender')[[SEP]]ax.set_xticks(years)[[SEP]]ax.legend()[[SEP]][[SEP]]# Show plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]years = np.arange(2004, 2020)[[SEP]]spanish_language = [41, 34, 31, 34, 33, 33, 29, 30, 34, 28, 37, 39, 40, 40, 42, 41][[SEP]]international = [9, 16, 19, 16, 17, 17, 21, 20, 16, 22, 13, 11, 10, 10, 8, 9][[SEP]][[SEP]]# Plotting[[SEP]]fig, ax = plt.subplots(figsize=(10, 6))[[SEP]][[SEP]]bar_width = 0.5[[SEP]]bar1 = ax.bar(years, spanish_language, bar_width, label='Spanish-language*', color='royalblue')[[SEP]]bar2 = ax.bar(years, international, bar_width, bottom=spanish_language, label='International', color='darkblue')[[SEP]][[SEP]]# Adding labels[[SEP]]ax.set_xlabel('Year')[[SEP]]ax.set_ylabel('Number of albums')[[SEP]]ax.set_title('Distribution of the 50 most sold Spanish and international albums in Spain between 2004 and 2019')[[SEP]]ax.set_xticks(years)[[SEP]]ax.legend()[[SEP]][[SEP]]# Adding data labels[[SEP]]for bar in bar1:[[SEP]]    height = bar.get_height()[[SEP]]    ax.annotate('{}'.format(height),[[SEP]]                xy=(bar.get_x() + bar.get_width() / 2, height / 2),[[SEP]]                xytext=(0, 3),  # 3 points vertical offset[[SEP]]                textcoords="offset points",[[SEP]]                ha='center', va='bottom', color='white', fontsize=10, fontweight='bold')[[SEP]][[SEP]]for bar in bar2:[[SEP]]    height = bar.get_height()[[SEP]]    ax.annotate('{}'.format(height),[[SEP]]                xy=(bar.get_x() + bar.get_width() / 2, bar.get_y() + height / 2),[[SEP]]                xytext=(0, 3),  # 3 points vertical offset[[SEP]]                textcoords="offset points",[[SEP]]                ha='center', va='bottom', color='white', fontsize=10, fontweight='bold')[[SEP]][[SEP]]plt.tight_layout()[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]categories = [[[SEP]]    "I developed a health condition like diabetes or high blood pressure",[[SEP]]    "I wanted to live longer",[[SEP]]    "I wanted to improve my appearance or the way my clothes fit",[[SEP]]    "People made comments about my weight",[[SEP]]    "I was discriminated against because of my weight",[[SEP]]    "My weight prevented me from doing the things I wanted to do",[[SEP]]    "I wanted to improve my overall health",[[SEP]]    "I wanted to be more physically active"[[SEP]]][[SEP]][[SEP]]obese = [31, 61, 66, 14, 7, 33, 77, 62][[SEP]]not_obese = [11, 45, 59, 7, 4, 9, 64, 51][[SEP]][[SEP]]# Plotting[[SEP]]fig, ax = plt.subplots(figsize=(10, 7))[[SEP]]y = np.arange(len(categories))[[SEP]][[SEP]]ax.barh(y - 0.2, obese, height=0.4, label='Obese', color='navy')[[SEP]]ax.barh(y + 0.2, not_obese, height=0.4, label='Not obese', color='skyblue')[[SEP]][[SEP]]# Labels and Titles[[SEP]]ax.set_yticks(y)[[SEP]]ax.set_yticklabels(categories)[[SEP]]ax.set_xlabel('Percentage of respondents')[[SEP]]ax.set_title('Percentage of adults in the U.S. who wanted to lose weight for select reasons as of 2016, by obesity status')[[SEP]]ax.legend()[[SEP]][[SEP]]plt.tight_layout()[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]years = np.arange(2005, 2020)[[SEP]]voluntary_participants = [99706, 68534, 62665, 72278, 65423, 40520, 47731, 50751, 71931, 88769, 101668, 155163, 98857, 74159, 73407][[SEP]]obligated_participants = [31022, 49420, 51700, 48997, 50629, 48109, 49126, 43269, 45423, 53670, 77730, 184415, 193054, 128774, 103038][[SEP]][[SEP]]# Plot[[SEP]]fig, ax = plt.subplots(figsize=(10, 6))[[SEP]][[SEP]]bar_width = 0.35[[SEP]]index = np.arange(len(years))[[SEP]][[SEP]]bar1 = plt.bar(index, voluntary_participants, bar_width, label='Voluntary participants', color='blue')[[SEP]]bar2 = plt.bar(index + bar_width, obligated_participants, bar_width, label='Obligated participants', color='black')[[SEP]][[SEP]]plt.xlabel('Year')[[SEP]]plt.ylabel('Number of new participants')[[SEP]]plt.title('Number of new participants in integration courses in Germany from 2005 to 2019')[[SEP]]plt.xticks(index + bar_width / 2, years)[[SEP]]plt.legend()[[SEP]][[SEP]]plt.tight_layout()[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]categories = ['18-34', '35-44', '45-64', '65+'][[SEP]]severe = [58, 56, 58, 66][[SEP]]moderate = [23, 26, 28, 24][[SEP]]minor = [6, 7, 9, 8][[SEP]]not_a_risk = [5, 4, 2, 1][[SEP]]dont_know = [8, 7, 3, 1][[SEP]][[SEP]]# Plotting[[SEP]]barWidth = 0.5[[SEP]]r = np.arange(len(categories))[[SEP]][[SEP]]plt.bar(r, severe, color='blue', edgecolor='white', width=barWidth, label='Severe')[[SEP]]plt.bar(r, moderate, bottom=severe, color='darkblue', edgecolor='white', width=barWidth, label='Moderate')[[SEP]]plt.bar(r, minor, bottom=np.array(severe)+np.array(moderate), color='grey', edgecolor='white', width=barWidth, label='Minor')[[SEP]]plt.bar(r, not_a_risk, bottom=np.array(severe)+np.array(moderate)+np.array(minor), color='red', edgecolor='white', width=barWidth, label='Not a risk at all')[[SEP]]plt.bar(r, dont_know, bottom=np.array(severe)+np.array(moderate)+np.array(minor)+np.array(not_a_risk), color='green', edgecolor='white', width=barWidth, label="Don't know/No opinion")[[SEP]][[SEP]]# Custom x axis[[SEP]]plt.xticks(r, categories)[[SEP]]plt.xlabel("Age Group")[[SEP]]plt.ylabel("Percentage of Respondents")[[SEP]]plt.title("U.S. adult opinion as to what extent COVID-19 is a health risk in the U.S, as of October 31, 2020, by age")[[SEP]]plt.legend(loc='upper right', bbox_to_anchor=(1.2, 1))[[SEP]][[SEP]]# Show the plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = [1990, 1995, 2000, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019][[SEP]]electric_power = [16261, 17466, 20220, 20737, 20462, 20808, 20513, 18225, 19133, 18035, 15821, 16451, 16427, 14138, 12996, 12622, 12053, 10203][[SEP]]industrial = [2756, 2488, 2256, 1954, 1914, 1865, 1796, 1392, 1631, 1561, 1513, 1546, 1530, 1380, 1205, 1195, 1180, 1186][[SEP]]commercial = [124, 117, 92, 97, 65, 70, 81, 73, 70, 62, 44, 41, 40, 31, 24, 21, 19, 17][[SEP]]residential = [31, 17, 11, 8, 6, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0][[SEP]][[SEP]]# Plotting[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.plot(years, electric_power, label='Electric power sector', marker='o')[[SEP]]plt.plot(years, industrial, label='Industrial sector', marker='o')[[SEP]]plt.plot(years, commercial, label='Commercial sector', marker='o')[[SEP]]plt.plot(years, residential, label='Residential sector', marker='o')[[SEP]][[SEP]]# Adding titles and labels[[SEP]]plt.title('Consumption of coal in the United States from 1990 to 2019, by sector (in trillion British thermal units)')[[SEP]]plt.xlabel('Year')[[SEP]]plt.ylabel('Consumption in trillion Btu')[[SEP]]plt.legend()[[SEP]][[SEP]]# Display the plot[[SEP]]plt.grid(True)[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]years = ['2014', '2015'][[SEP]]frequent = [7, 7][[SEP]]occasional = [68, 71][[SEP]]never = [25, 22][[SEP]][[SEP]]# Plotting[[SEP]]barWidth = 0.3[[SEP]]r1 = np.arange(len(years))[[SEP]]r2 = [x + barWidth for x in r1][[SEP]][[SEP]]plt.bar(r1, frequent, color='blue', width=barWidth, edgecolor='grey', label='A frequent air traveler')[[SEP]]plt.bar(r1, occasional, bottom=frequent, color='navy', width=barWidth, edgecolor='grey', label='An occasional air traveler')[[SEP]]plt.bar(r1, never, bottom=[i+j for i,j in zip(frequent, occasional)], color='lightgrey', width=barWidth, edgecolor='grey', label='Never flown')[[SEP]][[SEP]]# Adding labels[[SEP]]plt.xlabel('Year', fontweight='bold')[[SEP]]plt.ylabel('Share of respondents', fontweight='bold')[[SEP]]plt.xticks([r + barWidth/2 for r in range(len(years))], years)[[SEP]][[SEP]]# Adding percentages on bars[[SEP]]for i in range(len(years)):[[SEP]]    plt.text(r1[i] - barWidth/4, frequent[i]/2, str(frequent[i]) + '%', color='white', fontweight='bold')[[SEP]]    plt.text(r1[i] - barWidth/4, frequent[i] + occasional[i]/2, str(occasional[i]) + '%', color='white', fontweight='bold')[[SEP]]    plt.text(r1[i] - barWidth/4, frequent[i] + occasional[i] + never[i]/2, str(never[i]) + '%', color='black', fontweight='bold')[[SEP]][[SEP]]# Adding legend[[SEP]]plt.legend(loc='upper left', bbox_to_anchor=(1,1), ncol=1)[[SEP]][[SEP]]# Show plot[[SEP]]plt.title('Air travel frequency in the United States from 2014 to 2015')[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = [2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020][[SEP]]agriculture = [2.55, 2.37, 2.23, 2.21, 2.25, 2.01, 2.09, 2.06, 2.11, 2.06, 2.01][[SEP]]industry = [19.7, 20.25, 20.23, 20.32, 20.44, 20.12, 19.47, 19.41, 19.47, 19.28, 19.1][[SEP]]services = [77.76, 77.38, 77.54, 77.48, 77.31, 77.87, 78.44, 78.53, 78.43, 78.67, 78.89][[SEP]][[SEP]]# Plot[[SEP]]fig, ax = plt.subplots()[[SEP]][[SEP]]ax.stackplot(years, agriculture, industry, services, labels=['Agriculture', 'Industry', 'Services'], colors=['#1f77b4', '#ff7f0e', '#2ca02c'])[[SEP]][[SEP]]# Labels and title[[SEP]]ax.set_title('Norway: Distribution of Employment by Economic Sector (2010-2020)')[[SEP]]ax.set_xlabel('Year')[[SEP]]ax.set_ylabel('Percentage of Total Employment')[[SEP]]ax.legend(loc='upper left')[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]social_media = ['Facebook', 'Snapchat', 'Facebook Messenger', 'Instagram', 'Google+', 'Twitter', 'Tumblr', 'Pinterest', 'LinkedIn'][[SEP]]several_daily_use = [54, 41, 40, 37, 14, 9, 9, 8, 7][[SEP]]daily_use = [24, 18, 24, 19, 16, 8, 6, 10, 11][[SEP]][[SEP]]x = np.arange(len(social_media))  # the label locations[[SEP]]width = 0.35  # the width of the bars[[SEP]][[SEP]]fig, ax = plt.subplots()[[SEP]]rects1 = ax.bar(x - width/2, several_daily_use, width, label='Several daily use')[[SEP]]rects2 = ax.bar(x + width/2, daily_use, width, label='Daily use (or close to)')[[SEP]][[SEP]]# Add some text for labels, title and custom x-axis tick labels, etc.[[SEP]]ax.set_xlabel('Social Media Site')[[SEP]]ax.set_ylabel('Share of Respondents')[[SEP]]ax.set_title('Share of daily social media users in Denmark in 2018, by social media site')[[SEP]]ax.set_xticks(x)[[SEP]]ax.set_xticklabels(social_media)[[SEP]]ax.legend()[[SEP]][[SEP]]# Add labels on top of the bars[[SEP]]def autolabel(rects):[[SEP]]    """Attach a text label above each bar in *rects*, displaying its height."""[[SEP]]    for rect in rects:[[SEP]]        height = rect.get_height()[[SEP]]        ax.annotate('{}'.format(height),[[SEP]]                    xy=(rect.get_x() + rect.get_width() / 2, height),[[SEP]]                    xytext=(0, 3),  # 3 points vertical offset[[SEP]]                    textcoords="offset points",[[SEP]]                    ha='center', va='bottom')[[SEP]][[SEP]]autolabel(rects1)[[SEP]]autolabel(rects2)[[SEP]][[SEP]]fig.tight_layout()[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = list(range(2020, 2031))[[SEP]]winning_team = [130, 150, 157, 164, 171, 178, 188, 198, 208, 218, 228][[SEP]]losing_team = [65, 75, 82, 89, 96, 103, 113, 123, 133, 143, 153][[SEP]][[SEP]]# Plotting[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.bar(years, winning_team, width=0.4, label='Winning team', color='blue', align='center')[[SEP]]plt.bar(years, losing_team, width=0.4, label='Losing team', color='darkblue', align='edge')[[SEP]][[SEP]]# Labels and Title[[SEP]]plt.xlabel('Year')[[SEP]]plt.ylabel('Pay in thousand U.S. dollars')[[SEP]]plt.title('Amount a player receives for playing in the NFL Super Bowl 2020 - 2030')[[SEP]]plt.xticks(years)[[SEP]]plt.legend()[[SEP]][[SEP]]# Show plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = [2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020][[SEP]]agriculture = [2.91, 2.91, 2.92, 3.08, 2.85, 2.75, 2.87, 2.63, 2.51, 2.44, 2.38][[SEP]]industry = [22.25, 22.17, 21.76, 21.31, 20.53, 20.38, 20.29, 20.49, 20.29, 20.09, 19.89][[SEP]]services = [74.84, 74.92, 75.32, 75.62, 76.62, 76.88, 76.83, 76.89, 77.2, 77.47, 77.73][[SEP]][[SEP]]# Plot[[SEP]]fig, ax = plt.subplots()[[SEP]][[SEP]]ax.stackplot(years, agriculture, industry, services, labels=['Agriculture', 'Industry', 'Services'], colors=['#1f77b4', '#ff7f0e', '#2ca02c'])[[SEP]][[SEP]]# Labels and title[[SEP]]ax.set_title('France: Distribution of the workforce across economic sectors (2010-2020)')[[SEP]]ax.set_xlabel('Year')[[SEP]]ax.set_ylabel('Percentage of the workforce')[[SEP]]ax.legend(loc='upper left')[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]categories = ['Total', 'White', 'Black', 'Asian and Pacific Islander', 'Hispanic'][[SEP]]high_school_or_more = [89.8, 90.2, 87.9, 90.5, 71.6][[SEP]]college_or_more = [35, 35.2, 25.2, 56.5, 18.3][[SEP]][[SEP]]x = np.arange(len(categories))  # the label locations[[SEP]]width = 0.35  # the width of the bars[[SEP]][[SEP]]fig, ax = plt.subplots()[[SEP]]rects1 = ax.bar(x - width/2, high_school_or_more, width, label='High school graduate or more')[[SEP]]rects2 = ax.bar(x + width/2, college_or_more, width, label='College graduate or more')[[SEP]][[SEP]]# Add some text for labels, title and custom x-axis tick labels, etc.[[SEP]]ax.set_xlabel('Ethnicity')[[SEP]]ax.set_ylabel('Percent of the population')[[SEP]]ax.set_title('Percentage of educational attainment in the United States in 2018, by ethnicity')[[SEP]]ax.set_xticks(x)[[SEP]]ax.set_xticklabels(categories)[[SEP]]ax.legend()[[SEP]][[SEP]]# Attach a text label above each bar in *rects*, displaying its height.[[SEP]]def autolabel(rects):[[SEP]]    """Attach a text label above each bar in *rects*, displaying its height."""[[SEP]]    for rect in rects:[[SEP]]        height = rect.get_height()[[SEP]]        ax.annotate('{}'.format(height),[[SEP]]                    xy=(rect.get_x() + rect.get_width() / 2, height),[[SEP]]                    xytext=(0, 3),  # 3 points vertical offset[[SEP]]                    textcoords="offset points",[[SEP]]                    ha='center', va='bottom')[[SEP]][[SEP]]autolabel(rects1)[[SEP]]autolabel(rects2)[[SEP]][[SEP]]fig.tight_layout()[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]years = np.arange(2009, 2021)[[SEP]]commercial = [86.77, 101.69, 135.95, 154.67, 200.48, 248.96, 258.95, 352.88, 362.28, 363.11, 349.34, 345.13][[SEP]]broadcasting = [128.9, 135.83, 154.2, 136.76, 133.66, 178.6, 141.64, 184.7, 255.27, 268.47, 306.32, 173.41][[SEP]]matchday = [150.57, 139.17, 145.74, 129.83, 143.51, 142.17, 119.15, 140.18, 146.82, 144.39, 140.73, 111.06][[SEP]][[SEP]]# Plotting[[SEP]]fig, ax = plt.subplots(figsize=(10, 6))[[SEP]][[SEP]]ax.bar(years, commercial, label='Commercial', color='blue')[[SEP]]ax.bar(years, broadcasting, bottom=commercial, label='Broadcasting', color='darkblue')[[SEP]]ax.bar(years, matchday, bottom=np.array(commercial) + np.array(broadcasting), label='Matchday', color='gray')[[SEP]][[SEP]]# Labels and title[[SEP]]ax.set_xlabel('Year')[[SEP]]ax.set_ylabel('Revenue in million U.S. dollars')[[SEP]]ax.set_title('Manchester United revenue by segment from 2009 to 2020')[[SEP]]ax.legend()[[SEP]][[SEP]]plt.xticks(years)[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]states = ["California", "Colorado", "Connecticut", "Indiana", "Kansas", "Kentucky", "Maine", "Maryland", "Massachusetts", [[SEP]]          "Michigan", "Minnesota", "Missouri", "Montana", "New Hampshire", "New Jersey", "New York", "North Carolina", [[SEP]]          "Ohio", "Pennsylvania", "Rhode Island", "South Carolina*", "Tennessee**", "Utah", "Vermont", "Virginia", [[SEP]]          "Washington", "Wisconsin"][[SEP]]data_1915 = [102.1, 170.5, 169.2, 126.1, 116.7, 118.0, 166.0, 171.0, 170.7, 111.9, 100.3, 144.2, 117.7, 153.2, 163.4, [[SEP]]             185.2, 148.4, 135.2, 168.9, 185.8, 131.9, 135.3, 119.5, 150.0, 131.1, 78.4, 119.6][[SEP]]data_1918 = [537.8, 766.5, 767.7, 408.1, 474.4, 537.3, 589.4, 803.6, 726.7, 389.3, 390.5, 476.6, 762.7, 751.6, 769.4, [[SEP]]             598.2, 503.1, 494.3, 883.1, 681.2, 632.6, 476.0, 508.8, 597.2, 621.1, 411.5, 405.6][[SEP]]data_1919 = [214.7, 253.5, 224.5, 213.7, 188.1, 284.6, 229.2, 238.4, 207.8, 192.2, 166.9, 206.1, 225.4, 231.6, 226.5, [[SEP]]             233.7, 234.4, 222.0, 236.5, 239.2, 291.5, 234.8, 270.8, 228.9, 267.2, 187.9, 178.5][[SEP]][[SEP]]x = np.arange(len(states))  # the label locations[[SEP]]width = 0.25  # the width of the bars[[SEP]][[SEP]]fig, ax = plt.subplots(figsize=(12, 8))[[SEP]]rects1 = ax.barh(x - width, data_1915, width, label='1915')[[SEP]]rects2 = ax.barh(x, data_1918, width, label='1918')[[SEP]]rects3 = ax.barh(x + width, data_1919, width, label='1919')[[SEP]][[SEP]]# Add some text for labels, title and custom x-axis tick labels, etc.[[SEP]]ax.set_xlabel('Mortality rate per 100,000 people')[[SEP]]ax.set_title('Influenza mortality rates during the Spanish Flu pandemic in select US states from 1915 to 1919')[[SEP]]ax.set_yticks(x)[[SEP]]ax.set_yticklabels(states)[[SEP]]ax.legend()[[SEP]][[SEP]]fig.tight_layout()[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = [2012, 2013, 2014, 2015, 2016][[SEP]]taste = [87, 89, 90, 83, 84][[SEP]]price = [73, 71, 73, 68, 71][[SEP]]healthfulness = [61, 64, 71, 60, 64][[SEP]]convenience = [53, 56, 51, 52, 52][[SEP]]sustainability = [35, 36, 38, 35, 41][[SEP]][[SEP]]# Plotting[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.plot(years, taste, marker='o', label='Taste', color='blue')[[SEP]]plt.plot(years, price, marker='o', label='Price', color='black')[[SEP]]plt.plot(years, healthfulness, marker='o', label='Healthfulness', color='gray')[[SEP]]plt.plot(years, convenience, marker='o', label='Convenience', color='red')[[SEP]]plt.plot(years, sustainability, marker='o', label='Sustainability', color='green')[[SEP]][[SEP]]# Adding labels and title[[SEP]]plt.xlabel('Year')[[SEP]]plt.ylabel('Has a great impact (%)')[[SEP]]plt.title('How much of an impact do the following have on your decision to buy foods and beverages?')[[SEP]]plt.xticks(years)[[SEP]]plt.yticks(range(30, 101, 10))[[SEP]]plt.legend()[[SEP]][[SEP]]# Display the plot[[SEP]]plt.grid(True)[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = [2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019][[SEP]]age_0_14 = [19.57, 19.18, 18.99, 18.75, 18.49, 18.23, 17.97, 17.65, 17.35, 17.09, 16.82][[SEP]]age_15_64 = [71.79, 71.92, 71.82, 71.75, 71.67, 71.57, 71.42, 71.35, 71.21, 71.01, 70.77][[SEP]]age_65_plus = [8.64, 8.9, 9.19, 9.5, 9.84, 10.21, 10.6, 11.01, 11.44, 11.9, 12.41][[SEP]][[SEP]]# Plot[[SEP]]fig, ax = plt.subplots()[[SEP]][[SEP]]ax.stackplot(years, age_0_14, age_15_64, age_65_plus, labels=['0-14 years', '15-64 years', '65 years and older'], colors=['#1f77b4', '#2ca02c', '#ff7f0e'])[[SEP]][[SEP]]# Labels and title[[SEP]]ax.set_title('Age structure in Thailand from 2009 to 2019')[[SEP]]ax.set_xlabel('Year')[[SEP]]ax.set_ylabel('Percentage of total population')[[SEP]]ax.legend(loc='upper right')[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = [2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019][[SEP]]agriculture = [33.49, 33.88, 34.56, 33.52, 31.6, 28.87, 26.58, 24.74, 23.36, 22.01, 20.71][[SEP]]industry = [21.66, 21.87, 22.14, 22.98, 24.07, 25.61, 27.68, 29.45, 30.85, 32.29, 34.23][[SEP]]services = [38.79, 38.31, 37.5, 37.77, 38.51, 39.7, 39.83, 39.89, 39.72, 39.49, 38.85][[SEP]][[SEP]]# Plot[[SEP]]fig, ax = plt.subplots()[[SEP]][[SEP]]ax.stackplot(years, agriculture, industry, services, labels=['Agriculture', 'Industry', 'Services'], colors=['#1f77b4', '#ff7f0e', '#2ca02c'])[[SEP]][[SEP]]# Labels and title[[SEP]]ax.set_title('Cambodia: Share of economic sectors in the GDP (2009-2019)')[[SEP]]ax.set_xlabel('Year')[[SEP]]ax.set_ylabel('Share in GDP (%)')[[SEP]]ax.legend(loc='upper right')[[SEP]][[SEP]]# Show plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = list(range(2008, 2019 + 1))[[SEP]]flemish_region = [3.9, 5.0, 5.2, 4.3, 4.6, 5.1, 5.1, 5.2, 4.9, 4.4, 3.5, 3.3][[SEP]]brussels_capital_region = [16.0, 15.9, 17.4, 17.1, 17.5, 19.3, 18.5, 17.5, 16.9, 15.0, 13.4, 12.7][[SEP]]walloon_region = [10.1, 11.2, 11.5, 9.5, 10.1, 11.4, 12.0, 12.0, 10.6, 9.8, 8.5, 7.2][[SEP]][[SEP]]# Plotting[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.plot(years, flemish_region, marker='o', label='Flemish Region', color='blue')[[SEP]]plt.plot(years, brussels_capital_region, marker='o', label='Brussels-Capital Region', color='black')[[SEP]]plt.plot(years, walloon_region, marker='o', label='Walloon Region', color='gray')[[SEP]][[SEP]]# Adding titles and labels[[SEP]]plt.title('Rate of Unemployment in Belgium from 2008 to 2019, by Region')[[SEP]]plt.xlabel('Year')[[SEP]]plt.ylabel('Unemployment Rate (%)')[[SEP]]plt.xticks(years)[[SEP]]plt.legend()[[SEP]][[SEP]]# Display the plot[[SEP]]plt.grid(True)[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]years = ['2012', '2013', '2014', '2015', '2016', '2017', '2018'][[SEP]]public_beds = [42.71, 43.44, 43.82, 45.09, 45.68, 46.19, 42.29][[SEP]]private_beds = [14.17, 14.6, 13.65, 13.57, 14.62, 15.57, 15.57][[SEP]][[SEP]]x = np.arange(len(years))  # the label locations[[SEP]]width = 0.35  # the width of the bars[[SEP]][[SEP]]fig, ax = plt.subplots()[[SEP]]rects1 = ax.bar(x - width/2, public_beds, width, label='Public', color='blue')[[SEP]]rects2 = ax.bar(x + width/2, private_beds, width, label='Private', color='navy')[[SEP]][[SEP]]# Add some text for labels, title and custom x-axis tick labels, etc.[[SEP]]ax.set_xlabel('Year')[[SEP]]ax.set_ylabel('Number of hospital beds (in thousands)')[[SEP]]ax.set_title('Number of beds in public and private hospitals in Malaysia from 2012 to 2018')[[SEP]]ax.set_xticks(x)[[SEP]]ax.set_xticklabels(years)[[SEP]]ax.legend()[[SEP]][[SEP]]# Add labels on top of the bars[[SEP]]def autolabel(rects):[[SEP]]    """Attach a text label above each bar in *rects*, displaying its height."""[[SEP]]    for rect in rects:[[SEP]]        height = rect.get_height()[[SEP]]        ax.annotate('{}'.format(height),[[SEP]]                    xy=(rect.get_x() + rect.get_width() / 2, height),[[SEP]]                    xytext=(0, 3),  # 3 points vertical offset[[SEP]]                    textcoords="offset points",[[SEP]]                    ha='center', va='bottom')[[SEP]][[SEP]]autolabel(rects1)[[SEP]]autolabel(rects2)[[SEP]][[SEP]]fig.tight_layout()[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]countries = ['United States', 'Spain', 'Germany', 'France', 'Italy', 'United Kingdom', 'Japan', 'Australia', 'Greece', 'Canada'][[SEP]]visitor_exports_2016 = [212.3, 65.7, 46.7, 46.8, 41.6, 37.0, 32.4, 20.3, 16.7, 15.0][[SEP]]visitor_exports_2017 = [200.7, 75.4, 50.4, 50.3, 44.9, 35.6, 35.3, 23.4, 18.6, 17.2][[SEP]][[SEP]]# Bar width[[SEP]]bar_width = 0.35[[SEP]][[SEP]]# Positions of the bars on the x-axis[[SEP]]r1 = np.arange(len(countries))[[SEP]]r2 = [x + bar_width for x in r1][[SEP]][[SEP]]# Create the plot[[SEP]]plt.figure(figsize=(10, 8))[[SEP]]plt.barh(r1, visitor_exports_2016, color='blue', height=bar_width, edgecolor='grey', label='2016')[[SEP]]plt.barh(r2, visitor_exports_2017, color='black', height=bar_width, edgecolor='grey', label='2017')[[SEP]][[SEP]]# Add labels[[SEP]]plt.xlabel('Visitor exports in billion U.S. dollars')[[SEP]]plt.ylabel('Country')[[SEP]]plt.title('Visitor exports in selected countries worldwide from 2016 to 2017 (in billion U.S. dollars)')[[SEP]]plt.yticks([r + bar_width/2 for r in range(len(countries))], countries)[[SEP]][[SEP]]# Add legend[[SEP]]plt.legend()[[SEP]][[SEP]]# Show the plot[[SEP]]plt.show()
<code>[[SEP]]import matplotlib.pyplot as plt[[SEP]]import pandas as pd[[SEP]]import matplotlib.dates as mdates[[SEP]][[SEP]]# Data[[SEP]]dates = pd.date_range(start="2020-02-25", end="2020-08-17")[[SEP]]brazil = [3.23, 3.23, 3.25, 3.27, 3.29, 3.31, 3.33, 3.33, 3.34, 3.36, 3.38, 3.4, 3.42, 3.44, 3.44, 3.46, 3.47, 3.5, 3.53, 3.57, 3.59, 3.6, 3.61, 3.64, 3.68, 3.72, 3.77, 3.78, 3.79, 3.8, 3.8, 3.81, 3.83, 3.85, 3.86, 3.87, 3.88, 3.91, 3.94, 3.97, 4, 4.03, 4.05, 4.08, 4.1, 4.13, 4.19, 4.25, 4.26, 4.29, 4.34, 4.39, 4.48, 4.53, 4.59, 4.63, 4.66, 4.68, 4.74, 4.88, 4.87, 4.9, 4.95, 4.99, 5.02, 5.05, 5.1, 5.14, 5.19, 5.25, 5.27, 5.34, 5.42, 5.53, 5.57, 5.62, 5.69, 5.69, 5.78, 5.99, 6.1, 6.22, 6.27, 6.26, 6.24, 6.34, 6.36, 6.46, 6.47, 6.62, 6.61, 6.69, 6.71, 6.79, 6.9, 6.96, 6.98, 6.84, 6.84, 6.81, 6.81, 6.77, 6.82, 6.9, 6.79, 6.95, 6.99, 6.91, 6.91, 6.99, 6.98, 6.83, 6.79, 6.86, 6.93, 6.69, 6.35, 6.36, 6.35, 6.37, 6.41, 6.36, 6.32, 6.13, 6.06, 5.67, 5.52, 5.42, 5.38, 5.27, 5.02, 4.86, 4.59, 4.37, 4.2, 3.96, 3.78, 3.53, 3.52, 3.47, 3.2, 2.92, 2.69, 2.64, 2.34, 2.09, 1.8, 1.62, 1.6, 1.22, 0.97, 0.93, 0.34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]years = np.arange(2009, 2020)[[SEP]]agriculture = [0.55, 0.95, 1.21, 0.98, 1.09, 1.24, 0.89, 0.94, 1.17, 0.92, 0.9][[SEP]]industry = [25.48, 23.25, 24.56, 24.5, 24.38, 24.76, 38.17, 36.97, 35.75, 36.8, 35.18][[SEP]]services = [63.43, 66.51, 64.89, 64.97, 66.13, 65.66, 53.96, 55.59, 56.38, 55.82, 56.72][[SEP]][[SEP]]# Plot[[SEP]]fig, ax = plt.subplots(figsize=(10, 6))[[SEP]][[SEP]]ax.bar(years, agriculture, label='Agriculture', color='navy')[[SEP]]ax.bar(years, industry, bottom=agriculture, label='Industry', color='darkblue')[[SEP]]ax.bar(years, services, bottom=np.array(agriculture) + np.array(industry), label='Services', color='lightgrey')[[SEP]][[SEP]]# Labels and title[[SEP]]ax.set_xlabel('Year')[[SEP]]ax.set_ylabel('Share of GDP (%)')[[SEP]]ax.set_title('Ireland: Distribution of GDP across economic sectors (2009-2019)')[[SEP]]ax.legend()[[SEP]][[SEP]]# Show plot[[SEP]]plt.xticks(years)[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]retailers = ['Zalando', 'ASOS', 'M&S', 'H&M', 'Inditex', 'Boohoo', 'Ted Baker'][[SEP]]gross_profit_2016 = [45, 50, 55, 57, 58, 58, 60][[SEP]]gross_profit_2017 = [45, 50, 56, 55, 57, 55, 60][[SEP]][[SEP]]x = np.arange(len(retailers))  # the label locations[[SEP]]width = 0.35  # the width of the bars[[SEP]][[SEP]]fig, ax = plt.subplots()[[SEP]]rects1 = ax.bar(x - width/2, gross_profit_2016, width, label='2016')[[SEP]]rects2 = ax.bar(x + width/2, gross_profit_2017, width, label='2017')[[SEP]][[SEP]]# Add some text for labels, title and custom x-axis tick labels, etc.[[SEP]]ax.set_xlabel('Major Public Apparel Retailers')[[SEP]]ax.set_ylabel('Gross Profit Margin (%)')[[SEP]]ax.set_title('Estimated Gross Profit Margins of Selected Major Public Apparel Retailers in the UK\nin the Fiscal Years 2016 and 2017')[[SEP]]ax.set_xticks(x)[[SEP]]ax.set_xticklabels(retailers)[[SEP]]ax.legend()[[SEP]][[SEP]]# Attach a text label above each bar in *rects*, displaying its height.[[SEP]]def autolabel(rects):[[SEP]]    """Attach a text label above each bar in *rects*, displaying its height."""[[SEP]]    for rect in rects:[[SEP]]        height = rect.get_height()[[SEP]]        ax.annotate('{}'.format(height),[[SEP]]                    xy=(rect.get_x() + rect.get_width() / 2, height),[[SEP]]                    xytext=(0, 3),  # 3 points vertical offset[[SEP]]                    textcoords="offset points",[[SEP]]                    ha='center', va='bottom')[[SEP]][[SEP]]autolabel(rects1)[[SEP]]autolabel(rects2)[[SEP]][[SEP]]fig.tight_layout()[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = [2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019][[SEP]]age_0_14 = [15.02, 15.05, 15.05, 14.96, 14.82, 14.68, 14.56, 14.36, 14.2, 14.07, 13.9][[SEP]]age_15_64 = [66.11, 65.79, 65.55, 65.32, 65.08, 64.85, 64.62, 64.51, 64.4, 64.27, 64.16][[SEP]]age_65_plus = [18.86, 19.15, 19.4, 19.72, 20.1, 20.48, 20.82, 21.13, 21.4, 21.66, 21.94][[SEP]][[SEP]]# Plot[[SEP]]fig, ax = plt.subplots()[[SEP]][[SEP]]ax.stackplot(years, age_0_14, age_15_64, age_65_plus, labels=['0-14 years', '15-64 years', '65 years +'], colors=['#1f77b4', '#ff7f0e', '#2ca02c'])[[SEP]][[SEP]]# Labels and title[[SEP]]ax.set_title('Greece: Age distribution from 2009 to 2019')[[SEP]]ax.set_xlabel('Year')[[SEP]]ax.set_ylabel('Percentage')[[SEP]]ax.legend(loc='upper right')[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]categories = [[[SEP]]    "Comics", "Shopping - marketplace", "News", "Gaming - hyper casual", "Gaming - casual",[[SEP]]    "Gaming - social casino", "Gaming - midcore", "Finance - traditional banking", "Finance - digital banking",[[SEP]]    "Dating", "Gaming - hardcore", "Sports", "Social", "Finance - investments", "Books", "Shopping - e-commerce",[[SEP]]    "Entertainment - streaming", "Finance - all", "Business", "Communication", "Entertainment - all",[[SEP]]    "Finance - financial services", "Lifestyle", "Music", "Health & fitness", "Travel", "Medical", "Education",[[SEP]]    "Utilities", "Productivity", "Food & drink"[[SEP]]][[SEP]][[SEP]]day_1 = [[[SEP]]    33.8, 33.7, 33.1, 32.3, 32.3, 32.1, 31, 30.6, 30, 29.6, 28.7, 27.6, 26.3, 25.6, 25.1, 24.5, 24.4, 22.7, 22.4, 22.4,[[SEP]]    22, 21.8, 20.9, 20.4, 20.2, 20, 20, 18.8, 18.3, 17.2, 16.5[[SEP]]][[SEP]][[SEP]]day_7 = [[[SEP]]    16.4, 16.1, 19.8, 8.3, 11.1, 12.6, 7.9, 18.6, 15.6, 11.4, 8.7, 15.3, 9.3, 12.5, 11.1, 10.7, 9.9, 9.7, 10.1, 10.3,[[SEP]]    8.2, 9.7, 8.7, 8.1, 8.5, 7.6, 7, 6.3, 6.8, 7.2, 7.2[[SEP]]][[SEP]][[SEP]]day_30 = [[[SEP]]    9.3, 8.7, 13.3, 2.6, 4.5, 5.4, 2.3, 13.4, 10.2, 5.1, 3.1, 9.9, 3.9, 7.1, 6, 5.6, 4.7, 5.8, 5, 6, 3.8, 6.1, 4.5,[[SEP]]    4.2, 4, 3.6, 3.5, 2.5, 3.4, 4.1, 3.9[[SEP]]][[SEP]][[SEP]]# Plotting[[SEP]]fig, ax = plt.subplots(figsize=(10, 15))[[SEP]]bar_width = 0.25[[SEP]]index = np.arange(len(categories))[[SEP]][[SEP]]bar1 = plt.barh(index, day_1, bar_width, label='Day 1', color='b')[[SEP]]bar2 = plt.barh(index + bar_width, day_7, bar_width, label='Day 7', color='g')[[SEP]]bar3 = plt.barh(index + 2 * bar_width, day_30, bar_width, label='Day 30', color='gray')[[SEP]][[SEP]]plt.xlabel('Retention rate')[[SEP]]plt.ylabel('App categories')[[SEP]]plt.title('Retention rate on day 1, day 7, and day 30 of mobile app installs worldwide as of August 2020, by category')[[SEP]]plt.yticks(index + bar_width, categories)[[SEP]]plt.legend()[[SEP]][[SEP]]plt.tight_layout()[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]years = np.arange(2010, 2021)[[SEP]]age_groups = {[[SEP]]    "0-24 years": [1.55, 1.56, 1.58, 1.59, 1.6, 1.6, 1.6, 1.61, 1.6, 1.6, 1.59],[[SEP]]    "25-34 years": [0.63, 0.63, 0.65, 0.67, 0.68, 0.7, 0.71, 0.72, 0.73, 0.74, 0.75],[[SEP]]    "35-44 years": [0.73, 0.73, 0.72, 0.72, 0.72, 0.72, 0.71, 0.71, 0.7, 0.7, 0.7],[[SEP]]    "45-69 years": [1.45, 1.48, 1.51, 1.54, 1.57, 1.59, 1.61, 1.62, 1.63, 1.65, 1.67],[[SEP]]    "70-79 years": [0.29, 0.29, 0.3, 0.31, 0.32, 0.34, 0.36, 0.38, 0.4, 0.42, 0.44],[[SEP]]    "80 years and older": [0.29, 0.29, 0.3, 0.31, 0.32, 0.34, 0.36, 0.38, 0.4, 0.23, 0.23][[SEP]]}[[SEP]][[SEP]]# Plotting[[SEP]]fig, ax = plt.subplots(figsize=(10, 6))[[SEP]][[SEP]]bottom = np.zeros(len(years))[[SEP]]for age_group, values in age_groups.items():[[SEP]]    ax.bar(years, values, bottom=bottom, label=age_group)[[SEP]]    bottom += values[[SEP]][[SEP]]ax.set_xlabel('Year')[[SEP]]ax.set_ylabel('Inhabitants in millions')[[SEP]]ax.set_title('Population in Norway from 2010 to 2020, by age group (in millions)')[[SEP]]ax.legend()[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]platforms = ['Google', 'Facebook', 'Twitter', 'AOL', 'Yahoo!'][[SEP]]years = ['2012', '2013', '2014', '2015', '2016', '2017', '2018', '2019'][[SEP]]data = [[[SEP]]    [43.69, 51.07, 59.62, 67.39, 79.38, 95.58, 116.46, 134.81],  # Google[[SEP]]    [4.28, 6.99, 11.49, 17.08, 26.89, 39.94, 55.01, 69.66],     # Facebook[[SEP]]    [0.27, 0.59, 1.25, 1.99, 2.25, 2.11, 2.62, 2.99],           # Twitter[[SEP]]    [1.42, 1.61, 1.85, np.nan, np.nan, np.nan, np.nan, np.nan], # AOL[[SEP]]    [4.03, 3.69, 3.71, 4.2, 4.65, np.nan, np.nan, np.nan]       # Yahoo![[SEP]]][[SEP]][[SEP]]# Convert data to numpy array for easier manipulation[[SEP]]data = np.array(data)[[SEP]][[SEP]]# Plotting[[SEP]]fig, ax = plt.subplots(figsize=(10, 6))[[SEP]][[SEP]]# Define bar width and positions[[SEP]]bar_width = 0.1[[SEP]]index = np.arange(len(platforms))[[SEP]][[SEP]]# Colors for each year[[SEP]]colors = ['#1f77b4', '#ff7f0e', '#2ca02c', '#d62728', '#9467bd', '#8c564b', '#e377c2', '#7f7f7f'][[SEP]][[SEP]]# Plot each year's data[[SEP]]for i, year in enumerate(years):[[SEP]]    ax.bar(index + i * bar_width, data[:, i], bar_width, label=year, color=colors[i])[[SEP]][[SEP]]# Labels and title[[SEP]]ax.set_xlabel('Platform')[[SEP]]ax.set_ylabel('Revenue in billion U.S. dollars')[[SEP]]ax.set_title('Selected online companies ranked by total digital advertising revenue from 2012 to 2019')[[SEP]]ax.set_xticks(index + bar_width * (len(years) - 1) / 2)[[SEP]]ax.set_xticklabels(platforms)[[SEP]]ax.legend()[[SEP]][[SEP]]# Show plot[[SEP]]plt.tight_layout()[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = ['2009-2013', '2010-2014', '2011-2015', '2012-2016', '2013-2017', '2014-2018', '2015-2019'][[SEP]]men = [79.72, 79.93, 80.08, 80.24, 80.41, 80.55, 80.75][[SEP]]women = [83.55, 83.69, 83.79, 83.88, 83.99, 84.1, 84.24][[SEP]][[SEP]]# Plotting[[SEP]]fig, ax = plt.subplots()[[SEP]]bar_width = 0.35[[SEP]]index = range(len(years))[[SEP]][[SEP]]bar1 = plt.bar(index, men, bar_width, label='Men', color='blue')[[SEP]]bar2 = plt.bar([i + bar_width for i in index], women, bar_width, label='Women', color='darkblue')[[SEP]][[SEP]]# Labels and title[[SEP]]plt.xlabel('Year')[[SEP]]plt.ylabel('Life expectancy in years')[[SEP]]plt.title('Average life expectancy at birth in Sweden from 2009 to 2019, by gender')[[SEP]]plt.xticks([i + bar_width / 2 for i in index], years)[[SEP]]plt.legend()[[SEP]][[SEP]]# Display the plot[[SEP]]plt.tight_layout()[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]years = ['2009/10', '2010/11', '2011/12', '2012/13', '2013/14', '2014/15', '2015/16', '2016/17', '2017/18', '2018/19'][[SEP]]boys = [131376, 133900, 133823, 138177, 138373, 137087, 133470, 138364, 138935, 136638][[SEP]]girls = [158419, 160881, 160456, 163992, 165779, 166838, 166747, 170797, 175594, 173088][[SEP]][[SEP]]# Plotting[[SEP]]fig, ax = plt.subplots(figsize=(10, 6))[[SEP]][[SEP]]bar_width = 0.35[[SEP]]index = np.arange(len(years))[[SEP]][[SEP]]bar1 = plt.bar(index, boys, bar_width, label='Boys', color='blue')[[SEP]]bar2 = plt.bar(index + bar_width, girls, bar_width, label='Girls', color='darkblue')[[SEP]][[SEP]]plt.xlabel('Year')[[SEP]]plt.ylabel('Number of participants')[[SEP]]plt.title('Number of participants in U.S. high school swimming and diving from 2009/10 to 2018/19')[[SEP]]plt.xticks(index + bar_width / 2, years, rotation=45)[[SEP]]plt.legend()[[SEP]][[SEP]]# Adding the data labels[[SEP]]for bar in bar1:[[SEP]]    yval = bar.get_height()[[SEP]]    plt.text(bar.get_x() + bar.get_width()/2.0, yval, int(yval), va='bottom')  # va: vertical alignment[[SEP]][[SEP]]for bar in bar2:[[SEP]]    yval = bar.get_height()[[SEP]]    plt.text(bar.get_x() + bar.get_width()/2.0, yval, int(yval), va='bottom')  # va: vertical alignment[[SEP]][[SEP]]plt.tight_layout()[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]years = np.array([2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020])[[SEP]]nominations = np.array([13, 31, 34, 54, 91, 112, 117, 160])[[SEP]]wins = np.array([3, 7, 2, 9, 20, 23, 27, 21])[[SEP]][[SEP]]# Plot[[SEP]]fig, ax = plt.subplots(figsize=(10, 6))[[SEP]][[SEP]]width = 0.35  # the width of the bars[[SEP]]p1 = ax.bar(years - width/2, nominations, width, label='Nominations')[[SEP]]p2 = ax.bar(years + width/2, wins, width, label='Wins')[[SEP]][[SEP]]# Labels and title[[SEP]]ax.set_xlabel('Year')[[SEP]]ax.set_ylabel('Number of Nominations/Wins')[[SEP]]ax.set_title('Number of Nominations and Wins for Netflix Original Programs at the Primetime Emmy Awards (2013-2020)')[[SEP]]ax.set_xticks(years)[[SEP]]ax.legend()[[SEP]][[SEP]]# Adding the data labels[[SEP]]for p in p1:[[SEP]]    height = p.get_height()[[SEP]]    ax.annotate('{}'.format(height),[[SEP]]                xy=(p.get_x() + p.get_width() / 2, height),[[SEP]]                xytext=(0, 3),  # 3 points vertical offset[[SEP]]                textcoords="offset points",[[SEP]]                ha='center', va='bottom')[[SEP]][[SEP]]for p in p2:[[SEP]]    height = p.get_height()[[SEP]]    ax.annotate('{}'.format(height),[[SEP]]                xy=(p.get_x() + p.get_width() / 2, height),[[SEP]]                xytext=(0, 3),  # 3 points vertical offset[[SEP]]                textcoords="offset points",[[SEP]]                ha='center', va='bottom')[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]years = [2008, 2013, 2018][[SEP]]systeme_a = [20.3, 22.3, 21.8][[SEP]]carrefour = [22.9, 19.9, 19.5][[SEP]]leclerc = [14.2, 17.7, 19.3][[SEP]]intermarche = [15.2, 13.6, 15.0][[SEP]]casino = [11.6, 10.2, 9.9][[SEP]]other = [15.8, 16.3, 14.6][[SEP]][[SEP]]# Plotting[[SEP]]barWidth = 0.5[[SEP]]r1 = np.arange(len(years))[[SEP]]r2 = [x + barWidth for x in r1][[SEP]]r3 = [x + barWidth for x in r2][[SEP]]r4 = [x + barWidth for x in r3][[SEP]]r5 = [x + barWidth for x in r4][[SEP]]r6 = [x + barWidth for x in r5][[SEP]][[SEP]]plt.bar(r1, systeme_a, color='blue', width=barWidth, edgecolor='grey', label='Systeme A')[[SEP]]plt.bar(r2, carrefour, color='navy', width=barWidth, edgecolor='grey', label='Carrefour')[[SEP]]plt.bar(r3, leclerc, color='grey', width=barWidth, edgecolor='grey', label='Leclerc')[[SEP]]plt.bar(r4, intermarche, color='red', width=barWidth, edgecolor='grey', label='Intermarche')[[SEP]]plt.bar(r5, casino, color='green', width=barWidth, edgecolor='grey', label='Casino')[[SEP]]plt.bar(r6, other, color='yellow', width=barWidth, edgecolor='grey', label='Other')[[SEP]][[SEP]]# Adding labels[[SEP]]plt.xlabel('Year', fontweight='bold')[[SEP]]plt.ylabel('Share of market', fontweight='bold')[[SEP]]plt.xticks([r + barWidth for r in range(len(years))], years)[[SEP]][[SEP]]# Adding legend[[SEP]]plt.legend()[[SEP]][[SEP]]# Show the plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]categories = ['Mobile Phone', 'PC/Tablet', 'Devices overall*', 'Server/Storage', 'Software', 'IT services', 'Infrastructure', 'Peripheral'][[SEP]]pre_coronavirus = [9, -6.3, np.nan, 0.8, 8.7, 3.2, np.nan, -3.8][[SEP]]probable_end_march = [6, -8, np.nan, -1, 8, 3, np.nan, np.nan][[SEP]]pessimistic_end_march = [-1, -13, np.nan, -3, 7, 2, np.nan, np.nan][[SEP]]forecast_may = [np.nan, np.nan, -12.4, np.nan, -1.9, -2.6, 3.8, np.nan][[SEP]]forecast_september = [-5, 6.1, np.nan, 2.1, 3.3, -2.2, np.nan, -9.8][[SEP]][[SEP]]x = np.arange(len(categories))  # the label locations[[SEP]]width = 0.15  # the width of the bars[[SEP]][[SEP]]fig, ax = plt.subplots(figsize=(12, 6))[[SEP]]rects1 = ax.bar(x - 2*width, pre_coronavirus, width, label='Pre-Coronavirus', color='blue')[[SEP]]rects2 = ax.bar(x - width, probable_end_march, width, label='Probable (end of March 2020)', color='black')[[SEP]]rects3 = ax.bar(x, pessimistic_end_march, width, label='Pessimistic (end of March 2020)', color='gray')[[SEP]]rects4 = ax.bar(x + width, forecast_may, width, label='Forecast - May 4, 2020', color='red')[[SEP]]rects5 = ax.bar(x + 2*width, forecast_september, width, label='Forecast - September 2020', color='green')[[SEP]][[SEP]]# Add some text for labels, title and custom x-axis tick labels, etc.[[SEP]]ax.set_xlabel('Information technology segment')[[SEP]]ax.set_ylabel('Year-on-year spending growth')[[SEP]]ax.set_title('Adjusted Information technology (IT) spending growth forecast for 2020, by category')[[SEP]]ax.set_xticks(x)[[SEP]]ax.set_xticklabels(categories)[[SEP]]ax.legend()[[SEP]][[SEP]]fig.tight_layout()[[SEP]][[SEP]]plt.show()
<code>[[SEP]]import matplotlib.pyplot as plt[[SEP]]import pandas as pd[[SEP]]import io[[SEP]][[SEP]]data = """[[SEP]]Date,Confirmed cases,Active cases,Recoveries,Deaths[[SEP]]12/26/20,3021964,541299,2426439,54226[[SEP]]12/25/20,2992706,540793,2398254,53659[[SEP]]12/24/20,2963688,539735,2370857,53096[[SEP]]12/23/20,2933753,537325,2343967,52461[[SEP]]12/22/20,2906503,535071,2319520,51912[[SEP]]12/21/20,2877727,531014,2295362,51351[[SEP]]12/20/20,2848377,521862,2275657,50858[[SEP]]12/19/20,2819429,514340,2254742,50347[[SEP]]12/18/20,2791220,512825,2228633,49762[[SEP]]12/17/20,2762668,510977,2202540,49151[[SEP]]12/16/20,2734454,509790,2176100,48564[[SEP]]12/15/20,2707945,510367,2149610,47968[[SEP]]12/14/20,2681256,509068,2124797,47391[[SEP]]12/13/20,2653928,500752,2106235,46941[[SEP]]12/12/20,2625848,493437,2085958,46453[[SEP]]12/11/20,2597711,491978,2059840,45893[[SEP]]12/10/20,2569126,490177,2033669,45280[[SEP]]12/09/20,2541199,488689,2007792,44718[[SEP]]12/08/20,2515009,489324,1981526,44159[[SEP]]12/07/20,2488912,488727,1956588,43597[[SEP]]12/06/20,2460770,479891,1937738,43141[[SEP]]12/05/20,2431731,472651,1916396,42684[[SEP]]12/04/20,2402949,472021,1888752,42176[[SEP]]12/03/20,2375546,474088,1859851,41607[[SEP]]12/02/20,2347401,475999,1830349,41053[[SEP]]12/01/20,2322056,478125,1803467,40464[[SEP]]11/30/20,2295654,477055,1778704,39895[[SEP]]11/29/20,2269316,468332,1761457,39527[[SEP]]11/28/20,2242633,464095,1739470,39068[[SEP]]11/27/20,2215533,464801,1712174,38558[[SEP]]11/26/20,2187990,464436,1685492,38062[[SEP]]11/25/20,2162503,464546,1660419,37538[[SEP]]11/24/20,2138828,467126,1634671,37031[[SEP]]11/23/20,2114502,466517,1611445,36540[[SEP]]11/22/20,2089329,457707,1595443,36179[[SEP]]11/21/20,2064748,451535,1577435,35778[[SEP]]11/20/20,2039926,453201,1551414,35311[[SEP]]11/19/20,2015608,454102,1526656,25573[[SEP]]11/18/20,1991998,456528,1501083,34387[[SEP]]11/17/20,1971013,461178,1475904,33931[[SEP]]11/16/20,1948603,461265,1453849,33489[[SEP]]11/15/20,1925825,452654,1439985,33186[[SEP]]11/14/20,1903253,444890,1425529,32834[[SEP]]11/13/20,1880551,441205,1406903,32443[[SEP]]11/12/20,1858568,438368,1388168,32032[[SEP]]11/11/20,1836960,436010,1369357,31593[[SEP]]11/10/20,1817109,435207,1350741,31161[[SEP]]11/09/20,1796132,430198,1335141,30793[[SEP]]11/08/20,1774334,419378,1324419,30537[[SEP]]11/07/20,1753836,410658,1312927,30251[[SEP]]11/06/20,1733440,407429,1296124,29887[[SEP]]11/05/20,1712858,404180,1279169,29509[[SEP]]11/04/20,1693454,397306,1266931,29217[[SEP]]11/03/20,1673686,393494,1251364,28828[[SEP]]11/02/20,1655038,390532,1236033,28473[[SEP]]11/01/20,1636781,382873,1225673,28235[[SEP]]10/31/20,1618116,374712,1215414,27990[[SEP]]10/30/20,1599976,371760,1200560,27656[[SEP]]10/29/20,1581693,368351,1186041,27301[[SEP]]10/28/20,1563976,365740,1171301,26935[[SEP]]10/27/20,1547774,362245,1158940,26589[[SEP]]10/26/20,1531224,358859,1146096,26269[[SEP]]10/25/20,1513877,349305,1138522,26050[[SEP]]10/24/20,1497167,340528,1130818,25821[[SEP]]10/23/20,1480646,335870,1119251,25525[[SEP]]10/22/20,1463306,330076,1107988,25242[[SEP]]10/21/20,1447335,325823,1096560,24952[[SEP]]10/20/20,1431635,321392,1085608,24635[[SEP]]10/19/20,1415316,315046,1075904,24366[[SEP]]10/18/20,1399334,304571,1070576,24187[[SEP]]10/17/20,1384235,295034,1065199,24002[[SEP]]10/16/20,1369313,289008,1056582,23723[[SEP]]10/15/20,1354163,282575,1048097,23491[[SEP]]10/14/20,1340409,277499,1039705,23205[[SEP]]10/13/20,1326178,271427,1031785,22966[[SEP]]10/12/20,1312310,265353,1024235,22722[[SEP]]10/11/20,1298718,255679,1020442,22597[[SEP]]10/10/20,1285084,246434,1016202,22448[[SEP]]10/09/20,127
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data from the statistic[[SEP]]years = np.arange(2010, 2019 + 1)[[SEP]]small_consumer = [506.9, 625.6, 651.8, 675.4, 558.8, 406.28, 415.19, 519.71, 572.49, 581.08][[SEP]]medium_consumer = [461.0, 537.5, 592.8, 581.7, 519.4, 411.49, 385.5, 413.2, 522.95, 544.25][[SEP]]large_consumer = [496.6, 581.8, 605.8, 570.5, 519.1, 313.02, 327.99, 400.49, 447.91, 484.69][[SEP]]average = [471.5, 572.0, 607.3, 588.2, 524.4, 359.6, 359.49, 413.81, 480.41, 518.1][[SEP]][[SEP]]# Plotting the data[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.bar(years - 0.3, small_consumer, width=0.2, label='Small consumer**', color='blue')[[SEP]]plt.bar(years - 0.1, medium_consumer, width=0.2, label='Medium consumer**', color='navy')[[SEP]]plt.bar(years + 0.1, large_consumer, width=0.2, label='Large consumer**', color='grey')[[SEP]]plt.bar(years + 0.3, average, width=0.2, label='Average', color='red')[[SEP]][[SEP]]# Adding labels and title[[SEP]]plt.xlabel('Year')[[SEP]]plt.ylabel('British pounds per metric ton')[[SEP]]plt.title('Average annual price of heavy fuel oil per metric ton for the manufacturing industry in Great Britain (2010-2019)')[[SEP]]plt.xticks(years)[[SEP]]plt.legend()[[SEP]][[SEP]]# Display the plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]countries = ["China", "Other countries (rounded)", "India", "United States**", "Turkey", "Vietnam", "Iran", "Russia", "Indonesia", "Brazil", "Japan", "Korea, Republic of", "Egypt", "Saudia Arabia***"][[SEP]]data_2016 = [2000, 620, 280, 109, 77, 90, 79, 80, 78, 60, 53, 50, 46, 75][[SEP]]data_2017 = [2000, 717, 280, 107, 80, 90, 80, 80, 78, 60, 53, 50, 48, 75][[SEP]]data_2018 = [2000, 716, 280, 103, 90, 90, 80, 80, 78, 60, 53, 50, 48, 75][[SEP]]data_2019 = [1970, 720, 280, 103, 92, 90, 81, 80, 78, 60, 53, 50, 48, 0][[SEP]][[SEP]]bar_width = 0.2[[SEP]]index = np.arange(len(countries))[[SEP]][[SEP]]# Plotting[[SEP]]fig, ax = plt.subplots(figsize=(10, 8))[[SEP]][[SEP]]bars1 = ax.barh(index - 1.5*bar_width, data_2016, bar_width, label='2016', color='blue')[[SEP]]bars2 = ax.barh(index - 0.5*bar_width, data_2017, bar_width, label='2017', color='black')[[SEP]]bars3 = ax.barh(index + 0.5*bar_width, data_2018, bar_width, label='2018', color='grey')[[SEP]]bars4 = ax.barh(index + 1.5*bar_width, data_2019, bar_width, label='2019', color='brown')[[SEP]][[SEP]]ax.set_xlabel('Capacity in million metric tons')[[SEP]]ax.set_title('Clinker capacity in selected countries from 2016 to 2019')[[SEP]]ax.set_yticks(index)[[SEP]]ax.set_yticklabels(countries)[[SEP]]ax.legend()[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]categories = ['All outlets', 'Pubs', 'Bars', 'Restaurants'][[SEP]]before_warning = [-15, -12, -14, -21][[SEP]]march_2020 = [-57.6, -57.8, -60, -56.4][[SEP]][[SEP]]x = np.arange(len(categories))  # the label locations[[SEP]]width = 0.35  # the width of the bars[[SEP]][[SEP]]fig, ax = plt.subplots()[[SEP]]rects1 = ax.bar(x - width/2, before_warning, width, label='Before COVID-19 warning (March 9-15)', color='royalblue')[[SEP]]rects2 = ax.bar(x + width/2, march_2020, width, label='March 2020', color='navy')[[SEP]][[SEP]]# Add some text for labels, title and custom x-axis tick labels, etc.[[SEP]]ax.set_xlabel('Types of like-for-like sales')[[SEP]]ax.set_ylabel('Year-over-year percentage change in sales')[[SEP]]ax.set_title('Percentage change in like-for-like sales of pub, bar and restaurant groups prior to the coronavirus (COVID-19) lockdown in Great Britain in March 2020')[[SEP]]ax.set_xticks(x)[[SEP]]ax.set_xticklabels(categories)[[SEP]]ax.legend()[[SEP]][[SEP]]# Attach a text label above each bar in *rects*, displaying its height.[[SEP]]def autolabel(rects):[[SEP]]    """Attach a text label above each bar in *rects*, displaying its height."""[[SEP]]    for rect in rects:[[SEP]]        height = rect.get_height()[[SEP]]        ax.annotate('{}'.format(height),[[SEP]]                    xy=(rect.get_x() + rect.get_width() / 2, height),[[SEP]]                    xytext=(0, 3),  # 3 points vertical offset[[SEP]]                    textcoords="offset points",[[SEP]]                    ha='center', va='bottom')[[SEP]][[SEP]]autolabel(rects1)[[SEP]]autolabel(rects2)[[SEP]][[SEP]]fig.tight_layout()[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]categories = ['Occupancy rate', 'Average daily rates (ADR)', 'Revenue per available room (RevPar)'][[SEP]]feb_2020 = [-2.3, 0.3, -2.1][[SEP]]march_2020 = [-21, -8.5, -27.7][[SEP]][[SEP]]x = np.arange(len(categories))  # the label locations[[SEP]]width = 0.35  # the width of the bars[[SEP]][[SEP]]fig, ax = plt.subplots()[[SEP]]rects1 = ax.bar(x - width/2, feb_2020, width, label='Feb 2020')[[SEP]]rects2 = ax.bar(x + width/2, march_2020, width, label='March 1-7, 2020')[[SEP]][[SEP]]# Add some text for labels, title and custom x-axis tick labels, etc.[[SEP]]ax.set_xlabel('Performance indicators for the hotel industry')[[SEP]]ax.set_ylabel('Percentage change compared to previous period')[[SEP]]ax.set_title('Year-over-year percentage change in performance indicators for the hotel industry in London in February and March 1-7, 2020')[[SEP]]ax.set_xticks(x)[[SEP]]ax.set_xticklabels(categories)[[SEP]]ax.legend()[[SEP]][[SEP]]# Function to add labels on bars[[SEP]]def autolabel(rects):[[SEP]]    for rect in rects:[[SEP]]        height = rect.get_height()[[SEP]]        ax.annotate('{}'.format(height),[[SEP]]                    xy=(rect.get_x() + rect.get_width() / 2, height),[[SEP]]                    xytext=(0, 3),  # 3 points vertical offset[[SEP]]                    textcoords="offset points",[[SEP]]                    ha='center', va='bottom')[[SEP]][[SEP]]autolabel(rects1)[[SEP]]autolabel(rects2)[[SEP]][[SEP]]fig.tight_layout()[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = [2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019][[SEP]]us_long_grain = [577, 567, 628, 571, 490, 438, 456, 531, 500][[SEP]]us_california_medium_grain = [821, 718, 692, 1007, 857, 651, 673, 888, 850][[SEP]]thai_parboiled = [563, 594, 530, 435, 392, 410, 421, 431, 428][[SEP]]india_25 = [409, 391, 402, 377, 337, 333, 361, 374, 361][[SEP]]pak_basmati = [1060, 1137, 1372, 1324, 849, 795, 1131, 1023, 982][[SEP]][[SEP]]# Plot[[SEP]]plt.figure(figsize=(10, 6))[[SEP]]plt.plot(years, us_long_grain, marker='o', label='U.S. Long Grain 2.4%')[[SEP]]plt.plot(years, us_california_medium_grain, marker='o', label='U.S. California Medium Grain 1.4%')[[SEP]]plt.plot(years, thai_parboiled, marker='o', label='Thai Parboiled 100%')[[SEP]]plt.plot(years, india_25, marker='o', label='India 25%')[[SEP]]plt.plot(years, pak_basmati, marker='o', label='Pak Basmati*')[[SEP]][[SEP]]# Labels and Title[[SEP]]plt.xlabel('Year')[[SEP]]plt.ylabel('Price in U.S. dollars per metric ton, f.o.b.')[[SEP]]plt.title('Export prices of rice worldwide from 2011 to 2019, by selected varieties')[[SEP]]plt.legend()[[SEP]]plt.grid(True)[[SEP]][[SEP]]# Show plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]categories = ['I purchased more online', 'I purchased less online', 'I do not make online purchases', 'No impact'][[SEP]]age_groups = ['16 to 24 years old', '25 to 34 years old', '35 to 44 years old', '45 to 54 years old', '55 years old and above'][[SEP]]data = [[[SEP]]    [36, 42, 44, 42, 38],  # I purchased more online[[SEP]]    [21, 21, 22, 21, 22],  # I purchased less online[[SEP]]    [23, 20, 19, 17, 18],  # I do not make online purchases[[SEP]]    [20, 16, 16, 20, 22]   # No impact[[SEP]]][[SEP]][[SEP]]# Convert data to numpy array for easier manipulation[[SEP]]data = np.array(data)[[SEP]][[SEP]]# Plotting[[SEP]]fig, ax = plt.subplots(figsize=(10, 6))[[SEP]][[SEP]]# Define bar width and positions[[SEP]]bar_width = 0.15[[SEP]]index = np.arange(len(categories))[[SEP]][[SEP]]# Plot each age group[[SEP]]for i, age_group in enumerate(age_groups):[[SEP]]    ax.bar(index + i * bar_width, data[:, i], bar_width, label=age_group)[[SEP]][[SEP]]# Add labels, title, and legend[[SEP]]ax.set_xlabel('Response')[[SEP]]ax.set_ylabel('Share of respondents')[[SEP]]ax.set_title('Impacts of COVID-19 pandemic on the online purchase behavior among consumers in the Philippines as of May 2020, by age group')[[SEP]]ax.set_xticks(index + bar_width * 2)[[SEP]]ax.set_xticklabels(categories)[[SEP]]ax.legend()[[SEP]][[SEP]]# Show plot[[SEP]]plt.tight_layout()[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]players = [[[SEP]]    "Devin Hester", "Brian Mitchell", "Dante Hall", "Eric Metcalf", "Josh Cribbs",[[SEP]]    "Deion Sanders", "Jacoby Jones", "Ollie Matson", "Mel J. Gray", "Darren Sproles",[[SEP]]    "Desmond Howard", "Bobby Mitchell", "Billy Johnson", "Allen Rossum", "Gale Sayers",[[SEP]]    "Jack Christiansen", "Leon Washington", "Dave Meggett", "Tamarick Vanover", "Rick Upchurch"[[SEP]]][[SEP]]kickoff_return = [5, 4, 6, 2, 8, 3, 5, 6, 6, 2, 0, 5, 2, 5, 6, 0, 8, 1, 4, 0][[SEP]]punt_return = [14, 9, 6, 10, 3, 6, 4, 3, 3, 7, 8, 3, 6, 3, 2, 8, 0, 7, 4, 8][[SEP]][[SEP]]# Plotting[[SEP]]fig, ax = plt.subplots(figsize=(10, 8))[[SEP]]bar_width = 0.35[[SEP]]index = np.arange(len(players))[[SEP]][[SEP]]bar1 = plt.barh(index, kickoff_return, bar_width, label='Kickoff return', color='blue')[[SEP]]bar2 = plt.barh(index + bar_width, punt_return, bar_width, label='Punt return', color='black')[[SEP]][[SEP]]plt.xlabel('Number of kick return touchdowns')[[SEP]]plt.ylabel('National Football League players')[[SEP]]plt.title('Players with the most kick/punt return touchdowns in NFL history as of January 9, 2020')[[SEP]]plt.yticks(index + bar_width / 2, players)[[SEP]]plt.legend()[[SEP]][[SEP]]plt.tight_layout()[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = [2009, 2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019][[SEP]]age_0_14 = [16.34, 15.65, 15.08, 14.63, 14.32, 13.99, 13.57, 13.35, 13.12, 12.92, 12.75][[SEP]]age_15_64 = [73.03, 73.61, 74.04, 74.22, 74.15, 74.03, 73.92, 73.46, 73.02, 72.52, 71.96][[SEP]]age_65_plus = [10.63, 10.74, 10.89, 11.15, 11.53, 11.99, 12.51, 13.2, 13.86, 14.56, 15.28][[SEP]][[SEP]]# Plot[[SEP]]fig, ax = plt.subplots()[[SEP]][[SEP]]ax.stackplot(years, age_0_14, age_15_64, age_65_plus, labels=['0-14 years', '15-64 years', '65 years and older'], colors=['#1f77b4', '#2ca02c', '#ff7f0e'])[[SEP]][[SEP]]# Labels and title[[SEP]]ax.set_xlabel('Year')[[SEP]]ax.set_ylabel('Share of population')[[SEP]]ax.set_title('Distribution of the population in Taiwan from 2009 to 2019, by broad age group')[[SEP]]ax.legend(loc='upper right')[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = [2010, 2011, 2012, 2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020][[SEP]]agriculture = [15.39, 15.02, 14.72, 14.36, 14.06, 13.85, 13.84, 13.84, 13.75, 13.71, 13.63][[SEP]]industry = [21.61, 21.53, 21.73, 21.6, 21.75, 21.57, 21.04, 20.8, 20.63, 20.41, 20.28][[SEP]]services = [63.0, 63.46, 63.55, 64.04, 64.19, 64.58, 65.13, 65.36, 65.62, 65.88, 66.09][[SEP]][[SEP]]# Plot[[SEP]]fig, ax = plt.subplots(figsize=(10, 6))[[SEP]][[SEP]]ax.stackplot(years, agriculture, industry, services, labels=['Agriculture', 'Industry', 'Services'], colors=['#1f77b4', '#ff7f0e', '#2ca02c'])[[SEP]][[SEP]]# Labels and title[[SEP]]ax.set_title('Latin America and the Caribbean: Distribution of Employment by Economic Sector (2010-2020)')[[SEP]]ax.set_xlabel('Year')[[SEP]]ax.set_ylabel('Percentage of Total Employment')[[SEP]]ax.legend(loc='upper left')[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]dates = ["January 29-30, 2015", "February 26-27, 2015", "March 30-31, 2015", [[SEP]]         "April 29-30, 2015", "May 28-29, 2015", "June 25-26, 2015", "July 30-31, 2015"][[SEP]]approve = [32, 33, 34, 37, 40, 40, 38][[SEP]]disapprove = [51, 53, 50, 51, 44, 46, 46][[SEP]]dont_know = [17, 14, 16, 12, 16, 14, 16][[SEP]][[SEP]]# Convert to numpy arrays[[SEP]]approve = np.array(approve)[[SEP]]disapprove = np.array(disapprove)[[SEP]]dont_know = np.array(dont_know)[[SEP]][[SEP]]# Plotting[[SEP]]fig, ax = plt.subplots(figsize=(10, 6))[[SEP]][[SEP]]bar_width = 0.6[[SEP]]bar_positions = np.arange(len(dates))[[SEP]][[SEP]]# Stacked bar chart[[SEP]]p1 = ax.barh(bar_positions, approve, bar_width, label='Approve', color='blue')[[SEP]]p2 = ax.barh(bar_positions, disapprove, bar_width, left=approve, label='Disapprove', color='darkblue')[[SEP]]p3 = ax.barh(bar_positions, dont_know, bar_width, left=approve + disapprove, label="Don't know", color='gray')[[SEP]][[SEP]]# Adding labels[[SEP]]ax.set_yticks(bar_positions)[[SEP]]ax.set_yticklabels(dates)[[SEP]]ax.set_xlabel('Share of respondents')[[SEP]]ax.set_title('Do you approve or disapprove of the government’s record to date? (2015)')[[SEP]]ax.legend()[[SEP]][[SEP]]# Adding data labels[[SEP]]for i in range(len(dates)):[[SEP]]    ax.text(approve[i] / 2, i, f'{approve[i]}%', va='center', ha='center', color='white', fontweight='bold')[[SEP]]    ax.text(approve[i] + disapprove[i] / 2, i, f'{disapprove[i]}%', va='center', ha='center', color='white', fontweight='bold')[[SEP]]    ax.text(approve[i] + disapprove[i] + dont_know[i] / 2, i, f'{dont_know[i]}%', va='center', ha='center', color='black', fontweight='bold')[[SEP]][[SEP]]plt.tight_layout()[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]years = ['2008-2013', '2013-2018'][[SEP]]luxury_segment = [24, 24.8][[SEP]]all_retail = [7.1, 11.9][[SEP]][[SEP]]x = np.arange(len(years))  # the label locations[[SEP]]width = 0.35  # the width of the bars[[SEP]][[SEP]]fig, ax = plt.subplots()[[SEP]]rects1 = ax.bar(x - width/2, luxury_segment, width, label='Luxury segment', color='royalblue')[[SEP]]rects2 = ax.bar(x + width/2, all_retail, width, label='All retail', color='navy')[[SEP]][[SEP]]# Add some text for labels, title and custom x-axis tick labels, etc.[[SEP]]ax.set_xlabel('Year')[[SEP]]ax.set_ylabel('Growth rate')[[SEP]]ax.set_title('Growth rate of the luxury retail segment in the United Kingdom (UK)')[[SEP]]ax.set_xticks(x)[[SEP]]ax.set_xticklabels(years)[[SEP]]ax.legend()[[SEP]][[SEP]]# Attach a text label above each bar in *rects*, displaying its height.[[SEP]]def autolabel(rects):[[SEP]]    for rect in rects:[[SEP]]        height = rect.get_height()[[SEP]]        ax.annotate('{}'.format(height),[[SEP]]                    xy=(rect.get_x() + rect.get_width() / 2, height),[[SEP]]                    xytext=(0, 3),  # 3 points vertical offset[[SEP]]                    textcoords="offset points",[[SEP]]                    ha='center', va='bottom')[[SEP]][[SEP]]autolabel(rects1)[[SEP]]autolabel(rects2)[[SEP]][[SEP]]fig.tight_layout()[[SEP]][[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]][[SEP]]# Data[[SEP]]years = list(range(2009, 2019 + 1))[[SEP]]ages_0_14 = [17.69, 17.52, 17.33, 17.2, 17.08, 16.94, 16.76, 16.58, 16.35, 16.11, 15.88][[SEP]]ages_15_64 = [67.24, 67.04, 66.78, 66.41, 65.99, 65.62, 65.32, 65.05, 64.85, 64.7, 64.51][[SEP]]ages_65_plus = [15.07, 15.44, 15.89, 16.39, 16.93, 17.44, 17.92, 18.37, 18.79, 19.2, 19.61][[SEP]][[SEP]]# Plot[[SEP]]fig, ax = plt.subplots()[[SEP]][[SEP]]ax.stackplot(years, ages_0_14, ages_15_64, ages_65_plus, labels=['Ages 0-14', 'Ages 15-64', 'Ages 65+'], colors=['#1f77b4', '#ff7f0e', '#2ca02c'])[[SEP]][[SEP]]# Labels and title[[SEP]]ax.set_title('Netherlands: Age distribution from 2009 to 2019')[[SEP]]ax.set_xlabel('Year')[[SEP]]ax.set_ylabel('Percentage of Population')[[SEP]]ax.legend(loc='upper right')[[SEP]][[SEP]]# Show plot[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]categories = ['Country', 'Rap/Hip-Hop', 'Classic rock', 'Pop', 'R&B', 'Hard rock/Metal', 'Blues', 'Alternative/Indie', 'Jazz', 'Dance/Electronic', 'Contemporary Christian', 'New Age', 'Folk', 'Punk Rock', 'Gospel/Choir', 'Soul/Funk', 'Classical', 'Latin', 'Reggae', 'None of these', 'World of Music'][[SEP]]white = [54, 49, 44, 43, 32, 28, 26, 24, 22, 20, 19, 18, 18, 17, 17, 15, 13, 11, 10, 10, 7][[SEP]]black = [31, 69, 25, 38, 53, 23, 24, 18, 28, 22, 25, 19, 8, 22, 33, 25, 20, 16, 20, 6, 10][[SEP]]hispanic = [38, 39, 29, 38, 24, 23, 18, 16, 20, 25, 13, 11, 8, 14, 9, 12, 10, 22, 13, 8, 5][[SEP]]other = [42, 48, 30, 41, 28, 16, 21, 17, 20, 21, 13, 18, 13, 13, 18, 13, 15, 13, 10, 13, 11][[SEP]][[SEP]]barWidth = 0.2[[SEP]][[SEP]]# Set position of bar on X axis[[SEP]]r1 = np.arange(len(categories))[[SEP]]r2 = [x + barWidth for x in r1][[SEP]]r3 = [x + barWidth for x in r2][[SEP]]r4 = [x + barWidth for x in r3][[SEP]][[SEP]]# Make the plot[[SEP]]plt.figure(figsize=(10, 8))[[SEP]]plt.barh(r1, white, color='blue', height=barWidth, edgecolor='grey', label='White')[[SEP]]plt.barh(r2, black, color='black', height=barWidth, edgecolor='grey', label='Black')[[SEP]]plt.barh(r3, hispanic, color='red', height=barWidth, edgecolor='grey', label='Hispanic')[[SEP]]plt.barh(r4, other, color='brown', height=barWidth, edgecolor='grey', label='Other')[[SEP]][[SEP]]# Add xticks on the middle of the group bars[[SEP]]plt.xlabel('Share of respondents (%)', fontweight='bold')[[SEP]]plt.ylabel('Music Genres', fontweight='bold')[[SEP]]plt.yticks([r + barWidth for r in range(len(categories))], categories)[[SEP]][[SEP]]# Create legend & Show graphic[[SEP]]plt.legend()[[SEP]]plt.title('Public opinion on the music genres which are representative of America today in the United States as of May 2018, by ethnicity')[[SEP]]plt.show()
import matplotlib.pyplot as plt[[SEP]]import numpy as np[[SEP]][[SEP]]# Data[[SEP]]device_types = ['Grand total', 'Streaming Box/Stick', 'Gaming console', 'Connected TV', 'PC/Mac', 'Phone', 'Tablet', 'Smart speaker'][[SEP]]data_2019 = [12.0, 3.9, 3.0, 2.6, 1.4, 0.7, 0.4, 0.1][[SEP]]data_2020 = [16.6, 5.4, 4.4, 3.6, 1.6, 1.0, 0.6, 0.1][[SEP]][[SEP]]x = np.arange(len(device_types))  # the label locations[[SEP]]width = 0.35  # the width of the bars[[SEP]][[SEP]]fig, ax = plt.subplots()[[SEP]]rects1 = ax.bar(x - width/2, data_2019, width, label='March 17-19, 2019')[[SEP]]rects2 = ax.bar(x + width/2, data_2020, width, label='March 15-17, 2020')[[SEP]][[SEP]]# Add some text for labels, title and custom x-axis tick labels, etc.[[SEP]]ax.set_xlabel('Device Type')[[SEP]]ax.set_ylabel('Average daily data usage (in GB)')[[SEP]]ax.set_title('Comparison of average daily in-home data usage in the United States by device type')[[SEP]]ax.set_xticks(x)[[SEP]]ax.set_xticklabels(device_types)[[SEP]]ax.legend()[[SEP]][[SEP]]fig.tight_layout()[[SEP]][[SEP]]plt.show()
